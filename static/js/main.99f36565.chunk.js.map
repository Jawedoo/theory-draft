{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","utils.ts","components/board/board.tsx","components/bench/bench-slot.tsx","components/bench/bench.tsx","stores/draft-store.ts","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/splash/splash.tsx","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","name","tier","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","Boolean","champion_Champion","BOARD_WIDTH","BOARD_HEIGHT","Board","inject","_dec","_class","observer","call","_this","draft","rows","toConsumableArray","Array","map","_","getRow","row","renderRow","i","start","boardUnits","slice","_this2","activeUnit","isOdd","activeBoardIndex","undefined","isBenched","bu","cell_Cell","getKey","source","dest","unitPickedUp","unitDropped","selectionA","selectionB","swapUnits","shiftUnitToBoard","BenchSlot","Bench","bench_dec","bench_class","benchedUnits","activeBenchIndex","bench_slot_BenchSlot","shiftUnitToBench","DraftStore","_temp","_class2","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","pool","currentHand","nextLevelXp","getXpForLevelUp","level","BENCH_SIZE","fill","console","log","initializePool","drawHand","isSplashOpen","selA","selB","selection","moveUnitToBench","moveUnitToBoard","clearUnitFromCurrentSpace","placedUnitCount","newBoardUnit","isHandLocked","roundCount","gold","calculateIncome","addXP","XP_PER_ROUND","REFRESH_COST","refreshHand","calculatePassiveIncome","calculateInterest","calculateStreakBonus","Math","min","floor","MAXIMIM_INTEREST","forEach","card","push","BUY_XP_COST","amount","xp","unitSelection","unitExists","getUnitSalePrice","tierBonus","cost","length","drawCard","odds","levels","tierOdds","roll","random","getCost","cardSet","filter","x","splice","champions","flatMap","poolSize","getInitialPoolSizeForChamp","guid","removeExtra","firstEmpty","findIndex","matchingBenchUnits","matchingBoardUnits","matchingUnits","availableToBuy","mergeUnits","c","_this3","extraUnits","champCount","reduce","m","val","keys","find","boardIndex","currentLevel","tiers","tier1","tier2","tier3","tier4","tier5","total","get","champIds","Set","classes","sort","obj","_this4","unitSynergies","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","draft_store_class","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","Coin","RefreshPanel","refresh","setTooltip","onClick","onMouseEnter","onMouseLeave","coin_Coin","BuyXpPanel","buyXP","progressStyle","transform","DraftSidebar","draft_sidebar_class","_this$props","hideAboveBar","lockClass","toggleHandLock","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","buyCard","DraftSell","sellUnit","getContent","tooltip","renderIncomeTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","alt","src","SynergyTier","synergy_tier_class","s","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","synergies_bar_SynergiesBar","nextRound","Hotkeys","useHotkeys","SplashScreen","MainPage","main_page_class2","main_page_descriptor","assertThisInitialized","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","draft_Draft","hotkeys_Hotkeys","main_page_class","App","react_default","a","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99f36565.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className=\"champion\" style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div ref={drop} className={`cell ${dragClass} ${activeClass} ${overClass}`}>\r\n            <div ref={drag} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Coords } from './stores/types';\r\n\r\nexport const BOARD_WIDTH = 7;\r\nexport const BOARD_HEIGHT = 3;\r\n\r\nexport const getIndexForCoords = (x: number, y: number): number => {\r\n    return y * BOARD_WIDTH + x;\r\n}\r\n\r\nexport const getCoordsForIndex = (index: number): Coords => {\r\n    return {\r\n        x: index % BOARD_WIDTH,\r\n        y: Math.floor(index / BOARD_WIDTH)\r\n    };\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BoardProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        if(!draft) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { draft } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return draft.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const {draft} = this.props;\r\n        const { activeUnit } = draft;\r\n        const isOdd = row%2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && !activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: false\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBoard(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div ref={drop} className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}>\r\n            <div ref={drag} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport './bench.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\ninterface BenchProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { benchedUnits, activeUnit } = draft;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map((unit, index) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: true\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBench(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import { observable, action, computed } from 'mobx';\r\n\r\nimport * as tiers from '../data/tiers.json';\r\nimport * as levels from '../data/levels.json';\r\nimport * as champions from '../data/champions.json';\r\nimport { synergies } from '../data/synergies.json';\r\nimport { Unit, ChampData, ChampCard, UnitSelection, BoardUnit, SynergyData, Synergy } from './types';\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../utils';\r\n\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    @observable\r\n    benchedUnits: (Unit | null)[] = [];\r\n\r\n    @observable\r\n    boardUnits: BoardUnit[] = [];\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    constructor() {\r\n        this.pool = [];\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.benchedUnits = [...Array(DraftStore.BENCH_SIZE)].fill(null);\r\n        this.boardUnits = [...Array(BOARD_WIDTH * BOARD_HEIGHT)].map(\r\n            (_, index) => ({ unit: undefined, index } as BoardUnit)\r\n        );\r\n    }\r\n\r\n    \r\n    @action\r\n    public start() {\r\n        console.log(\"Lets Go!\");     \r\n        this.initializePool();\r\n        this.drawHand();\r\n        this.isSplashOpen = false;\r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n            && selB.isBenched === selA.isBenched        \r\n    }\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        if(source.isBenched) {\r\n            this.moveUnitToBench(dest.unit, source.index);\r\n        } else {\r\n            this.moveUnitToBoard(dest.unit, source.index);\r\n        }\r\n\r\n        if(dest.isBenched) {\r\n             this.moveUnitToBench(source.unit, dest.index);\r\n         } else {\r\n            this.moveUnitToBoard(source.unit, dest.index);\r\n         }\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBench(selection: UnitSelection, index: number) {\r\n        //Only if bench is empty\r\n        if(this.benchedUnits[index] !== null) { \r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBench(selection.unit, index)\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBoard(selection: UnitSelection, index: number) {\r\n        //Only if board space is empty\r\n        if(this.boardUnits[index].unit !== undefined) { \r\n            return;\r\n        }\r\n\r\n        if(this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBoard(selection.unit, index)\r\n    }\r\n\r\n    private clearUnitFromCurrentSpace(selection: UnitSelection) {\r\n        if(selection.isBenched) {\r\n            this.benchedUnits[selection.index] = null;\r\n        } else {\r\n            this.boardUnits[selection.index].unit = undefined;\r\n        }\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBench(unit: Unit, index: number) {\r\n        this.benchedUnits[index] = unit;\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBoard(unit: Unit, index: number) {\r\n        const newBoardUnit = { index, unit } as BoardUnit;\r\n        this.boardUnits[index] = newBoardUnit;\r\n    }\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => champions.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (synergies as any)[key] as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x, index) => {\r\n                if (synergyData.exact && count === x) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;      \r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n\r\n    }\r\n\r\n    public calculateIncome(): number {\r\n        const passive = this.calculatePassiveIncome();\r\n        const interest =  this.calculateInterest();\r\n        const streak = this.calculateStreakBonus();\r\n        return passive + interest + streak;\r\n    }\r\n\r\n    public calculateInterest(): number {\r\n        return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n    }\r\n\r\n    public calculateStreakBonus(): number {\r\n        return 0; //TODO: Simulate Wins/Losses??\r\n    }\r\n\r\n    public calculatePassiveIncome(): number {\r\n        switch(this.roundCount) {\r\n            case 0: \r\n            case 1: return 2;\r\n            case 2:\r\n            case 3: return 3;\r\n            case 4: return 4;\r\n            default: return 5;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.pool.push(card);\r\n            }\r\n        });\r\n\r\n        this.currentHand = [];\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        let unitExists = false;\r\n        const { unit, index, isBenched } = unitSelection;\r\n\r\n        //Remove Unit;\r\n        if(isBenched) {\r\n            if(this.benchedUnits[index] !== null) {\r\n                this.benchedUnits[index] = null;\r\n                unitExists = true;\r\n            }\r\n        } else {\r\n            if(this.boardUnits[index].unit !== undefined) {\r\n                this.boardUnits[index].unit = undefined;\r\n                unitExists = true;\r\n            }\r\n        }\r\n\r\n        //If there was a unit to sell, give gold;\r\n        if(unitExists) {\r\n            this.gold += this.getUnitSalePrice(unit);\r\n        }\r\n    }\r\n\r\n    public getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = 0;\r\n        switch (unit.tier) {\r\n            case 2: {\r\n                tierBonus = 2;\r\n                break; \r\n            }\r\n            case 3: {\r\n                tierBonus = 4;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const key = `level${this.level}`;\r\n        \r\n        const odds = (levels.levels as any)[key].tierOdds;\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, odds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        this.currentHand.push(card);\r\n        this.pool.splice(index, 1);\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = champions.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.benchedUnits[firstEmpty] = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingBenchUnits = this.benchedUnits\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n            const matchingBoardUnits = this.boardUnits\r\n                .map(bu => bu.unit || null)\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const matchingUnits = [...matchingBenchUnits, ...matchingBoardUnits];\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n    @action\r\n    private mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n        const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n        const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n        const totalUnits: (Unit|null)[] = [...this.benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n        const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n        \r\n        //Remap to count champions\r\n        const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n            const id = unit.champ.id;\r\n            const val = (m as any)[id];\r\n            if (!val) {\r\n                (m as any)[id] = 1;\r\n            } else {\r\n                (m as any)[id] = val+1;\r\n            }\r\n            return m;\r\n        }, {});\r\n\r\n        //Find champs to merge\r\n        const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n        //Merge and upgrade the champs\r\n        idsToMerge.forEach(id => {\r\n            const champ = (champions.champions as ChampData[]).find(c => c.id === id);\r\n            \r\n            let index = -1;\r\n            //Remove all of that unit from bench\r\n            while(-1 !== (index = this.benchedUnits.findIndex(unit => \r\n                unit !== null &&\r\n                unit.champ.id === id &&\r\n                unit.tier === tier\r\n            ))) {\r\n                this.benchedUnits[index] = null;\r\n            }\r\n\r\n            //Remove all of that unit from the board\r\n            index = -1;\r\n            let boardIndex = -1;\r\n            while(-1 !== (index = this.boardUnits.findIndex(boardUnit => \r\n                boardUnit.unit !== undefined &&\r\n                boardUnit.unit.champ.id === id &&\r\n                boardUnit.unit.tier === tier\r\n            ))) {\r\n                this.boardUnits[index].unit = undefined;\r\n                boardIndex = index;\r\n            }\r\n\r\n            //Add upgraded unit\r\n            //Priorise returning to board\r\n            if(boardIndex !== -1) {\r\n                this.boardUnits[boardIndex].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;\r\n            } else {\r\n                const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n                this.benchedUnits[firstEmpty] = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;    \r\n            }\r\n        });\r\n\r\n        if (tier === 1) {\r\n            this.mergeUnits(2);\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        return (levels.levels as any)[`level${currentLevel}`].xp;\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const champ = champions.champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return tiers.unitsPerTier.tier1;\r\n            case 2: return tiers.unitsPerTier.tier2;\r\n            case 3: return tiers.unitsPerTier.tier3;\r\n            case 4: return tiers.unitsPerTier.tier4;\r\n            case 5: return tiers.unitsPerTier.tier5;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getUnitsByCost(cost: number) {\r\n        return champions.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(null)}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(null)}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    hideAboveBar: boolean;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, hideAboveBar, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = draft;\r\n\r\n        const lockClass = draft.isHandLocked ? 'closed' : 'open';\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                {!hideAboveBar && <div className=\"draft-lock above-bar\" onClick={() => draft.toggleHandLock()}>\r\n                    <div className={`lock ${lockClass}`}></div>\r\n                </div> }\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => draft.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => draft.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: ChampCard[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => Boolean(card) ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface DraftMainProps {\r\n    draft: DraftStore;\r\n    hideAboveBar: boolean;\r\n    setTooltip: (area?: string) => void\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, hideAboveBar, setTooltip } = this.props;\r\n        const { currentHand, gold} = draft;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                {!hideAboveBar && <div className=\"draft-gold-bar above-bar\" \r\n                    onMouseEnter={() => setTooltip('income')}\r\n                    onMouseLeave={() => setTooltip(null)}\r\n                >\r\n                    <div className=\"draft-gold\">\r\n                        <Coin/>{gold}\r\n                    </div>\r\n                </div>}\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.draft.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\ninterface DraftSellProps {\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({\r\n    draft\r\n}) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, draft),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = draft;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = draft.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"message\">\r\n                <i className=\"trash\"></i>\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, draft: DraftStore) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index,\r\n        isBenched: item.type === Types.BENCH\r\n    } as UnitSelection;\r\n    draft.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh your hand of cards</div>\r\n            <div><i>Hotkey: Shift + D</i></div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy 4 XP</div>\r\n            <div><i>Hotkey: Shift + F</i></div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {draft.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{draft.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{draft.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{draft.calculateStreakBonus()}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement => {\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(draft);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\n\r\ninterface DraftProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip?: string;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: null\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        const showSell = draft.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        return (\r\n            <section className=\"draft\">\r\n                <DraftSidebar draft={draft} hideAboveBar={showSell} setTooltip={setTooltip} />\r\n                <DraftMain draft={draft} hideAboveBar={showSell} setTooltip={setTooltip} />              \r\n                {showSell && <DraftSell draft={draft} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1];\r\n        \r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon\">\r\n                   <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                </div>\r\n               <span>\r\n                {synergy.name}: {synergy.count}\r\n                {nextBonus > 0 && <span> / {nextBonus}</span>}\r\n               </span>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    draft: DraftStore\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        return this.props.draft.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\n\r\nimport './simulation.scss';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\ninterface SimulationProps {\r\n    draft?: DraftStore\r\n}\r\n\r\n@inject(\"draft\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        if (!draft) { return null; }\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar draft={draft} />\r\n                    <div className=\"level-section\">\r\n                        <span>Units Placed: {draft.placedUnitCount} / { draft.level}</span>\r\n                    </div>\r\n                    <div className=\"round-section\">\r\n                        <span>Current Round: {draft.roundCount}</span>\r\n                        <button onClick={() => draft.nextRound()}>Next Round</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"shift+r\", () => draft.nextRound());\r\n    useHotkeys('shift+d', () => draft.refreshHand());\r\n    useHotkeys('shift+f', () => draft.buyXP());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport \"./splash.scss\";\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n}\r\n\r\nexport const SplashScreen: React.FC<SplashScreenProps> = ({ begin }) => {\r\n    return (\r\n        <div className=\"splash\">\r\n            <div className=\"inner\">\r\n                <h1>TheoryDraft for</h1>\r\n                <div className=\"tft-logo\"></div>\r\n                <p> A Drafting Simulator and Practice Tool</p>\r\n                <div className=\"tft-end-cap\"></div>\r\n                <div className=\"actions\">\r\n                    <button className=\"action\" onClick={begin}>\r\n                        Begin\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.draftStore = new DraftStore();\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} >\r\n                        <>\r\n                            <div className=\"split\">\r\n                                <div className=\"split-section aside\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"split-section main\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}