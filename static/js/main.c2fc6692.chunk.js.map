{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","stores/ai.ts","stores/summoner.ts","stores/draft-store.ts","components/board/board.tsx","utils.ts","components/bench/bench-slot.tsx","components/bench/bench.tsx","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/next-round-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/advanced/editor.tsx","components/advanced/advanced.tsx","components/splash/splash.tsx","stores/data-store.ts","components/simulation/opponents.tsx","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","tier","name","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","onHoverStart","onHoverEnd","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","onMouseEnter","onMouseLeave","undefined","Boolean","champion_Champion","AI","summoner","_this","potentialCards","currentHand","filter","x","cost","gold","spendingLimit","willingToSpend","totalSpent","_loop","card","getPurchasePreference","buyCard","guid","length","DraftStore","BUY_XP_COST","buyXP","nearestTen","Math","floor","min","max","cards","threshold","_this2","withinThreshold","map","weight","getSynergyWeight","getExistingUnitWeight","getRarityWeight","pref","reduce","best","current","existingClasses","keys","unitSynergies","classes","includes","matchingUnits","allUnits","sort","reverse","Summoner","_class","draft","isPlayer","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","showPlacedDisposer","autorun","placedUnitCount","showPlaced","setTimeout","nextLevelXp","getXpForLevelUp","level","toConsumableArray","Array","BOARD_SIZE","BENCH_SIZE","_","get","slice","health","drawHand","getRandomStartingUnit","giveRandomStartingUnit","calculateIncome","addXP","XP_PER_ROUND","isHandLocked","REFRESH_COST","refreshHand","amount","calculatePassiveIncome","calculateInterest","calculateStreakBonus","MAXIMIM_INTEREST","roundCount","xp","currentLevel","dataStore","levels","forEach","pool","push","splice","drawCard","removeExtra","firstEmpty","benchedUnits","findIndex","bu","availableToBuy","mergeUnits","c","_this3","extraUnits","boardUnits","champCount","m","val","champions","find","boardIndex","selection","activeUnit","hoveredUnit","unitSelection","getUnitSalePrice","returnUnitToPool","sellUnit","source","dest","moveUnit","clearUnitFromSlot","_this4","champIds","Set","flatMap","obj","_this5","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","ai","draft_store_temp","_class2","draft_store_descriptor","draft_store_descriptor2","draft_store_descriptor3","draft_store_descriptor4","draft_store_descriptor5","draft_store_descriptor6","draft_store_descriptor7","roundInterval","summoners","INITIAL_PLAYER_COUNT","player","initializePool","s","start","isSplashOpen","startTimer","potentialChamps","getChampsByCost","random","poolIndex","selA","selB","roundTimer","TIME_PER_ROUND","nextRound","purchaseUnit","isPaused","clearInterval","setInterval","guids","iterations","pow","levelData","availableLevels","odds","tierOdds","multiplier","a","b","adjustedOdds","roll","getCost","cardSet","indexToRemove","poolSize","getInitialPoolSizeForChamp","_this$dataStore","unitsPerTier","total","tierBonus","draft_store_class","Board","inject","_dec","board_class","observer","call","rows","getRow","row","renderRow","i","isOdd","activeBoardIndex","cell_Cell","getKey","unitPickedUp","unitDropped","enterUnit","exitUnit","selectionA","selectionB","swapUnits","shiftUnitToSlot","BenchSlot","Bench","bench_dec","bench_class","activeBenchIndex","bench_slot_BenchSlot","Coin","RefreshPanel","refresh","setTooltip","onClick","coin_Coin","BuyXpPanel","progressStyle","transform","NextRoundPanel","timer","currentRound","DraftSidebar","draft_sidebar_class","_this$props","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","next_round_panel_NextRoundPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","DraftSell","getContent","tooltip","renderIncomeTooltip","renderNextRoundTooltip","renderLockHandTooltip","renderTimerTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","lockClass","timerClass","toggleTimer","toggleHandLock","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","bonusesToDisplay","stage","alt","src","passive","base","bonus","SynergyTier","synergy_tier_class","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","tiers","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","fadeClass","synergies_bar_SynergiesBar","Hotkeys","useHotkeys","sellHoveredUnit","Editor","json","onChange","schema","es","ace","theme","AdvancedScreen","activeDataset","updatedData","data","mapToObj","JSON","parse","stringify","_this$state","setLevelsFromJson","setUnitsPerTierFromJson","setChampsFromJson","setSynergiesFromJson","close","setActive","setActiveDataset","bind","getTitle","editor_Editor","getActiveJson","j","updateActiveDataset","getSchema","applyChanges","SplashScreen","isAdvancedOpen","advanced_AdvancedScreen","closeAdvancedPage","openAdvancedPage","DataStore","data_store_temp","data_store_class2","data_store_descriptor","data_store_descriptor2","data_store_descriptor3","data_store_descriptor4","Map","tiersData","levelsData","championsData","clear","set","Number","emptyLevel","emptyChamp","data_store_class","Opponents","opponents_dec","opponents_class","opponents","renderOpponent","opponent","units","MainPage","main_page_class2","main_page_descriptor","assertThisInitialized","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","opponents_Opponents","draft_Draft","hotkeys_Hotkeys","main_page_class","App","react_default","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2fc6692.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champion champion--tier-${unit.tier}`} style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n    onHoverStart: (unit: Unit, index: number) => void;\r\n    onHoverEnd: () => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop,\r\n    onHoverStart,\r\n    onHoverEnd\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            className={`cell ${dragClass} ${activeClass} ${overClass}`}\r\n            onMouseEnter={() => onHoverStart(unit, index)}\r\n            onMouseLeave={() => onHoverEnd()}\r\n        >\r\n            <div ref={unit ? drag : undefined} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Summoner } from './summoner';\r\nimport { DraftStore } from './draft-store';\r\nimport { ChampCard } from './types';\r\n\r\ninterface CardPref {\r\n    card: ChampCard;\r\n    weight: number;\r\n}\r\n\r\nexport class AI {\r\n    purchaseUnit(summoner: Summoner): void {\r\n        //Limit to affordable cards\r\n        let potentialCards = summoner.currentHand\r\n            .filter(x => x !== null && x.champ.cost < summoner.gold) as ChampCard[];\r\n    \r\n        const spendingLimit = this.willingToSpend(summoner);\r\n        let totalSpent = 0;\r\n        \r\n        while (potentialCards.length > 0 && totalSpent < spendingLimit ) {\r\n            const card = this.getPurchasePreference(potentialCards, summoner, 0);\r\n        \r\n            if (card !== null) {\r\n                summoner.buyCard(card);\r\n                totalSpent += card.champ.cost;\r\n                potentialCards = potentialCards.filter(x => x.guid !== card.guid);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (spendingLimit - totalSpent > DraftStore.BUY_XP_COST) {\r\n            summoner.buyXP();\r\n        }\r\n\r\n    };\r\n    \r\n    //If they have more than 50 gold, spend all the excess down to 40\r\n    //Otherwise, spend down the the nearest 10, to a minimum of 5 gold\r\n    willingToSpend(summoner: Summoner): number {\r\n        if(summoner.gold > 50) {\r\n            return summoner.gold - 40;\r\n        } else {\r\n            const nearestTen = Math.floor(summoner.gold / 10) * 10;\r\n            return Math.min(Math.max(summoner.gold - nearestTen, 5), summoner.gold);\r\n        }\r\n    };\r\n\r\n    getPurchasePreference(cards: ChampCard[], summoner: Summoner, threshold: number): ChampCard|null {\r\n\r\n        //Add weights for:\r\n        // +1 Has this champ at Tier 1\r\n        // +3 Has this champ at Tier 2\r\n        // -10 Has this champ at Tier 3\r\n        // +1 Per synergy bonus\r\n        // +2 For a 5 cost\r\n        // +1 For a 4 cost\r\n\r\n        const allWeighted: CardPref[] = cards.map(card => {\r\n            let weight = this.getSynergyWeight(summoner, card)\r\n             + this.getExistingUnitWeight(summoner, card)\r\n             + this.getRarityWeight(card);\r\n\r\n            return {\r\n                card,\r\n                weight\r\n            };\r\n        });\r\n\r\n        const withinThreshold: CardPref[] = allWeighted.filter(pref => pref.weight >= threshold);\r\n        if (withinThreshold.length === 0) { return null; }\r\n\r\n        const topCard: CardPref = withinThreshold.reduce((best, current) => {\r\n            if (best == null) {\r\n                return current;\r\n            } else if (best !== null && best.weight < current.weight) {\r\n                return current;\r\n            } else {\r\n                return best;\r\n            }\r\n        }, withinThreshold[0]);\r\n\r\n\r\n        return topCard.card;\r\n    }\r\n\r\n    getSynergyWeight(summoner: Summoner, card: ChampCard): number {\r\n        const existingClasses = Object.keys (summoner.unitSynergies)\r\n        return card.champ.classes.filter(x => existingClasses.includes(x)).length;\r\n    }\r\n\r\n    getExistingUnitWeight(summoner: Summoner, card: ChampCard): number {\r\n        const matchingUnits = summoner.allUnits.filter(\r\n            x => x.unit !== undefined &&\r\n            x.unit.champ.id === card.champ.id\r\n        );\r\n\r\n        if(matchingUnits.length === 0) { return 0; }\r\n\r\n        const topTier = matchingUnits.map(x => x.unit !== undefined ? x.unit.tier : 0)\r\n            .sort()\r\n            .reverse()[0];\r\n\r\n        switch(topTier) {\r\n            case 1: return 1;\r\n            case 2: return 3;\r\n            case 3: return -10;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    getRarityWeight(card: ChampCard): number {\r\n        switch(card.champ.cost) {\r\n            case 5: return 2;\r\n            case 4: return 1;\r\n            default: return 0;\r\n        }\r\n    }\r\n}\r\n\r\n","import { DraftStore } from './draft-store';\r\nimport { observable, action, computed, autorun } from 'mobx';\r\nimport { UnitSelection, BoardUnit, ChampCard, Unit, Synergy, SynergyData, SynergyStage, ChampData } from './types';\r\nexport class Summoner {\r\n\r\n    draft: DraftStore;\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    //All Units 0-8 = Bench, 9+ = Board\r\n    @observable\r\n    allUnits: BoardUnit[] = [];\r\n\r\n    @computed\r\n    get benchedUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(0,DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @computed \r\n    get boardUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    hoveredUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    health: number = 100;\r\n\r\n    @computed\r\n    public get isAlive() {\r\n        return this.health > 0;\r\n    }\r\n\r\n    @observable\r\n    isPlayer: boolean;\r\n    \r\n    constructor(draft: DraftStore, isPlayer: boolean) {\r\n        this.draft = draft;\r\n\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.isPlayer = isPlayer;\r\n\r\n        this.allUnits = [...Array(DraftStore.BOARD_SIZE + DraftStore.BENCH_SIZE)].map(\r\n            (_, index) => ({unit: undefined, index})\r\n        );\r\n    }\r\n\r\n    @action\r\n    public start() {\r\n        this.drawHand();        \r\n        this.getRandomStartingUnit();\r\n    }\r\n\r\n    @action\r\n    private getRandomStartingUnit() {\r\n        this.draft.giveRandomStartingUnit(this);\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n    }\r\n\r\n/****************\r\n *  HEALTH\r\n ***************/\r\n@action\r\npublic takeDamage(amount: number) {\r\n    this.health = Math.max(this.health - amount, 0);\r\n}\r\n\r\n/**************\r\n * INCOME\r\n ****************/\r\n\r\npublic calculateIncome(): number {\r\n    const passive = this.calculatePassiveIncome();\r\n    const interest =  this.calculateInterest();\r\n    const streak = this.calculateStreakBonus();\r\n    return passive + interest + streak;\r\n}\r\n\r\npublic calculateInterest(): number {\r\n    return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n}\r\n\r\npublic calculateStreakBonus(): number {\r\n    return 0; //TODO: Simulate Wins/Losses??\r\n}\r\n\r\npublic calculatePassiveIncome(): number {\r\n    switch(this.draft.roundCount) {\r\n        case 0: \r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 3;\r\n        case 4: return 4;\r\n        default: return 5;\r\n    }\r\n}\r\n\r\n/****************\r\n * XP AND LEVELS\r\n ****************/\r\n    \r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        const level = (this.draft.dataStore.levels).get(`level${currentLevel}`);\r\n        return level ? level.xp : 0;\r\n    }\r\n\r\n/****************\r\n * STORE / CARDS\r\n ****************/\r\n    \r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.draft.pool.push(card); //TODO: Refactor into draft.returnCardToPool\r\n            }\r\n        });\r\n\r\n        this.currentHand.splice(0, 5);\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5 && this.draft.pool.length > 0) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const card = this.draft.drawCard(this);\r\n        if (card === null) {\r\n            return;\r\n        }\r\n        this.currentHand.push(card);\r\n    }\r\n    \r\n    \r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x.unit === undefined);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.allUnits[firstEmpty].unit = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingUnits = this.allUnits\r\n                .map(bu => bu.unit)\r\n                .filter(unit => unit !== undefined && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n\r\n/*************************\r\n * UNITS (BENCH AND BOARD)\r\n *************************/\r\n\r\n    @action\r\n    private mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n        const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n        const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n        const benchedUnits: (Unit|null)[] = this.benchedUnits.map(bu => bu.unit || null);\r\n        const totalUnits: (Unit|null)[] = [...benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n        const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n        \r\n        //Remap to count champions\r\n        const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n            const id = unit.champ.id;\r\n            const val = (m as any)[id];\r\n            if (!val) {\r\n                (m as any)[id] = 1;\r\n            } else {\r\n                (m as any)[id] = val+1;\r\n            }\r\n            return m;\r\n        }, {});\r\n\r\n        //Find champs to merge\r\n        const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n        //Merge and upgrade the champs\r\n        idsToMerge.forEach(id => {\r\n            const champ = (this.draft.dataStore.champions).find(c => c.id === id);\r\n            \r\n            //Remove all of that unit from bench and board\r\n            let index = -1;\r\n            let boardIndex = -1;\r\n            while(-1 !== (index = this.allUnits.findIndex(boardUnit => \r\n                boardUnit.unit !== undefined &&\r\n                boardUnit.unit.champ.id === id &&\r\n                boardUnit.unit.tier === tier\r\n            ))) {\r\n                this.allUnits[index].unit = undefined;\r\n                if (index >= DraftStore.BENCH_SIZE) {\r\n                    boardIndex = index;\r\n                }\r\n            }\r\n\r\n            //Add upgraded unit\r\n            //Priorise returning to board\r\n            if(boardIndex !== -1) {\r\n                this.allUnits[boardIndex].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;\r\n            } else {\r\n                const firstEmpty = this.allUnits.findIndex(x => x.unit === undefined);\r\n                this.allUnits[firstEmpty].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;    \r\n            }\r\n        });\r\n\r\n        if (tier === 1) {\r\n            this.mergeUnits(2);\r\n        }\r\n    }\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action enterUnit(boardUnit: BoardUnit) {\r\n        this.hoveredUnit = boardUnit as UnitSelection;\r\n    }\r\n\r\n    @action exitUnit() {\r\n        this.hoveredUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        const { unit, index } = unitSelection;\r\n\r\n        //If there is a unit to sell, give gold;\r\n        if(this.allUnits[index].unit !== undefined) {\r\n            this.allUnits[index].unit = undefined;\r\n            this.gold += DraftStore.getUnitSalePrice(unit);\r\n            this.draft.returnUnitToPool(unit);\r\n        }\r\n    }\r\n\r\n    @action\r\n    public sellHoveredUnit() {\r\n        if(this.hoveredUnit !== undefined) {\r\n            this.sellUnit(this.hoveredUnit);\r\n        }\r\n    }\r\n    \r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        this.moveUnit(dest.unit, source.index);\r\n        this.moveUnit(source.unit, dest.index);\r\n    }\r\n\r\n    @action shiftUnitToSlot(boardUnit: BoardUnit, index: number) {\r\n\r\n        //Only if the slot is empty\r\n        if (this.allUnits[index].unit !== undefined || !boardUnit.unit) {\r\n            return;\r\n        }\r\n\r\n        //If it's to be placed on the board, enforece the unit limit\r\n        if(index >= DraftStore.BENCH_SIZE && this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current slot\r\n        this.clearUnitFromSlot(boardUnit);\r\n\r\n        //Place into new slot\r\n        this.allUnits[index].unit = boardUnit.unit;\r\n    }\r\n\r\n    private clearUnitFromSlot(boardUnit: BoardUnit) {\r\n        this.allUnits[boardUnit.index].unit = undefined;\r\n    }\r\n\r\n    @action\r\n    private moveUnit(unit: Unit, index: number) {\r\n        this.allUnits[index].unit = unit;\r\n    }\r\n\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n\r\n    @observable\r\n    showPlaced: boolean = false;\r\n\r\n    public showPlacedDisposer = autorun(() => {\r\n        if (this.placedUnitCount !== -1) {\r\n            this.showPlaced = true;\r\n            setTimeout(() => {\r\n                this.showPlaced = false;\r\n            }, 500);          \r\n        }\r\n    });\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => this.draft.dataStore.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (this.draft.dataStore.synergies).get(key) as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x: SynergyStage, index: number) => {\r\n                if (synergyData.exact && count === x.amount) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x.amount) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n}","import { observable, action } from 'mobx';\r\nimport { AI } from './ai';\r\nimport { Unit, ChampCard, UnitSelection } from './types';\r\nimport { DataStore } from './data-store';\r\nimport { Summoner } from './summoner';\r\n\r\nconst ai = new AI();\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static BOARD_SIZE = 10;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n    public static TIME_PER_ROUND = 30;//seconds\r\n    public static INITIAL_PLAYER_COUNT = 8;\r\n\r\n    dataStore: DataStore;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    @observable\r\n    summoners: Summoner[];\r\n\r\n    @observable\r\n    player: Summoner;\r\n\r\n    constructor(dataStore: DataStore) {\r\n        this.dataStore = dataStore;\r\n        this.pool = [];\r\n        this.summoners = [...Array(DraftStore.INITIAL_PLAYER_COUNT)]\r\n            .map((_, index) => new Summoner(this, index === 0));\r\n        //First summoner is always the player;\r\n        this.player = this.summoners[0]; \r\n    }\r\n    \r\n    @action\r\n    public start() { \r\n        this.initializePool();\r\n\r\n        this.summoners.forEach(s => s.start());\r\n\r\n        this.isSplashOpen = false;\r\n\r\n        this.startTimer();\r\n\r\n        \r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    public giveRandomStartingUnit(summoner: Summoner) {\r\n        //Always start with a 2 cost unit\r\n        const potentialChamps = this.getChampsByCost(2);\r\n        const index = Math.floor(Math.random() * potentialChamps.length);\r\n        const champ = potentialChamps[index];\r\n\r\n        //Find that champ\r\n        const poolIndex = this.pool.findIndex(x => x.champ.id === champ.id);\r\n        //Remove from pool\r\n        this.pool.splice(poolIndex, 1);\r\n        \r\n        //Add to bench\r\n        summoner.allUnits[0].unit = {\r\n            tier: 1,\r\n            champ\r\n        };\r\n\r\n    }\r\n \r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;   \r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;   \r\n\r\n        this.summoners.forEach((summoner, index) => {\r\n            summoner.nextRound();\r\n            if(index > 0) {\r\n                ai.purchaseUnit(summoner);\r\n            }\r\n        });\r\n    }\r\n\r\n    @observable\r\n    roundTimer: number = DraftStore.TIME_PER_ROUND;\r\n\r\n    @observable\r\n    isPaused: boolean = true;\r\n\r\n    private roundInterval: any = null;\r\n\r\n    @action\r\n    public startTimer() {\r\n        this.isPaused = false;\r\n\r\n        if(this.roundInterval) {\r\n            clearInterval(this.roundInterval);\r\n        }\r\n\r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;\r\n\r\n        this.roundInterval = setInterval(() => {\r\n            if(this.isPaused) { return; }\r\n            --this.roundTimer;\r\n\r\n            if(this.roundTimer <= 0) {\r\n                this.nextRound();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    @action\r\n    public toggleTimer() {\r\n        this.isPaused = !this.isPaused;\r\n    }\r\n\r\n    @action\r\n    public  returnUnitToPool(unit: Unit) {\r\n        const {champ} = unit;\r\n        const unitsInPool = this.pool.filter(x => x.champ.id === champ.id);\r\n        const guids = unitsInPool.map(x => x.guid);\r\n\r\n        let iterations = 3**(unit.tier - 1);\r\n        \r\n        let index = 0;\r\n        while(iterations > 0) {\r\n            const guid = `${champ.id}_${index}`;\r\n            if(!guids.includes(guid)) {\r\n                --iterations;\r\n                this.pool.push({\r\n                    guid,\r\n                    champ\r\n                });\r\n            }\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    public static getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = (unit.tier - 1) * 2;\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawCard(summoner: Summoner) {\r\n        const key = `level${summoner.level}`;\r\n        const levelData = this.dataStore.levels.get(key);\r\n\r\n        const availableLevels = [...new Set(this.pool.map(x => x.champ.cost))];\r\n        \r\n        const odds = levelData ? levelData.tierOdds : [0,0,0,0,0];\r\n\r\n        const oddsTotal = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x : 0)\r\n            .reduce((a, b) => a + b, 0);\r\n\r\n        const multiplier = 1 / oddsTotal;\r\n\r\n        const adjustedOdds = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x * multiplier : 0);\r\n\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, adjustedOdds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n\r\n        if(cardSet.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        const indexToRemove = this.pool.findIndex(c => c !== null && c.guid === card.guid);\r\n        this.pool.splice(indexToRemove, 1);\r\n        \r\n        return card;\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = this.dataStore.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const { unitsPerTier, champions} = this.dataStore;\r\n        const champ = champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return unitsPerTier.get(\"tier1\") || 0;\r\n            case 2: return unitsPerTier.get(\"tier2\") || 0;\r\n            case 3: return unitsPerTier.get(\"tier3\") || 0;\r\n            case 4: return unitsPerTier.get(\"tier4\") || 0;\r\n            case 5: return unitsPerTier.get(\"tier5\") || 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getChampsByCost(cost: number) {\r\n        return this.dataStore.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface BoardProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { player } = this.props;\r\n\r\n        if(!player) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { player } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return player.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const { player } = this.props;\r\n        const { activeUnit } = player;\r\n        const isOdd = row % 2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && activeUnit.index >= DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                        onHoverStart={(unit, index) => this.onHoverStart(unit, index)}\r\n                        onHoverEnd={() => this.onHoverEnd()}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onHoverStart(unit: Unit, index: number) {\r\n        if(unit !== undefined) {\r\n            this.props.player.enterUnit({\r\n                unit,\r\n                index\r\n            } as BoardUnit);\r\n        }\r\n    }\r\n\r\n    private onHoverEnd() {\r\n        this.props.player.exitUnit();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n\r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","export const BOARD_WIDTH = 5;\r\nexport const BOARD_HEIGHT = 2;\r\n","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n    onHoverStart: (unit: Unit, index: number) => void;\r\n    onHoverEnd: () => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop,\r\n    onHoverStart,\r\n    onHoverEnd\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}\r\n            onMouseEnter={() => onHoverStart(unit, index)}\r\n            onMouseLeave={() => onHoverEnd()}\r\n        >\r\n            <div ref={unit ? drag : undefined} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit, BoardUnit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport './bench.scss';\r\n\r\ninterface BenchProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { benchedUnits, activeUnit } = player;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.index < DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map(({unit, index}) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    onHoverStart={(unit, index) => this.onHoverStart(unit, index)}\r\n                    onHoverEnd={() => this.onHoverEnd()}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onHoverStart(unit: Unit, index: number) {\r\n        if(unit !== undefined) {\r\n            this.props.player.enterUnit({\r\n                unit,\r\n                index\r\n            } as BoardUnit);\r\n        }\r\n    }\r\n\r\n    private onHoverEnd() {\r\n        this.props.player.exitUnit();\r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(\"\")}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface NextRoundPanelProps {\r\n    nextRound: () => void;\r\n    setTooltip: (area: string) => void;\r\n    isPaused: boolean;\r\n    timer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport const NextRoundPanel: React.FC<NextRoundPanelProps> = ({ nextRound, setTooltip, isPaused, timer, currentRound }) => {\r\n    return (<div className=\"sidebar-item next-round clickable\" onClick={nextRound}>\r\n        <div className=\"next-round-panel\" onMouseEnter={() => setTooltip('nextRound')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Go to Next Round</div>\r\n                <div>{timer}s</div>\r\n                <div>Current Round: {currentRound}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/next-round.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\nimport { NextRoundPanel } from './next-round-panel';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    player: Summoner;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, player, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = player;\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => player.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => player.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                    <NextRoundPanel \r\n                        nextRound={() => draft.nextRound()}\r\n                        isPaused={draft.isPaused}\r\n                        setTooltip={setTooltip}\r\n                        timer={draft.roundTimer}\r\n                        currentRound={draft.roundCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: (ChampCard|null)[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => card !== null ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftMainProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { player } = this.props;\r\n        const { currentHand} = player;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.player.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftSellProps {\r\n    player: Summoner\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({ player }) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, player),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = player;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = DraftStore.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"\">\r\n                <i className=\"trash\"></i>\r\n            </div>\r\n            <div className=\"message\">\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n            <div>[E] to sell unit while hovering over it</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, player: Summoner) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index\r\n    } as UnitSelection;\r\n    player.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh [D]</div>\r\n            <div>Refresh the store with a new set of champions</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy XP [F]</div>\r\n            <div>Gain 4 XP toward your next level. Levelling up increases your team size and gives you access to stronger champions in the store. You gain 2 XP for free at the begninning of each round</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {player.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{player.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{player.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{player.calculateStreakBonus()}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderTimerTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle the Timer [P]</div>\r\n            <div>{draft.isPaused ? 'Resume' : 'Pause'} the Round Timer</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderNextRoundTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Go to the next round [R]</div>\r\n            <div>Current Round: {draft.roundCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderLockHandTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <div>Toggle Lock [L]</div>\r\n            <div>{player.isHandLocked ? 'Unlock' : 'Lock'} your current store offerings.</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement|null => {\r\n    const { player } = draft;\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(player);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        case 'nextRound': return renderNextRoundTooltip(draft);\r\n        case 'lock': return renderLockHandTooltip(player);\r\n        case 'timer': return renderTimerTooltip(draft);\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\nimport { Coin } from '../shared/coin';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftProps {\r\n    player: Summoner;\r\n    draft: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip: string;\r\n}\r\n\r\n@inject('draft', 'player')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: \"\"\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { player, draft } = this.props;\r\n        const { gold } = player;\r\n        const showSell = player.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        const lockClass = player.isHandLocked ? 'closed' : 'open';\r\n        const timerClass = draft.isPaused ? 'pause' : 'play';\r\n        return (\r\n            <section className=\"draft\">\r\n                {!showSell && <>\r\n                     <div className=\"draft-gold-bar above-bar\" \r\n                        onMouseEnter={() => setTooltip('income')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"draft-gold\">\r\n                            <Coin/>{gold}\r\n                        </div>\r\n                    </div>\r\n                     <div className=\"draft-timer-bar above-bar\" \r\n                        onClick={() => draft.toggleTimer()}\r\n                        onMouseEnter={() => setTooltip('timer')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"timer-bar\">                    \r\n                            <div className={`timer-icon ${timerClass}`}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"draft-lock above-bar\"\r\n                        onClick={() => player.toggleHandLock()}\r\n                        onMouseEnter={() => setTooltip('lock')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className={`lock ${lockClass}`}></div>\r\n                    </div> \r\n                </>}\r\n                <DraftSidebar draft={draft} player={player} setTooltip={setTooltip} />\r\n                <DraftMain player={player} />              \r\n                {showSell && <DraftSell player={player} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1].amount;\r\n        \r\n        const bonusesToDisplay = synergy.stages.slice(0, currentBonusIndex + 2).map((stage, index) => ({\r\n            ...stage,\r\n            isActive: synergy.exact ? index === currentBonusIndex : index <= currentBonusIndex\r\n        }));\r\n\r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon-border\">\r\n                    <div className=\"icon\">\r\n                        <div className=\"icon__inner\">\r\n                        <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               <div className=\"synergy-details\">\r\n                <span className=\"synergy-name\">{synergy.name}</span>\r\n                <span>{synergy.count}{nextBonus > 0 && <span> / {nextBonus}</span>}</span>\r\n               </div>\r\n               <div className=\"tooltip\">\r\n                    <div className=\"tooltip-name\">\r\n                        <img className=\"tooltip-icon\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        <span>{synergy.name}</span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div className=\"bonus-section\">\r\n                        {synergy.passive && <div className=\"synergy-passive\">Passive: {synergy.passive}</div>}\r\n                        {bonusesToDisplay.length > 0 && synergy.base &&\r\n                            <div className=\"synergy-base\">Synergy: {synergy.base}</div>\r\n                        }\r\n                        {bonusesToDisplay.map((item) => \r\n                            <div className={`synergy-bonus ${item.isActive ? 'active' : ''}`} key={item.amount}>\r\n                                ({item.amount}) {item.bonus}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { Synergy } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        const { player } = this.props;\r\n        return player.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\nimport './simulation.scss';\r\n\r\ninterface SimulationProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject(\"player\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { level, showPlaced, placedUnitCount } = player;\r\n\r\n        const fadeClass = showPlaced ? '' : 'fade';\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar player={player} />\r\n                    <div className={`level-section ${fadeClass}`}>\r\n                        <span>Units Placed: { placedUnitCount } / { level }</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"r\", () => draft.nextRound());\r\n    useHotkeys(\"p\", () => draft.toggleTimer());\r\n    useHotkeys('d', () => draft.player.refreshHand());\r\n    useHotkeys('f', () => draft.player.buyXP());\r\n    useHotkeys('l', () => draft.player.toggleHandLock());\r\n    useHotkeys('e', () => draft.player.sellHoveredUnit());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport { JsonEditor } from 'jsoneditor-react';\r\nimport ace from 'brace';\r\n\r\nimport 'jsoneditor-react/es/editor.min.css';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\ninterface EditorProps {\r\n    json: string;\r\n    onChange: (string) => void;\r\n    schema: any\r\n}\r\n\r\nexport class Editor extends React.Component<EditorProps> {\r\n    render() {\r\n        const { json, onChange, schema } = this.props;\r\n\r\n        return (\r\n            <section className=\"editor\">\r\n                <JsonEditor\r\n                    value={json}\r\n                    onChange={onChange}\r\n                    ace={ace}\r\n                    theme=\"ace/theme/github\"\r\n                    schema={schema}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { Editor } from './editor';\r\n\r\nimport \"./advanced.scss\";\r\n\r\ninterface AdvancedScreenProps {\r\n    data: DataStore;\r\n    close: () => void;\r\n}\r\n\r\ninterface AdvancedScreenState {\r\n    activeDataset: string;\r\n    updatedData: any;\r\n}\r\n\r\nexport class AdvancedScreen extends React.Component<AdvancedScreenProps, AdvancedScreenState> {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeDataset: null,\r\n            updatedData: null\r\n        };\r\n    }\r\n\r\n    private updateActiveDataset(json) {\r\n        const { activeDataset } = this.state;\r\n        if(!activeDataset) { return; }\r\n        this.setState({ updatedData: json });\r\n    }\r\n\r\n    private getActiveJson() {\r\n        const {activeDataset} = this.state;\r\n        const {data} = this.props;\r\n\r\n        const mapToObj = m => JSON.parse(JSON.stringify(m));\r\n\r\n        switch(activeDataset) {\r\n            case \"levels\": return mapToObj(data.levels);\r\n            case \"tiers\": return mapToObj(data.unitsPerTier);\r\n            case \"champs\": return mapToObj(data.champions);\r\n            case \"synergy\": return mapToObj(data.synergies);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private getSchema() {\r\n        return null;\r\n    }\r\n\r\n    private getTitle() {\r\n        switch(this.state.activeDataset) {\r\n            case \"levels\": return \"Levels\";\r\n            case \"tiers\": return \"Units Per Tier\";\r\n            case \"champs\": return \"Champions\";\r\n            case \"synergy\": return \"Synergies\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private applyChanges() {\r\n        const { activeDataset, updatedData } = this.state;\r\n        const { data } = this.props;\r\n\r\n        if(!activeDataset) { return; }\r\n\r\n        if(activeDataset === 'levels') {\r\n            data.setLevelsFromJson(updatedData);\r\n        } else if (activeDataset === 'tiers') {\r\n            data.setUnitsPerTierFromJson(updatedData);\r\n        } else if (activeDataset === 'champs') {\r\n            data.setChampsFromJson(updatedData);\r\n        } else if (activeDataset === 'synergies') {\r\n            data.setSynergiesFromJson(updatedData);\r\n        }\r\n    }\r\n\r\n    private setActiveDataset(val) {\r\n        return () => {            \r\n            this.setState({\r\n                activeDataset: null\r\n            }, () => this.setState({\r\n                activeDataset: val\r\n            }));\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        const { close } = this.props;\r\n        const { activeDataset } = this.state;\r\n\r\n        const setActive = this.setActiveDataset.bind(this);\r\n\r\n        return (\r\n            <div className=\"advanced-screen\">\r\n                <div className=\"inner\">\r\n                    <div className=\"close\" onClick={close}>X</div>\r\n                    <h2>Edit Datasets</h2>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={setActive('champs')}>\r\n                            Champions\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('tiers')}>\r\n                            Levels\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('levels')}>\r\n                            Units Per Tier\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('synergy')}>\r\n                            Synergies\r\n                        </button>\r\n                    </div>\r\n                    {activeDataset && <div className=\"editor-container\">\r\n                        <h4>Editing {this.getTitle()}</h4>\r\n                        <Editor\r\n                            json={this.getActiveJson()}\r\n                            onChange={(j) => this.updateActiveDataset(j)}\r\n                            schema={this.getSchema()}\r\n                        />\r\n                        <button className=\"action\" onClick={() => this.applyChanges()}>Apply Changes</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   ","import * as React from 'react';\r\nimport \"./splash.scss\";\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { AdvancedScreen } from '../advanced/advanced';\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n    data: DataStore;\r\n}\r\n\r\ninterface SplaceScreenState {\r\n    isAdvancedOpen: boolean;\r\n}\r\n\r\nexport class SplashScreen extends React.Component<SplashScreenProps, SplaceScreenState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdvancedOpen: false\r\n        }\r\n    }\r\n\r\n    openAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: true\r\n        });\r\n    }\r\n\r\n    closeAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { begin, data } = this.props;\r\n        const { isAdvancedOpen } = this.state;\r\n\r\n        return (\r\n            <div className=\"splash\">\r\n                {isAdvancedOpen && <AdvancedScreen data={data} close={() => this.closeAdvancedPage()} />}\r\n                <div className=\"island\"></div>  \r\n                <div className=\"inner\">\r\n                    <h1>Theory Draft for</h1>\r\n                    <div className=\"tft-logo\"></div>\r\n                    <p> A Drafting Simulator and Practice Tool</p>\r\n                    <div className=\"tft-end-cap\"></div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={begin}>\r\n                            Begin\r\n                        </button>\r\n                        <button className=\"action minor\" onClick={() => this.openAdvancedPage()}>\r\n                            Advanced\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { observable, action } from 'mobx';\r\n\r\nimport * as tiersData from '../data/tiers.json';\r\nimport * as levelsData from '../data/levels.json';\r\nimport * as championsData from '../data/champions.json';\r\nimport { synergies } from '../data/synergies.json';\r\nimport { LevelData, ChampData, SynergyData } from './types';\r\n\r\nexport class DataStore {\r\n\r\n    @observable\r\n    unitsPerTier: Map<string, number>;\r\n\r\n    @observable\r\n    levels: Map<string, LevelData>;\r\n\r\n    @observable\r\n    champions: ChampData[];\r\n\r\n    @observable\r\n    synergies: Map<string, SynergyData>;\r\n\r\n    private static emptyChamp: ChampData = {\r\n        name: \"\",\r\n        id: \"\",\r\n        cost: 0,\r\n        classes: []\r\n    };\r\n\r\n    private static emptyLevel: LevelData = {\r\n        xp: 0,\r\n        tierOdds: [0, 0, 0, 0, 0]\r\n    };\r\n\r\n    constructor() {\r\n        this.unitsPerTier = new Map();\r\n        this.levels = new Map();\r\n        this.synergies = new Map();\r\n        this.champions = [];\r\n\r\n        this.setUnitsPerTierFromJson(tiersData.unitsPerTier);\r\n        this.setLevelsFromJson(levelsData.levels);\r\n        this.setChampsFromJson(championsData.champions);\r\n        this.setSynergiesFromJson(synergies);\r\n    }\r\n\r\n    @action\r\n    public setSynergiesFromJson(synergies: any) {\r\n        this.synergies.clear();\r\n        Object.keys(synergies).forEach(key => {\r\n            let val = synergies[key];\r\n            this.synergies.set(key, val);\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public setUnitsPerTierFromJson(unitsPerTier: any) {\r\n        this.unitsPerTier.clear();\r\n        Object.keys(unitsPerTier).forEach(key => {\r\n            let val = Number(unitsPerTier[key]) || 0;\r\n            this.unitsPerTier.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setLevelsFromJson(levels: any) {\r\n        this.levels.clear();\r\n        Object.keys(levels).forEach(key => {\r\n            let val = levels[key] as LevelData || DataStore.emptyLevel;\r\n            this.levels.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setChampsFromJson(champions: any) {\r\n        this.champions.splice(0);//Inline clear an array\r\n        Object.keys(champions).forEach(key => {\r\n            let val = champions[key] as ChampData || null;\r\n            if(val !== null) {\r\n                this.champions.push(val);\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport \"./opponents.scss\";\r\nimport { Champion } from '../champion/champion';\r\n\r\ninterface OpponentsProps {\r\n    draft: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Opponents extends React.Component<OpponentsProps> {\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        const opponents = draft.summoners.slice(1);\r\n\r\n        return (\r\n            <section className=\"opponents\">\r\n                {opponents.map((x, index) => this.renderOpponent(x, index))}\r\n            </section>\r\n        );\r\n    }\r\n\r\n    public renderOpponent(opponent: Summoner, index: number) {\r\n        const units = opponent.allUnits\r\n            .filter(x => x.unit !== undefined)\r\n            .map(x => x.unit)\r\n            .sort((a,b) => b.champ.name < a.champ.name ? 1 : -1)\r\n            .sort((a, b) => b.tier - a.tier);\r\n        return (\r\n            <div className=\"summoner\" key={index}>\r\n                <div className=\"summoner-health\">{opponent.health}</div>\r\n                <div className=\"summoner-avatar\">\r\n                    <div className=\"health-display\"></div>\r\n                    <div className=\"summoner-avatar__icon\"></div>\r\n                </div>\r\n                <div className=\"summoner__units\">\r\n                        {units.map((x, index) => \r\n                            <div className=\"summoner__unit\" key={`${index}_${x.tier}_${x.champ.id}`}>\r\n                                <Champion unit={x} />\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\nimport { DataStore } from '../stores/data-store';\r\nimport { Opponents } from './simulation/opponents';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    dataStore: DataStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dataStore = new DataStore();\r\n        this.draftStore = new DraftStore(this.dataStore);\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen data={this.dataStore} begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} player={this.draftStore.player}>\r\n                        <>\r\n                            <div className=\"board-container\">\r\n                                <div className=\"sidebar\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"board-and-bench\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                                <div className=\"sidebar\">\r\n                                    <Opponents />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}