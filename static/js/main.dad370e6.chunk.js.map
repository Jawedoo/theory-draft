{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","stores/ai.ts","stores/summoner.ts","stores/draft-store.ts","components/board/board.tsx","utils.ts","components/bench/bench-slot.tsx","components/bench/bench.tsx","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/next-round-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/advanced/editor.tsx","components/advanced/advanced.tsx","components/splash/splash.tsx","stores/data-store.ts","components/simulation/opponents.tsx","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","name","tier","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","undefined","Boolean","champion_Champion","AI","summoner","_this","potentialCards","currentHand","filter","x","cost","gold","spendingLimit","willingToSpend","totalSpent","_loop","card","getPurchasePreference","buyCard","guid","length","DraftStore","BUY_XP_COST","buyXP","nearestTen","Math","floor","min","max","cards","threshold","_this2","withinThreshold","map","weight","getSynergyWeight","getExistingUnitWeight","getRarityWeight","pref","reduce","best","current","existingClasses","keys","unitSynergies","classes","includes","matchingUnits","allUnits","sort","reverse","Summoner","_class","draft","isPlayer","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","showPlacedDisposer","autorun","placedUnitCount","showPlaced","setTimeout","nextLevelXp","getXpForLevelUp","level","toConsumableArray","Array","BOARD_SIZE","BENCH_SIZE","_","get","slice","health","drawHand","getRandomStartingUnit","giveRandomStartingUnit","calculateIncome","addXP","XP_PER_ROUND","isHandLocked","REFRESH_COST","refreshHand","amount","calculatePassiveIncome","calculateInterest","calculateStreakBonus","MAXIMIM_INTEREST","roundCount","xp","currentLevel","dataStore","levels","forEach","pool","push","splice","drawCard","removeExtra","firstEmpty","benchedUnits","findIndex","bu","availableToBuy","mergeUnits","c","_this3","extraUnits","boardUnits","champCount","m","val","champions","find","boardIndex","selection","activeUnit","unitSelection","getUnitSalePrice","returnUnitToPool","source","dest","moveUnit","clearUnitFromSlot","_this4","champIds","Set","flatMap","obj","_this5","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","ai","draft_store_temp","_class2","draft_store_descriptor","draft_store_descriptor2","draft_store_descriptor3","draft_store_descriptor4","draft_store_descriptor5","draft_store_descriptor6","draft_store_descriptor7","roundInterval","summoners","INITIAL_PLAYER_COUNT","player","initializePool","s","start","isSplashOpen","startTimer","potentialChamps","getChampsByCost","random","poolIndex","selA","selB","roundTimer","TIME_PER_ROUND","nextRound","purchaseUnit","isPaused","clearInterval","setInterval","guids","iterations","pow","levelData","availableLevels","odds","tierOdds","multiplier","a","b","adjustedOdds","roll","getCost","cardSet","indexToRemove","poolSize","getInitialPoolSizeForChamp","_this$dataStore","unitsPerTier","total","tierBonus","draft_store_class","Board","inject","_dec","board_class","observer","call","rows","getRow","row","renderRow","i","isOdd","activeBoardIndex","cell_Cell","getKey","unitPickedUp","unitDropped","selectionA","selectionB","swapUnits","shiftUnitToSlot","BenchSlot","Bench","bench_dec","bench_class","activeBenchIndex","bench_slot_BenchSlot","Coin","RefreshPanel","refresh","setTooltip","onClick","onMouseEnter","onMouseLeave","coin_Coin","BuyXpPanel","progressStyle","transform","NextRoundPanel","timer","currentRound","DraftSidebar","draft_sidebar_class","_this$props","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","next_round_panel_NextRoundPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","DraftSell","sellUnit","getContent","tooltip","renderIncomeTooltip","renderNextRoundTooltip","renderLockHandTooltip","renderTimerTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","lockClass","timerClass","toggleTimer","toggleHandLock","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","bonusesToDisplay","stage","alt","src","passive","base","bonus","SynergyTier","synergy_tier_class","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","tiers","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","fadeClass","synergies_bar_SynergiesBar","Hotkeys","useHotkeys","Editor","json","onChange","schema","es","ace","theme","AdvancedScreen","activeDataset","updatedData","data","mapToObj","JSON","parse","stringify","_this$state","setLevelsFromJson","setUnitsPerTierFromJson","setChampsFromJson","close","setActive","setActiveDataset","bind","getTitle","editor_Editor","getActiveJson","j","updateActiveDataset","getSchema","applyChanges","SplashScreen","isAdvancedOpen","advanced_AdvancedScreen","closeAdvancedPage","openAdvancedPage","DataStore","data_store_temp","data_store_class2","data_store_descriptor","data_store_descriptor2","data_store_descriptor3","data_store_descriptor4","Map","tiersData","levelsData","championsData","setSynergiesFromJson","clear","set","Number","emptyLevel","emptyChamp","data_store_class","Opponents","opponents_dec","opponents_class","opponents","renderOpponent","opponent","units","MainPage","main_page_class2","main_page_descriptor","assertThisInitialized","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","opponents_Opponents","draft_Draft","hotkeys_Hotkeys","main_page_class","App","react_default","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dad370e6.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className=\"champion\" style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div ref={drop} className={`cell ${dragClass} ${activeClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Summoner } from './summoner';\r\nimport { DraftStore } from './draft-store';\r\nimport { ChampCard } from './types';\r\n\r\ninterface CardPref {\r\n    card: ChampCard;\r\n    weight: number;\r\n}\r\n\r\nexport class AI {\r\n    purchaseUnit(summoner: Summoner): void {\r\n        //Limit to affordable cards\r\n        let potentialCards = summoner.currentHand\r\n            .filter(x => x !== null && x.champ.cost < summoner.gold) as ChampCard[];\r\n    \r\n        const spendingLimit = this.willingToSpend(summoner);\r\n        let totalSpent = 0;\r\n        \r\n        while (potentialCards.length > 0 && totalSpent < spendingLimit ) {\r\n            const card = this.getPurchasePreference(potentialCards, summoner, 0);\r\n        \r\n            if (card !== null) {\r\n                summoner.buyCard(card);\r\n                totalSpent += card.champ.cost;\r\n                potentialCards = potentialCards.filter(x => x.guid !== card.guid);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (spendingLimit - totalSpent > DraftStore.BUY_XP_COST) {\r\n            summoner.buyXP();\r\n        }\r\n\r\n    };\r\n    \r\n    //If they have more than 50 gold, spend all the excess down to 40\r\n    //Otherwise, spend down the the nearest 10, to a minimum of 5 gold\r\n    willingToSpend(summoner: Summoner): number {\r\n        if(summoner.gold > 50) {\r\n            return summoner.gold - 40;\r\n        } else {\r\n            const nearestTen = Math.floor(summoner.gold / 10) * 10;\r\n            return Math.min(Math.max(summoner.gold - nearestTen, 5), summoner.gold);\r\n        }\r\n    };\r\n\r\n    getPurchasePreference(cards: ChampCard[], summoner: Summoner, threshold: number): ChampCard|null {\r\n\r\n        //Add weights for:\r\n        // +1 Has this champ at Tier 1\r\n        // +3 Has this champ at Tier 2\r\n        // -10 Has this champ at Tier 3\r\n        // +1 Per synergy bonus\r\n        // +2 For a 5 cost\r\n        // +1 For a 4 cost\r\n\r\n        const allWeighted: CardPref[] = cards.map(card => {\r\n            let weight = this.getSynergyWeight(summoner, card)\r\n             + this.getExistingUnitWeight(summoner, card)\r\n             + this.getRarityWeight(card);\r\n\r\n            return {\r\n                card,\r\n                weight\r\n            };\r\n        });\r\n\r\n        const withinThreshold: CardPref[] = allWeighted.filter(pref => pref.weight >= threshold);\r\n        if (withinThreshold.length === 0) { return null; }\r\n\r\n        const topCard: CardPref = withinThreshold.reduce((best, current) => {\r\n            if (best == null) {\r\n                return current;\r\n            } else if (best !== null && best.weight < current.weight) {\r\n                return current;\r\n            } else {\r\n                return best;\r\n            }\r\n        }, withinThreshold[0]);\r\n\r\n\r\n        return topCard.card;\r\n    }\r\n\r\n    getSynergyWeight(summoner: Summoner, card: ChampCard): number {\r\n        const existingClasses = Object.keys (summoner.unitSynergies)\r\n        return card.champ.classes.filter(x => existingClasses.includes(x)).length;\r\n    }\r\n\r\n    getExistingUnitWeight(summoner: Summoner, card: ChampCard): number {\r\n        const matchingUnits = summoner.allUnits.filter(\r\n            x => x.unit !== undefined &&\r\n            x.unit.champ.id === card.champ.id\r\n        );\r\n\r\n        if(matchingUnits.length === 0) { return 0; }\r\n\r\n        const topTier = matchingUnits.map(x => x.unit !== undefined ? x.unit.tier : 0)\r\n            .sort()\r\n            .reverse()[0];\r\n\r\n        switch(topTier) {\r\n            case 1: return 1;\r\n            case 2: return 3;\r\n            case 3: return -10;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    getRarityWeight(card: ChampCard): number {\r\n        switch(card.champ.cost) {\r\n            case 5: return 2;\r\n            case 4: return 1;\r\n            default: return 0;\r\n        }\r\n    }\r\n}\r\n\r\n","import { DraftStore } from './draft-store';\r\nimport { observable, action, computed, autorun } from 'mobx';\r\nimport { UnitSelection, BoardUnit, ChampCard, Unit, Synergy, SynergyData, SynergyStage, ChampData } from './types';\r\nexport class Summoner {\r\n\r\n    draft: DraftStore;\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    //All Units 0-8 = Bench, 9+ = Board\r\n    @observable\r\n    allUnits: BoardUnit[] = [];\r\n\r\n    @computed\r\n    get benchedUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(0,DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @computed \r\n    get boardUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    health: number = 100;\r\n\r\n    @computed\r\n    public get isAlive() {\r\n        return this.health > 0;\r\n    }\r\n\r\n    @observable\r\n    isPlayer: boolean;\r\n    \r\n    constructor(draft: DraftStore, isPlayer: boolean) {\r\n        this.draft = draft;\r\n\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.isPlayer = isPlayer;\r\n\r\n        this.allUnits = [...Array(DraftStore.BOARD_SIZE + DraftStore.BENCH_SIZE)].map(\r\n            (_, index) => ({unit: undefined, index})\r\n        );\r\n    }\r\n\r\n    @action\r\n    public start() {\r\n        this.drawHand();        \r\n        this.getRandomStartingUnit();\r\n    }\r\n\r\n    @action\r\n    private getRandomStartingUnit() {\r\n        this.draft.giveRandomStartingUnit(this);\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n    }\r\n\r\n/****************\r\n *  HEALTH\r\n ***************/\r\n@action\r\npublic takeDamage(amount: number) {\r\n    this.health = Math.max(this.health - amount, 0);\r\n}\r\n\r\n/**************\r\n * INCOME\r\n ****************/\r\n\r\npublic calculateIncome(): number {\r\n    const passive = this.calculatePassiveIncome();\r\n    const interest =  this.calculateInterest();\r\n    const streak = this.calculateStreakBonus();\r\n    return passive + interest + streak;\r\n}\r\n\r\npublic calculateInterest(): number {\r\n    return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n}\r\n\r\npublic calculateStreakBonus(): number {\r\n    return 0; //TODO: Simulate Wins/Losses??\r\n}\r\n\r\npublic calculatePassiveIncome(): number {\r\n    switch(this.draft.roundCount) {\r\n        case 0: \r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 3;\r\n        case 4: return 4;\r\n        default: return 5;\r\n    }\r\n}\r\n\r\n/****************\r\n * XP AND LEVELS\r\n ****************/\r\n    \r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        const level = (this.draft.dataStore.levels).get(`level${currentLevel}`);\r\n        return level ? level.xp : 0;\r\n    }\r\n\r\n/****************\r\n * STORE / CARDS\r\n ****************/\r\n    \r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.draft.pool.push(card); //TODO: Refactor into draft.returnCardToPool\r\n            }\r\n        });\r\n\r\n        this.currentHand.splice(0, 5);\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5 && this.draft.pool.length > 0) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const card = this.draft.drawCard(this);\r\n        if (card === null) {\r\n            return;\r\n        }\r\n        this.currentHand.push(card);\r\n    }\r\n    \r\n    \r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x.unit === undefined);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.allUnits[firstEmpty].unit = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingUnits = this.allUnits\r\n                .map(bu => bu.unit)\r\n                .filter(unit => unit !== undefined && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n\r\n/*************************\r\n * UNITS (BENCH AND BOARD)\r\n *************************/\r\n\r\n@action\r\nprivate mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n    const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n    const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n    const benchedUnits: (Unit|null)[] = this.benchedUnits.map(bu => bu.unit || null);\r\n    const totalUnits: (Unit|null)[] = [...benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n    const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n    \r\n    //Remap to count champions\r\n    const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n        const id = unit.champ.id;\r\n        const val = (m as any)[id];\r\n        if (!val) {\r\n            (m as any)[id] = 1;\r\n        } else {\r\n            (m as any)[id] = val+1;\r\n        }\r\n        return m;\r\n    }, {});\r\n\r\n    //Find champs to merge\r\n    const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n    //Merge and upgrade the champs\r\n    idsToMerge.forEach(id => {\r\n        const champ = (this.draft.dataStore.champions).find(c => c.id === id);\r\n        \r\n        //Remove all of that unit from bench and board\r\n        let index = -1;\r\n        let boardIndex = -1;\r\n        while(-1 !== (index = this.allUnits.findIndex(boardUnit => \r\n            boardUnit.unit !== undefined &&\r\n            boardUnit.unit.champ.id === id &&\r\n            boardUnit.unit.tier === tier\r\n        ))) {\r\n            this.allUnits[index].unit = undefined;\r\n            if (index >= DraftStore.BENCH_SIZE) {\r\n                boardIndex = index;\r\n            }\r\n        }\r\n\r\n        //Add upgraded unit\r\n        //Priorise returning to board\r\n        if(boardIndex !== -1) {\r\n            this.allUnits[boardIndex].unit = {\r\n                tier: tier + 1,\r\n                champ\r\n            } as Unit;\r\n        } else {\r\n            const firstEmpty = this.allUnits.findIndex(x => x.unit === undefined);\r\n            this.allUnits[firstEmpty].unit = {\r\n                tier: tier + 1,\r\n                champ\r\n            } as Unit;    \r\n        }\r\n    });\r\n\r\n    if (tier === 1) {\r\n        this.mergeUnits(2);\r\n    }\r\n}\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        const { unit, index } = unitSelection;\r\n\r\n        //If there is a unit to sell, give gold;\r\n        if(this.allUnits[index].unit !== undefined) {\r\n            this.allUnits[index].unit = undefined;\r\n            this.gold += DraftStore.getUnitSalePrice(unit);\r\n            this.draft.returnUnitToPool(unit);\r\n        }\r\n    }\r\n\r\n    \r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        this.moveUnit(dest.unit, source.index);\r\n        this.moveUnit(source.unit, dest.index);\r\n    }\r\n\r\n    @action shiftUnitToSlot(boardUnit: BoardUnit, index: number) {\r\n\r\n        //Only if the slot is empty\r\n        if (this.allUnits[index].unit !== undefined || !boardUnit.unit) {\r\n            return;\r\n        }\r\n\r\n        //If it's to be placed on the board, enforece the unit limit\r\n        if(index >= DraftStore.BENCH_SIZE && this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current slot\r\n        this.clearUnitFromSlot(boardUnit);\r\n\r\n        //Place into new slot\r\n        this.allUnits[index].unit = boardUnit.unit;\r\n    }\r\n\r\n    private clearUnitFromSlot(boardUnit: BoardUnit) {\r\n        this.allUnits[boardUnit.index].unit = undefined;\r\n    }\r\n\r\n    @action\r\n    private moveUnit(unit: Unit, index: number) {\r\n        this.allUnits[index].unit = unit;\r\n    }\r\n\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n\r\n    @observable\r\n    showPlaced: boolean = false;\r\n\r\n    public showPlacedDisposer = autorun(() => {\r\n        if (this.placedUnitCount !== -1) {\r\n            this.showPlaced = true;\r\n            setTimeout(() => {\r\n                this.showPlaced = false;\r\n            }, 500);          \r\n        }\r\n    });\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => this.draft.dataStore.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (this.draft.dataStore.synergies).get(key) as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x: SynergyStage, index: number) => {\r\n                if (synergyData.exact && count === x.amount) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x.amount) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n}","import { observable, action } from 'mobx';\r\nimport { AI } from './ai';\r\nimport { Unit, ChampCard, UnitSelection } from './types';\r\nimport { DataStore } from './data-store';\r\nimport { Summoner } from './summoner';\r\n\r\nconst ai = new AI();\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static BOARD_SIZE = 10;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n    public static TIME_PER_ROUND = 30;//seconds\r\n    public static INITIAL_PLAYER_COUNT = 8;\r\n\r\n    dataStore: DataStore;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    @observable\r\n    summoners: Summoner[];\r\n\r\n    @observable\r\n    player: Summoner;\r\n\r\n    constructor(dataStore: DataStore) {\r\n        this.dataStore = dataStore;\r\n        this.pool = [];\r\n        this.summoners = [...Array(DraftStore.INITIAL_PLAYER_COUNT)]\r\n            .map((_, index) => new Summoner(this, index === 0));\r\n        //First summoner is always the player;\r\n        this.player = this.summoners[0]; \r\n    }\r\n    \r\n    @action\r\n    public start() { \r\n        this.initializePool();\r\n\r\n        this.summoners.forEach(s => s.start());\r\n\r\n        this.isSplashOpen = false;\r\n\r\n        this.startTimer();\r\n\r\n        \r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    public giveRandomStartingUnit(summoner: Summoner) {\r\n        //Always start with a 2 cost unit\r\n        const potentialChamps = this.getChampsByCost(2);\r\n        const index = Math.floor(Math.random() * potentialChamps.length);\r\n        const champ = potentialChamps[index];\r\n\r\n        //Find that champ\r\n        const poolIndex = this.pool.findIndex(x => x.champ.id === champ.id);\r\n        //Remove from pool\r\n        this.pool.splice(poolIndex, 1);\r\n        \r\n        //Add to bench\r\n        summoner.allUnits[0].unit = {\r\n            tier: 1,\r\n            champ\r\n        };\r\n\r\n    }\r\n \r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;   \r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;   \r\n\r\n        this.summoners.forEach((summoner, index) => {\r\n            summoner.nextRound();\r\n            if(index > 0) {\r\n                ai.purchaseUnit(summoner);\r\n            }\r\n        });\r\n    }\r\n\r\n    @observable\r\n    roundTimer: number = DraftStore.TIME_PER_ROUND;\r\n\r\n    @observable\r\n    isPaused: boolean = true;\r\n\r\n    private roundInterval: any = null;\r\n\r\n    @action\r\n    public startTimer() {\r\n        this.isPaused = false;\r\n\r\n        if(this.roundInterval) {\r\n            clearInterval(this.roundInterval);\r\n        }\r\n\r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;\r\n\r\n        this.roundInterval = setInterval(() => {\r\n            if(this.isPaused) { return; }\r\n            --this.roundTimer;\r\n\r\n            if(this.roundTimer <= 0) {\r\n                this.nextRound();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    @action\r\n    public toggleTimer() {\r\n        this.isPaused = !this.isPaused;\r\n    }\r\n\r\n    @action\r\n    public  returnUnitToPool(unit: Unit) {\r\n        const {champ} = unit;\r\n        const unitsInPool = this.pool.filter(x => x.champ.id === champ.id);\r\n        const guids = unitsInPool.map(x => x.guid);\r\n\r\n        let iterations = 3**(unit.tier - 1);\r\n        \r\n        let index = 0;\r\n        while(iterations > 0) {\r\n            const guid = `${champ.id}_${index}`;\r\n            if(!guids.includes(guid)) {\r\n                --iterations;\r\n                this.pool.push({\r\n                    guid,\r\n                    champ\r\n                });\r\n            }\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    public static getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = (unit.tier - 1) * 2;\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawCard(summoner: Summoner) {\r\n        const key = `level${summoner.level}`;\r\n        const levelData = this.dataStore.levels.get(key);\r\n\r\n        const availableLevels = [...new Set(this.pool.map(x => x.champ.cost))];\r\n        \r\n        const odds = levelData ? levelData.tierOdds : [0,0,0,0,0];\r\n\r\n        const oddsTotal = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x : 0)\r\n            .reduce((a, b) => a + b, 0);\r\n\r\n        const multiplier = 1 / oddsTotal;\r\n\r\n        const adjustedOdds = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x * multiplier : 0);\r\n\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, adjustedOdds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n\r\n        if(cardSet.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        const indexToRemove = this.pool.findIndex(c => c !== null && c.guid === card.guid);\r\n        this.pool.splice(indexToRemove, 1);\r\n        \r\n        return card;\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = this.dataStore.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const { unitsPerTier, champions} = this.dataStore;\r\n        const champ = champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return unitsPerTier.get(\"tier1\") || 0;\r\n            case 2: return unitsPerTier.get(\"tier2\") || 0;\r\n            case 3: return unitsPerTier.get(\"tier3\") || 0;\r\n            case 4: return unitsPerTier.get(\"tier4\") || 0;\r\n            case 5: return unitsPerTier.get(\"tier5\") || 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getChampsByCost(cost: number) {\r\n        return this.dataStore.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface BoardProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { player } = this.props;\r\n\r\n        if(!player) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { player } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return player.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const { player } = this.props;\r\n        const { activeUnit } = player;\r\n        const isOdd = row % 2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && activeUnit.index >= DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n\r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","export const BOARD_WIDTH = 5;\r\nexport const BOARD_HEIGHT = 2;\r\n","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div ref={drop} className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport './bench.scss';\r\n\r\ninterface BenchProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { benchedUnits, activeUnit } = player;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.index < DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map(({unit, index}) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(\"\")}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface NextRoundPanelProps {\r\n    nextRound: () => void;\r\n    setTooltip: (area: string) => void;\r\n    isPaused: boolean;\r\n    timer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport const NextRoundPanel: React.FC<NextRoundPanelProps> = ({ nextRound, setTooltip, isPaused, timer, currentRound }) => {\r\n    return (<div className=\"sidebar-item next-round clickable\" onClick={nextRound}>\r\n        <div className=\"next-round-panel\" onMouseEnter={() => setTooltip('nextRound')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Go to Next Round</div>\r\n                <div>{timer}s</div>\r\n                <div>Current Round: {currentRound}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/next-round.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\nimport { NextRoundPanel } from './next-round-panel';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    player: Summoner;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, player, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = player;\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => player.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => player.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                    <NextRoundPanel \r\n                        nextRound={() => draft.nextRound()}\r\n                        isPaused={draft.isPaused}\r\n                        setTooltip={setTooltip}\r\n                        timer={draft.roundTimer}\r\n                        currentRound={draft.roundCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: (ChampCard|null)[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => card !== null ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftMainProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { player } = this.props;\r\n        const { currentHand} = player;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.player.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftSellProps {\r\n    player: Summoner\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({ player }) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, player),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = player;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = DraftStore.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"\">\r\n                <i className=\"trash\"></i>\r\n            </div>\r\n            <div className=\"message\">\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, player: Summoner) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index\r\n    } as UnitSelection;\r\n    player.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh [Shift + D]</div>\r\n            <div>Refresh the store with a new set of champions</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy XP [Shift + F]</div>\r\n            <div>Gain 4 XP toward your next level. Levelling up increases your team size and gives you access to stronger champions in the store. You gain 2 XP for free at the begninning of each round</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {player.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{player.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{player.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{player.calculateStreakBonus()}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderTimerTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle the Timer [Shift + P]</div>\r\n            <div>{draft.isPaused ? 'Resume' : 'Pause'} the Round Timer</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderNextRoundTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Go to the next round [Shift + R]</div>\r\n            <div>Current Round: {draft.roundCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderLockHandTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <div>Toggle Lock [Shift + L]</div>\r\n            <div>{player.isHandLocked ? 'Unlock' : 'Lock'} your current store offerings.</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement|null => {\r\n    const { player } = draft;\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(player);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        case 'nextRound': return renderNextRoundTooltip(draft);\r\n        case 'lock': return renderLockHandTooltip(player);\r\n        case 'timer': return renderTimerTooltip(draft);\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\nimport { Coin } from '../shared/coin';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftProps {\r\n    player: Summoner;\r\n    draft: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip: string;\r\n}\r\n\r\n@inject('draft', 'player')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: \"\"\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { player, draft } = this.props;\r\n        const { gold } = player;\r\n        const showSell = player.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        const lockClass = player.isHandLocked ? 'closed' : 'open';\r\n        const timerClass = draft.isPaused ? 'pause' : 'play';\r\n        return (\r\n            <section className=\"draft\">\r\n                {!showSell && <>\r\n                     <div className=\"draft-gold-bar above-bar\" \r\n                        onMouseEnter={() => setTooltip('income')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"draft-gold\">\r\n                            <Coin/>{gold}\r\n                        </div>\r\n                    </div>\r\n                     <div className=\"draft-timer-bar above-bar\" \r\n                        onClick={() => draft.toggleTimer()}\r\n                        onMouseEnter={() => setTooltip('timer')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"timer-bar\">                    \r\n                            <div className={`timer-icon ${timerClass}`}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"draft-lock above-bar\"\r\n                        onClick={() => player.toggleHandLock()}\r\n                        onMouseEnter={() => setTooltip('lock')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className={`lock ${lockClass}`}></div>\r\n                    </div> \r\n                </>}\r\n                <DraftSidebar draft={draft} player={player} setTooltip={setTooltip} />\r\n                <DraftMain player={player} />              \r\n                {showSell && <DraftSell player={player} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1].amount;\r\n        \r\n        const bonusesToDisplay = synergy.stages.slice(0, currentBonusIndex + 2).map((stage, index) => ({\r\n            ...stage,\r\n            isActive: synergy.exact ? index === currentBonusIndex : index <= currentBonusIndex\r\n        }));\r\n\r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon\">\r\n                   <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                </div>\r\n               <span>\r\n                <span className=\"synergy-name\">{synergy.name}: </span>{synergy.count}\r\n                {nextBonus > 0 && <span> / {nextBonus}</span>}\r\n               </span>\r\n               <div className=\"tooltip\">\r\n                    <div className=\"tooltip-name\">\r\n                        <img className=\"tooltip-icon\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        <span>{synergy.name}</span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div className=\"bonus-section\">\r\n                        {synergy.passive && <div className=\"synergy-passive\">Passive: {synergy.passive}</div>}\r\n                        {bonusesToDisplay.length > 0 && synergy.base &&\r\n                            <div className=\"synergy-base\">Synergy: {synergy.base}</div>\r\n                        }\r\n                        {bonusesToDisplay.map((item) => \r\n                            <div className={`synergy-bonus ${item.isActive ? 'active' : ''}`} key={item.amount}>\r\n                                ({item.amount}) {item.bonus}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { Synergy } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        const { player } = this.props;\r\n        return player.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\nimport './simulation.scss';\r\n\r\ninterface SimulationProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject(\"player\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { level, showPlaced, placedUnitCount } = player;\r\n\r\n        const fadeClass = showPlaced ? '' : 'fade';\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar player={player} />\r\n                    <div className={`level-section ${fadeClass}`}>\r\n                        <span>Units Placed: { placedUnitCount } / { level }</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"shift+r\", () => draft.nextRound());\r\n    useHotkeys(\"shift+p\", () => draft.toggleTimer());\r\n    useHotkeys('shift+d', () => draft.refreshHand());\r\n    useHotkeys('shift+f', () => draft.buyXP());\r\n    useHotkeys('shift+l', () => draft.toggleHandLock());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport { JsonEditor } from 'jsoneditor-react';\r\nimport ace from 'brace';\r\n\r\nimport 'jsoneditor-react/es/editor.min.css';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\ninterface EditorProps {\r\n    json: string;\r\n    onChange: (string) => void;\r\n    schema: any\r\n}\r\n\r\nexport class Editor extends React.Component<EditorProps> {\r\n    render() {\r\n        const { json, onChange, schema } = this.props;\r\n\r\n        return (\r\n            <section className=\"editor\">\r\n                <JsonEditor\r\n                    value={json}\r\n                    onChange={onChange}\r\n                    ace={ace}\r\n                    theme=\"ace/theme/github\"\r\n                    schema={schema}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { Editor } from './editor';\r\n\r\nimport \"./advanced.scss\";\r\n\r\ninterface AdvancedScreenProps {\r\n    data: DataStore;\r\n    close: () => void;\r\n}\r\n\r\ninterface AdvancedScreenState {\r\n    activeDataset: string;\r\n    updatedData: any;\r\n}\r\n\r\nexport class AdvancedScreen extends React.Component<AdvancedScreenProps, AdvancedScreenState> {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeDataset: null,\r\n            updatedData: null\r\n        };\r\n    }\r\n\r\n    private updateActiveDataset(json) {\r\n        const { activeDataset } = this.state;\r\n        if(!activeDataset) { return; }\r\n        this.setState({ updatedData: json });\r\n    }\r\n\r\n    private getActiveJson() {\r\n        const {activeDataset} = this.state;\r\n        const {data} = this.props;\r\n\r\n        const mapToObj = m => JSON.parse(JSON.stringify(m));\r\n\r\n        switch(activeDataset) {\r\n            case \"levels\": return mapToObj(data.levels);\r\n            case \"tiers\": return mapToObj(data.unitsPerTier);\r\n            case \"champs\": return mapToObj(data.champions);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private getSchema() {\r\n        return null;\r\n    }\r\n\r\n    private getTitle() {\r\n        switch(this.state.activeDataset) {\r\n            case \"levels\": return \"Levels\";\r\n            case \"tiers\": return \"Units Per Tier\";\r\n            case \"champs\": return \"Champions\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private applyChanges() {\r\n        const { activeDataset, updatedData } = this.state;\r\n        const { data } = this.props;\r\n\r\n        if(!activeDataset) { return; }\r\n\r\n        if(activeDataset === 'levels') {\r\n            data.setLevelsFromJson(updatedData);\r\n        } else if(activeDataset === 'tiers') {\r\n            data.setUnitsPerTierFromJson(updatedData);\r\n        } else if(activeDataset === 'champs') {\r\n            data.setChampsFromJson(updatedData);\r\n        }\r\n    }\r\n\r\n    private setActiveDataset(val) {\r\n        return () => {\r\n            \r\n            this.setState({\r\n                activeDataset: null\r\n            }, () => this.setState({\r\n                activeDataset: val\r\n            }));\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        const { close } = this.props;\r\n        const { activeDataset } = this.state;\r\n\r\n        const setActive = this.setActiveDataset.bind(this);\r\n\r\n        return (\r\n            <div className=\"advanced-screen\">\r\n                <div className=\"inner\">\r\n                    <div className=\"close\" onClick={close}>X</div>\r\n                    <h2>Edit Datasets</h2>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={setActive('champs')}>\r\n                            Champions\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('tiers')}>\r\n                            Levels\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('levels')}>\r\n                            Units Per Tier\r\n                        </button>\r\n                    </div>\r\n                    {activeDataset && <div className=\"editor-container\">\r\n                        <h4>Editing {this.getTitle()}</h4>\r\n                        <Editor\r\n                            json={this.getActiveJson()}\r\n                            onChange={(j) => this.updateActiveDataset(j)}\r\n                            schema={this.getSchema()}\r\n                        />\r\n                        <button className=\"action\" onClick={() => this.applyChanges()}>Apply Changes</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   ","import * as React from 'react';\r\nimport \"./splash.scss\";\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { AdvancedScreen } from '../advanced/advanced';\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n    data: DataStore;\r\n}\r\n\r\ninterface SplaceScreenState {\r\n    isAdvancedOpen: boolean;\r\n}\r\n\r\nexport class SplashScreen extends React.Component<SplashScreenProps, SplaceScreenState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdvancedOpen: false\r\n        }\r\n    }\r\n\r\n    openAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: true\r\n        });\r\n    }\r\n\r\n    closeAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { begin, data } = this.props;\r\n        const { isAdvancedOpen } = this.state;\r\n\r\n        return (\r\n            <div className=\"splash\">\r\n                {isAdvancedOpen && <AdvancedScreen data={data} close={() => this.closeAdvancedPage()} />}\r\n                <div className=\"island\"></div>  \r\n                <div className=\"inner\">\r\n                    <h1>Theory Draft for</h1>\r\n                    <div className=\"tft-logo\"></div>\r\n                    <p> A Drafting Simulator and Practice Tool</p>\r\n                    <div className=\"tft-end-cap\"></div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={begin}>\r\n                            Begin\r\n                        </button>\r\n                        <button className=\"action minor\" onClick={() => this.openAdvancedPage()}>\r\n                            Advanced\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { observable, action } from 'mobx';\r\n\r\nimport * as tiersData from '../data/tiers.json';\r\nimport * as levelsData from '../data/levels.json';\r\nimport * as championsData from '../data/champions.json';\r\nimport { synergies } from '../data/synergies.json';\r\nimport { LevelData, ChampData, SynergyData } from './types';\r\n\r\nexport class DataStore {\r\n\r\n    @observable\r\n    unitsPerTier: Map<string, number>;\r\n\r\n    @observable\r\n    levels: Map<string, LevelData>;\r\n\r\n    @observable\r\n    champions: ChampData[];\r\n\r\n    @observable\r\n    synergies: Map<string, SynergyData>;\r\n\r\n    private static emptyChamp: ChampData = {\r\n        name: \"\",\r\n        id: \"\",\r\n        cost: 0,\r\n        classes: []\r\n    };\r\n\r\n    private static emptyLevel: LevelData = {\r\n        xp: 0,\r\n        tierOdds: [0, 0, 0, 0, 0]\r\n    };\r\n\r\n    constructor() {\r\n        this.unitsPerTier = new Map();\r\n        this.levels = new Map();\r\n        this.synergies = new Map();\r\n        this.champions = [];\r\n\r\n        this.setUnitsPerTierFromJson(tiersData.unitsPerTier);\r\n        this.setLevelsFromJson(levelsData.levels);\r\n        this.setChampsFromJson(championsData.champions);\r\n        this.setSynergiesFromJson(synergies);\r\n    }\r\n\r\n    @action\r\n    public setSynergiesFromJson(synergies: any) {\r\n        this.synergies.clear();\r\n        Object.keys(synergies).forEach(key => {\r\n            let val = synergies[key];\r\n            this.synergies.set(key, val);\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public setUnitsPerTierFromJson(unitsPerTier: any) {\r\n        this.unitsPerTier.clear();\r\n        Object.keys(unitsPerTier).forEach(key => {\r\n            let val = Number(unitsPerTier[key]) || 0;\r\n            this.unitsPerTier.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setLevelsFromJson(levels: any) {\r\n        this.levels.clear();\r\n        Object.keys(levels).forEach(key => {\r\n            let val = levels[key] as LevelData || DataStore.emptyLevel;\r\n            this.levels.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setChampsFromJson(champions: any) {\r\n        this.champions.splice(0);//Inline clear an array\r\n        Object.keys(champions).forEach(key => {\r\n            let val = champions[key] as ChampData || null;\r\n            if(val !== null) {\r\n                this.champions.push(val);\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport \"./opponents.scss\";\r\nimport { Champion } from '../champion/champion';\r\n\r\ninterface OpponentsProps {\r\n    draft: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Opponents extends React.Component<OpponentsProps> {\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        const opponents = draft.summoners.slice(1);\r\n\r\n        return (\r\n            <section className=\"opponents\">\r\n                {opponents.map((x, index) => this.renderOpponent(x, index))}\r\n            </section>\r\n        );\r\n    }\r\n\r\n    public renderOpponent(opponent: Summoner, index: number) {\r\n        const units = opponent.allUnits\r\n            .filter(x => x.unit !== undefined)\r\n            .map(x => x.unit)\r\n            .sort((a,b) => b.champ.name < a.champ.name ? 1 : -1)\r\n            .sort((a, b) => b.tier - a.tier);\r\n        return (\r\n            <div className=\"summoner\" key={index}>\r\n                <div className=\"summoner-health\">{opponent.health}</div>\r\n                <div className=\"summoner-avatar\">\r\n                    <div className=\"health-display\"></div>\r\n                    <div className=\"summoner-avatar__icon\"></div>\r\n                </div>\r\n                <div className=\"summoner__units\">\r\n                        {units.map((x, index) => \r\n                            <div className=\"summoner__unit\" key={`${index}_${x.tier}_${x.champ.id}`}>\r\n                                <Champion unit={x} />\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\nimport { DataStore } from '../stores/data-store';\r\nimport { Opponents } from './simulation/opponents';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    dataStore: DataStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dataStore = new DataStore();\r\n        this.draftStore = new DraftStore(this.dataStore);\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen data={this.dataStore} begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} player={this.draftStore.player}>\r\n                        <>\r\n                            <div className=\"board-container\">\r\n                                <div className=\"sidebar\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"board-and-bench\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                                <div className=\"sidebar\">\r\n                                    <Opponents />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}