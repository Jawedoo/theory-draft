{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","utils.ts","components/board/board.tsx","components/bench/bench-slot.tsx","components/bench/bench.tsx","stores/draft-store.ts","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/next-round-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/advanced/editor.tsx","components/advanced/advanced.tsx","components/splash/splash.tsx","stores/data-store.ts","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","name","tier","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","undefined","Boolean","champion_Champion","BOARD_WIDTH","BOARD_HEIGHT","Board","inject","_dec","_class","observer","call","_this","draft","rows","toConsumableArray","Array","map","_","getRow","row","renderRow","i","start","boardUnits","slice","_this2","activeUnit","isOdd","activeBoardIndex","isBenched","bu","cell_Cell","getKey","source","dest","unitPickedUp","unitDropped","selectionA","selectionB","swapUnits","shiftUnitToBoard","BenchSlot","Bench","bench_dec","bench_class","benchedUnits","activeBenchIndex","bench_slot_BenchSlot","shiftUnitToBench","DraftStore","_temp","_class2","dataStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","showPlacedDisposer","autorun","placedUnitCount","showPlaced","setTimeout","pool","currentHand","nextLevelXp","getXpForLevelUp","level","BENCH_SIZE","fill","console","log","initializePool","drawHand","giveRandomStartingUnit","isSplashOpen","potentialChamps","getChampsByCost","Math","floor","random","length","poolIndex","findIndex","x","splice","selA","selB","selection","moveUnitToBench","moveUnitToBoard","clearUnitFromCurrentSpace","newBoardUnit","isHandLocked","roundCount","gold","calculateIncome","addXP","XP_PER_ROUND","REFRESH_COST","refreshHand","calculatePassiveIncome","calculateInterest","calculateStreakBonus","min","MAXIMIM_INTEREST","forEach","card","push","BUY_XP_COST","amount","xp","unitSelection","unitExists","getUnitSalePrice","returnUnitToPool","guids","filter","guid","iterations","pow","includes","tierBonus","cost","drawCard","levelData","levels","get","odds","tierOdds","roll","getCost","cardSet","indexToRemove","c","_this3","champions","flatMap","poolSize","getInitialPoolSizeForChamp","removeExtra","firstEmpty","matchingBenchUnits","matchingBoardUnits","matchingUnits","availableToBuy","mergeUnits","_this4","extraUnits","champCount","reduce","m","val","keys","find","boardIndex","currentLevel","_this$dataStore","unitsPerTier","total","_this5","champIds","Set","classes","sort","obj","_this6","unitSynergies","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","draft_store_class","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","Coin","RefreshPanel","refresh","setTooltip","onClick","onMouseEnter","onMouseLeave","coin_Coin","BuyXpPanel","buyXP","progressStyle","transform","NextRoundPanel","nextRound","DraftSidebar","draft_sidebar_class","_this$props","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","next_round_panel_NextRoundPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","buyCard","DraftSell","sellUnit","getContent","tooltip","renderIncomeTooltip","renderNextRoundTooltip","renderLockHandTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","lockClass","toggleHandLock","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","bonusesToDisplay","stage","alt","src","passive","base","bonus","SynergyTier","synergy_tier_class","s","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","tiers","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","fadeClass","synergies_bar_SynergiesBar","Hotkeys","useHotkeys","Editor","json","onChange","schema","es","ace","theme","AdvancedScreen","activeDataset","updatedData","data","mapToObj","JSON","parse","stringify","_this$state","setLevelsFromJson","setUnitsPerTierFromJson","setChampsFromJson","close","setActive","setActiveDataset","bind","getTitle","editor_Editor","getActiveJson","j","updateActiveDataset","getSchema","applyChanges","SplashScreen","isAdvancedOpen","advanced_AdvancedScreen","closeAdvancedPage","openAdvancedPage","DataStore","data_store_temp","data_store_class2","data_store_descriptor","data_store_descriptor2","data_store_descriptor3","Map","tiersData","levelsData","championsData","clear","Number","set","emptyLevel","emptyChamp","data_store_class","MainPage","main_page_class2","main_page_descriptor","assertThisInitialized","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","draft_Draft","hotkeys_Hotkeys","main_page_class","App","react_default","a","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7ccf648.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className=\"champion\" style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div ref={drop} className={`cell ${dragClass} ${activeClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Coords } from './stores/types';\r\n\r\nexport const BOARD_WIDTH = 7;\r\nexport const BOARD_HEIGHT = 3;\r\n\r\nexport const getIndexForCoords = (x: number, y: number): number => {\r\n    return y * BOARD_WIDTH + x;\r\n}\r\n\r\nexport const getCoordsForIndex = (index: number): Coords => {\r\n    return {\r\n        x: index % BOARD_WIDTH,\r\n        y: Math.floor(index / BOARD_WIDTH)\r\n    };\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BoardProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        if(!draft) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { draft } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return draft.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const {draft} = this.props;\r\n        const { activeUnit } = draft;\r\n        const isOdd = row%2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && !activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: false\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBoard(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div ref={drop} className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport './bench.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\ninterface BenchProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { benchedUnits, activeUnit } = draft;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map((unit, index) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: true\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBench(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import { observable, action, computed, autorun } from 'mobx';\r\n\r\nimport { synergies } from '../data/synergies.json';\r\nimport { Unit, ChampData, ChampCard, UnitSelection, BoardUnit, SynergyData, Synergy, SynergyStage } from './types';\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../utils';\r\nimport { DataStore } from './data-store';\r\n\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n\r\n    dataStore: DataStore;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    @observable\r\n    benchedUnits: (Unit | null)[] = [];\r\n\r\n    @observable\r\n    boardUnits: BoardUnit[] = [];\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    constructor(dataStore: DataStore) {\r\n        this.dataStore = dataStore;\r\n        this.pool = [];\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.benchedUnits = [...Array(DraftStore.BENCH_SIZE)].fill(null);\r\n        this.boardUnits = [...Array(BOARD_WIDTH * BOARD_HEIGHT)].map(\r\n            (_, index) => ({ unit: undefined, index } as BoardUnit)\r\n        );\r\n    }\r\n\r\n    \r\n    @action\r\n    public start() {\r\n        console.log(\"Lets Go!\");     \r\n        this.initializePool();\r\n        this.drawHand();\r\n        this.giveRandomStartingUnit();\r\n        this.isSplashOpen = false;\r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    private giveRandomStartingUnit() {\r\n        //Always start with a 2 cost unit\r\n        const potentialChamps = this.getChampsByCost(2);\r\n        const index = Math.floor(Math.random() * potentialChamps.length);\r\n        const champ = potentialChamps[index];\r\n\r\n        //Find that champ\r\n        const poolIndex = this.pool.findIndex(x => x.champ.id === champ.id);\r\n        //Remove from pool\r\n        this.pool.splice(poolIndex, 1);\r\n        \r\n        //Add to bench\r\n        this.benchedUnits[0] = {\r\n            tier: 1,\r\n            champ\r\n        };\r\n\r\n    }\r\n \r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n            && selB.isBenched === selA.isBenched        \r\n    }\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        if(source.isBenched) {\r\n            this.moveUnitToBench(dest.unit, source.index);\r\n        } else {\r\n            this.moveUnitToBoard(dest.unit, source.index);\r\n        }\r\n\r\n        if(dest.isBenched) {\r\n             this.moveUnitToBench(source.unit, dest.index);\r\n         } else {\r\n            this.moveUnitToBoard(source.unit, dest.index);\r\n         }\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBench(selection: UnitSelection, index: number) {\r\n        //Only if bench is empty\r\n        if(this.benchedUnits[index] !== null) { \r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBench(selection.unit, index)\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBoard(selection: UnitSelection, index: number) {\r\n        //Only if board space is empty\r\n        if(this.boardUnits[index].unit !== undefined) { \r\n            return;\r\n        }\r\n\r\n        if(this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBoard(selection.unit, index)\r\n    }\r\n\r\n    private clearUnitFromCurrentSpace(selection: UnitSelection) {\r\n        if(selection.isBenched) {\r\n            this.benchedUnits[selection.index] = null;\r\n        } else {\r\n            this.boardUnits[selection.index].unit = undefined;\r\n        }\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBench(unit: Unit, index: number) {\r\n        this.benchedUnits[index] = unit;\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBoard(unit: Unit, index: number) {\r\n        const newBoardUnit = { index, unit } as BoardUnit;\r\n        this.boardUnits[index] = newBoardUnit;\r\n    }\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n    @observable\r\n    showPlaced: boolean = false;\r\n\r\n    public showPlacedDisposer = autorun(() => {\r\n        if (this.placedUnitCount !== -1) {\r\n            this.showPlaced = true;\r\n            setTimeout(() => {\r\n                this.showPlaced = false;\r\n            }, 500);          \r\n        }\r\n    });\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => this.dataStore.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (synergies as any)[key] as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x: SynergyStage, index: number) => {\r\n                if (synergyData.exact && count === x.amount) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x.amount) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;      \r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n\r\n    }\r\n\r\n    public calculateIncome(): number {\r\n        const passive = this.calculatePassiveIncome();\r\n        const interest =  this.calculateInterest();\r\n        const streak = this.calculateStreakBonus();\r\n        return passive + interest + streak;\r\n    }\r\n\r\n    public calculateInterest(): number {\r\n        return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n    }\r\n\r\n    public calculateStreakBonus(): number {\r\n        return 0; //TODO: Simulate Wins/Losses??\r\n    }\r\n\r\n    public calculatePassiveIncome(): number {\r\n        switch(this.roundCount) {\r\n            case 0: \r\n            case 1: return 2;\r\n            case 2:\r\n            case 3: return 3;\r\n            case 4: return 4;\r\n            default: return 5;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.pool.push(card);\r\n            }\r\n        });\r\n\r\n        this.currentHand = [];\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        let unitExists = false;\r\n        const { unit, index, isBenched } = unitSelection;\r\n\r\n        //Remove Unit;\r\n        if(isBenched) {\r\n            if(this.benchedUnits[index] !== null) {\r\n                this.benchedUnits[index] = null;\r\n                unitExists = true;\r\n            }\r\n        } else {\r\n            if(this.boardUnits[index].unit !== undefined) {\r\n                this.boardUnits[index].unit = undefined;\r\n                unitExists = true;\r\n            }\r\n        }\r\n\r\n        //If there was a unit to sell, give gold;\r\n        if(unitExists) {\r\n            this.gold += this.getUnitSalePrice(unit);\r\n            this.returnUnitToPool(unit);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private  returnUnitToPool(unit: Unit) {\r\n        const {champ} = unit;\r\n        const unitsInPool = this.pool.filter(x => x.champ.id === champ.id);\r\n        const guids = unitsInPool.map(x => x.guid);\r\n\r\n        let iterations = 3**(unit.tier - 1);\r\n        \r\n        let index = 0;\r\n        while(iterations > 0) {\r\n            const guid = `${champ.id}_${index}`;\r\n            if(!guids.includes(guid)) {\r\n                --iterations;\r\n                this.pool.push({\r\n                    guid,\r\n                    champ\r\n                });\r\n            }\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    public getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = 0;\r\n        switch (unit.tier) {\r\n            case 2: {\r\n                tierBonus = 2;\r\n                break; \r\n            }\r\n            case 3: {\r\n                tierBonus = 4;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const key = `level${this.level}`;\r\n        const levelData = this.dataStore.levels.get(key);\r\n        const odds = levelData ? levelData.tierOdds : [0,0,0,0,0];\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, odds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        const indexToRemove = this.pool.findIndex(c => c.guid === card.guid);\r\n        this.pool.splice(indexToRemove, 1);\r\n        \r\n        this.currentHand.push(card);\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = this.dataStore.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.benchedUnits[firstEmpty] = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingBenchUnits = this.benchedUnits\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n            const matchingBoardUnits = this.boardUnits\r\n                .map(bu => bu.unit || null)\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const matchingUnits = [...matchingBenchUnits, ...matchingBoardUnits];\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n    @action\r\n    private mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n        const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n        const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n        const totalUnits: (Unit|null)[] = [...this.benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n        const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n        \r\n        //Remap to count champions\r\n        const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n            const id = unit.champ.id;\r\n            const val = (m as any)[id];\r\n            if (!val) {\r\n                (m as any)[id] = 1;\r\n            } else {\r\n                (m as any)[id] = val+1;\r\n            }\r\n            return m;\r\n        }, {});\r\n\r\n        //Find champs to merge\r\n        const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n        //Merge and upgrade the champs\r\n        idsToMerge.forEach(id => {\r\n            const champ = (this.dataStore.champions).find(c => c.id === id);\r\n            \r\n            let index = -1;\r\n            //Remove all of that unit from bench\r\n            while(-1 !== (index = this.benchedUnits.findIndex(unit => \r\n                unit !== null &&\r\n                unit.champ.id === id &&\r\n                unit.tier === tier\r\n            ))) {\r\n                this.benchedUnits[index] = null;\r\n            }\r\n\r\n            //Remove all of that unit from the board\r\n            index = -1;\r\n            let boardIndex = -1;\r\n            while(-1 !== (index = this.boardUnits.findIndex(boardUnit => \r\n                boardUnit.unit !== undefined &&\r\n                boardUnit.unit.champ.id === id &&\r\n                boardUnit.unit.tier === tier\r\n            ))) {\r\n                this.boardUnits[index].unit = undefined;\r\n                boardIndex = index;\r\n            }\r\n\r\n            //Add upgraded unit\r\n            //Priorise returning to board\r\n            if(boardIndex !== -1) {\r\n                this.boardUnits[boardIndex].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;\r\n            } else {\r\n                const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n                this.benchedUnits[firstEmpty] = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;    \r\n            }\r\n        });\r\n\r\n        if (tier === 1) {\r\n            this.mergeUnits(2);\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        const level = (this.dataStore.levels).get(`level${currentLevel}`);\r\n        return level ? level.xp : 0;\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const { unitsPerTier, champions} = this.dataStore;\r\n        const champ = champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return unitsPerTier.get(\"tier1\") || 0;\r\n            case 2: return unitsPerTier.get(\"tier2\") || 0;\r\n            case 3: return unitsPerTier.get(\"tier3\") || 0;\r\n            case 4: return unitsPerTier.get(\"tier4\") || 0;\r\n            case 5: return unitsPerTier.get(\"tier5\") || 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getChampsByCost(cost: number) {\r\n        return this.dataStore.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(null)}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(null)}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface NextRoundPanelProps {\r\n    nextRound: () => void;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const NextRoundPanel: React.FC<NextRoundPanelProps> = ({ nextRound, setTooltip }) => {\r\n    return (<div className=\"sidebar-item next-round clickable\" onClick={nextRound}>\r\n        <div className=\"next-round-panel\" onMouseEnter={() => setTooltip('nextRound')} onMouseLeave={() => setTooltip(null)}>\r\n            <div className=\"content\">\r\n                <div>Next Round</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/next-round.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\nimport { NextRoundPanel } from './next-round-panel';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = draft;\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => draft.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => draft.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                    <NextRoundPanel \r\n                        nextRound={() => draft.nextRound()}\r\n                        setTooltip={setTooltip}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: ChampCard[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => Boolean(card) ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface DraftMainProps {\r\n    draft: DraftStore;\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft } = this.props;\r\n        const { currentHand} = draft;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.draft.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\ninterface DraftSellProps {\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({\r\n    draft\r\n}) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, draft),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = draft;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = draft.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"\">\r\n                <i className=\"trash\"></i>\r\n            </div>\r\n            <div className=\"message\">\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, draft: DraftStore) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index,\r\n        isBenched: item.type === Types.BENCH\r\n    } as UnitSelection;\r\n    draft.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh [Shift + D]</div>\r\n            <div>Refresh the store with a new set of champions</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy XP [Shift + F]</div>\r\n            <div>Gain 4 XP toward your next level. Levelling up increases your team size and gives you access to stronger champions in the store. You gain 2 XP for free at the begninning of each round</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {draft.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{draft.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{draft.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{draft.calculateStreakBonus()}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderNextRoundTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Go to the next round [Shift + R]</div>\r\n            <div>Current Round: {draft.roundCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderLockHandTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle Lock [Shift + L]</div>\r\n            <div>{draft.isHandLocked ? 'Unlock' : 'Lock'} your current store offerings.</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement => {\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(draft);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        case 'nextRound': return renderNextRoundTooltip(draft);\r\n        case 'lock': return renderLockHandTooltip(draft);\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface DraftProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip?: string;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: null\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { gold } = draft;\r\n        const showSell = draft.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        const lockClass = draft.isHandLocked ? 'closed' : 'open';\r\n\r\n        return (\r\n            <section className=\"draft\">\r\n                {!showSell && <>\r\n                     <div className=\"draft-gold-bar above-bar\" \r\n                        onMouseEnter={() => setTooltip('income')}\r\n                        onMouseLeave={() => setTooltip(null)}\r\n                    >\r\n                        <div className=\"draft-gold\">\r\n                            <Coin/>{gold}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"draft-lock above-bar\"\r\n                        onClick={() => draft.toggleHandLock()}\r\n                        onMouseEnter={() => setTooltip('lock')}\r\n                        onMouseLeave={() => setTooltip(null)}\r\n                    >\r\n                        <div className={`lock ${lockClass}`}></div>\r\n                    </div> \r\n                </>}\r\n                <DraftSidebar draft={draft} setTooltip={setTooltip} />\r\n                <DraftMain draft={draft} />              \r\n                {showSell && <DraftSell draft={draft} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1].amount;\r\n        \r\n        const bonusesToDisplay = synergy.stages.slice(0, currentBonusIndex + 2).map((stage, index) => ({\r\n            ...stage,\r\n            isActive: synergy.exact ? index === currentBonusIndex : index <= currentBonusIndex\r\n        }));\r\n\r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon\">\r\n                   <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                </div>\r\n               <span>\r\n                <span className=\"synergy-name\">{synergy.name}: </span>{synergy.count}\r\n                {nextBonus > 0 && <span> / {nextBonus}</span>}\r\n               </span>\r\n               <div className=\"tooltip\">\r\n                    <div className=\"tooltip-name\">\r\n                        <img className=\"tooltip-icon\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        <span>{synergy.name}</span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div className=\"bonus-section\">\r\n                        {synergy.passive && <div className=\"synergy-passive\">Passive: {synergy.passive}</div>}\r\n                        {bonusesToDisplay.length > 0 && synergy.base &&\r\n                            <div className=\"synergy-base\">Synergy: {synergy.base}</div>\r\n                        }\r\n                        {bonusesToDisplay.map((item) => \r\n                            <div className={`synergy-bonus ${item.isActive ? 'active' : ''}`} key={item.amount}>\r\n                                ({item.amount}) {item.bonus}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    draft: DraftStore\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        return this.props.draft.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\n\r\nimport './simulation.scss';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\ninterface SimulationProps {\r\n    draft?: DraftStore\r\n}\r\n\r\n@inject(\"draft\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { level, showPlaced, placedUnitCount } = draft;\r\n        if (!draft) { return null; }\r\n\r\n        const fadeClass = showPlaced ? '' : 'fade';\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar draft={draft} />\r\n                    <div className={`level-section ${fadeClass}`}>\r\n                        <span>Units Placed: { placedUnitCount } / { level }</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"shift+r\", () => draft.nextRound());\r\n    useHotkeys('shift+d', () => draft.refreshHand());\r\n    useHotkeys('shift+f', () => draft.buyXP());\r\n    useHotkeys('shift+l', () => draft.toggleHandLock());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport { JsonEditor } from 'jsoneditor-react';\r\nimport ace from 'brace';\r\n\r\nimport 'jsoneditor-react/es/editor.min.css';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\ninterface EditorProps {\r\n    json: string;\r\n    onChange: (string) => void;\r\n    schema: any\r\n}\r\n\r\nexport class Editor extends React.Component<EditorProps> {\r\n    render() {\r\n        const { json, onChange, schema } = this.props;\r\n\r\n        return (\r\n            <section className=\"editor\">\r\n                <JsonEditor\r\n                    value={json}\r\n                    onChange={onChange}\r\n                    ace={ace}\r\n                    theme=\"ace/theme/github\"\r\n                    schema={schema}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { Editor } from './editor';\r\n\r\nimport \"./advanced.scss\";\r\n\r\ninterface AdvancedScreenProps {\r\n    data: DataStore;\r\n    close: () => void;\r\n}\r\n\r\ninterface AdvancedScreenState {\r\n    activeDataset: string;\r\n    updatedData: any;\r\n}\r\n\r\nexport class AdvancedScreen extends React.Component<AdvancedScreenProps, AdvancedScreenState> {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeDataset: null,\r\n            updatedData: null\r\n        };\r\n    }\r\n\r\n    private updateActiveDataset(json) {\r\n        const { activeDataset } = this.state;\r\n        if(!activeDataset) { return; }\r\n        this.setState({ updatedData: json });\r\n    }\r\n\r\n    private getActiveJson() {\r\n        const {activeDataset} = this.state;\r\n        const {data} = this.props;\r\n\r\n        const mapToObj = m => JSON.parse(JSON.stringify(m));\r\n\r\n        switch(activeDataset) {\r\n            case \"levels\": return mapToObj(data.levels);\r\n            case \"tiers\": return mapToObj(data.unitsPerTier);\r\n            case \"champs\": return mapToObj(data.champions);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private getSchema() {\r\n        return null;\r\n    }\r\n\r\n    private getTitle() {\r\n        switch(this.state.activeDataset) {\r\n            case \"levels\": return \"Levels\";\r\n            case \"tiers\": return \"Units Per Tier\";\r\n            case \"champs\": return \"Champions\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private applyChanges() {\r\n        const { activeDataset, updatedData } = this.state;\r\n        const { data } = this.props;\r\n\r\n        if(!activeDataset) { return; }\r\n\r\n        if(activeDataset === 'levels') {\r\n            data.setLevelsFromJson(updatedData);\r\n        } else if(activeDataset === 'tiers') {\r\n            data.setUnitsPerTierFromJson(updatedData);\r\n        } else if(activeDataset === 'champs') {\r\n            data.setChampsFromJson(updatedData);\r\n        }\r\n    }\r\n\r\n    private setActiveDataset(val) {\r\n        return () => {\r\n            \r\n            this.setState({\r\n                activeDataset: null\r\n            }, () => this.setState({\r\n                activeDataset: val\r\n            }));\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        const { close } = this.props;\r\n        const { activeDataset } = this.state;\r\n\r\n        const setActive = this.setActiveDataset.bind(this);\r\n\r\n        return (\r\n            <div className=\"advanced-screen\">\r\n                <div className=\"inner\">\r\n                    <div className=\"close\" onClick={close}>X</div>\r\n                    <h2>Edit Datasets</h2>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={setActive('champs')}>\r\n                            Champions\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('tiers')}>\r\n                            Levels\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('levels')}>\r\n                            Units Per Tier\r\n                        </button>\r\n                    </div>\r\n                    {activeDataset && <div className=\"editor-container\">\r\n                        <h4>Editing {this.getTitle()}</h4>\r\n                        <Editor\r\n                            json={this.getActiveJson()}\r\n                            onChange={(j) => this.updateActiveDataset(j)}\r\n                            schema={this.getSchema()}\r\n                        />\r\n                        <button className=\"action\" onClick={() => this.applyChanges()}>Apply Changes</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   ","import * as React from 'react';\r\nimport \"./splash.scss\";\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { AdvancedScreen } from '../advanced/advanced';\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n    data: DataStore;\r\n}\r\n\r\ninterface SplaceScreenState {\r\n    isAdvancedOpen: boolean;\r\n}\r\n\r\nexport class SplashScreen extends React.Component<SplashScreenProps, SplaceScreenState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdvancedOpen: false\r\n        }\r\n    }\r\n\r\n    openAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: true\r\n        });\r\n    }\r\n\r\n    closeAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { begin, data } = this.props;\r\n        const { isAdvancedOpen } = this.state;\r\n\r\n        return (\r\n            <div className=\"splash\">\r\n                {isAdvancedOpen && <AdvancedScreen data={data} close={() => this.closeAdvancedPage()} />}\r\n                <div className=\"island\"></div>  \r\n                <div className=\"inner\">\r\n                    <h1>Theory Draft for</h1>\r\n                    <div className=\"tft-logo\"></div>\r\n                    <p> A Drafting Simulator and Practice Tool</p>\r\n                    <div className=\"tft-end-cap\"></div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={begin}>\r\n                            Begin\r\n                        </button>\r\n                        <button className=\"action minor\" onClick={() => this.openAdvancedPage()}>\r\n                            Advanced\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { observable, action } from 'mobx';\r\n\r\nimport * as tiersData from '../data/tiers.json';\r\nimport * as levelsData from '../data/levels.json';\r\nimport * as championsData from '../data/champions.json';\r\nimport { LevelData, ChampData } from './types';\r\n\r\nexport class DataStore {\r\n\r\n    @observable\r\n    unitsPerTier: Map<string, number>;\r\n\r\n    @observable\r\n    levels: Map<string, LevelData>;\r\n\r\n    @observable\r\n    champions: ChampData[];\r\n\r\n    private static emptyChamp: ChampData = {\r\n        name: \"\",\r\n        id: \"\",\r\n        cost: 0,\r\n        classes: []\r\n    };\r\n\r\n    private static emptyLevel: LevelData = {\r\n        xp: 0,\r\n        tierOdds: [0, 0, 0, 0, 0]\r\n    };\r\n\r\n    constructor() {\r\n        this.unitsPerTier = new Map();\r\n        this.levels = new Map();\r\n        this.champions = [];\r\n\r\n        this.setUnitsPerTierFromJson(tiersData.unitsPerTier);\r\n        this.setLevelsFromJson(levelsData.levels);\r\n        this.setChampsFromJson(championsData.champions)\r\n    }\r\n\r\n    @action\r\n    public setUnitsPerTierFromJson(unitsPerTier: any) {\r\n        this.unitsPerTier.clear();\r\n        Object.keys(unitsPerTier).forEach(key => {\r\n            let val = Number(unitsPerTier[key]) || 0;\r\n            this.unitsPerTier.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setLevelsFromJson(levels: any) {\r\n        this.levels.clear();\r\n        Object.keys(levels).forEach(key => {\r\n            let val = levels[key] as LevelData || DataStore.emptyLevel;\r\n            this.levels.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setChampsFromJson(champions: any) {\r\n        this.champions.splice(0);//Inline clear an array\r\n        Object.keys(champions).forEach(key => {\r\n            let val = champions[key] as ChampData || null;\r\n            if(val !== null) {\r\n                this.champions.push(val);\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\nimport { DataStore } from '../stores/data-store';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    dataStore: DataStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dataStore = new DataStore();\r\n        this.draftStore = new DraftStore(this.dataStore);\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen data={this.dataStore} begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} >\r\n                        <>\r\n                            <div className=\"board-container\">\r\n                                <div className=\"sidebar\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"board-and-bench\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}