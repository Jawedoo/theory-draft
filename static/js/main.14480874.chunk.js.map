{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","utils.ts","components/board/board.tsx","components/bench/bench-slot.tsx","components/bench/bench.tsx","stores/draft-store.ts","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/next-round-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/advanced/editor.tsx","components/advanced/advanced.tsx","components/splash/splash.tsx","stores/data-store.ts","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","name","tier","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","undefined","Boolean","champion_Champion","BOARD_WIDTH","BOARD_HEIGHT","Board","inject","_dec","_class","observer","call","_this","draft","rows","toConsumableArray","Array","map","_","getRow","row","renderRow","i","start","boardUnits","slice","_this2","activeUnit","isOdd","activeBoardIndex","isBenched","bu","cell_Cell","getKey","source","dest","unitPickedUp","unitDropped","selectionA","selectionB","swapUnits","shiftUnitToBoard","BenchSlot","Bench","bench_dec","bench_class","benchedUnits","activeBenchIndex","bench_slot_BenchSlot","shiftUnitToBench","DraftStore","_temp","_class2","dataStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","showPlacedDisposer","autorun","placedUnitCount","showPlaced","setTimeout","_descriptor14","_descriptor15","roundInterval","pool","currentHand","nextLevelXp","getXpForLevelUp","level","BENCH_SIZE","fill","console","log","initializePool","drawHand","giveRandomStartingUnit","isSplashOpen","startTimer","potentialChamps","getChampsByCost","Math","floor","random","length","poolIndex","findIndex","x","splice","selA","selB","selection","moveUnitToBench","moveUnitToBoard","clearUnitFromCurrentSpace","newBoardUnit","isHandLocked","roundCount","roundTimer","TIME_PER_ROUND","gold","calculateIncome","addXP","XP_PER_ROUND","REFRESH_COST","refreshHand","isPaused","clearInterval","setInterval","nextRound","calculatePassiveIncome","calculateInterest","calculateStreakBonus","min","MAXIMIM_INTEREST","_this3","forEach","card","push","BUY_XP_COST","amount","xp","unitSelection","unitExists","getUnitSalePrice","returnUnitToPool","guids","filter","guid","iterations","pow","includes","tierBonus","cost","drawCard","levelData","levels","get","odds","tierOdds","roll","getCost","cardSet","indexToRemove","c","_this4","champions","flatMap","poolSize","getInitialPoolSizeForChamp","removeExtra","firstEmpty","matchingBenchUnits","matchingBoardUnits","matchingUnits","availableToBuy","mergeUnits","_this5","extraUnits","champCount","reduce","m","val","keys","find","boardIndex","currentLevel","_this$dataStore","unitsPerTier","total","_this6","champIds","Set","classes","sort","obj","_this7","unitSynergies","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","draft_store_class","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","Coin","RefreshPanel","refresh","setTooltip","onClick","onMouseEnter","onMouseLeave","coin_Coin","BuyXpPanel","buyXP","progressStyle","transform","NextRoundPanel","timer","currentRound","DraftSidebar","draft_sidebar_class","_this$props","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","next_round_panel_NextRoundPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","buyCard","DraftSell","sellUnit","getContent","tooltip","renderIncomeTooltip","renderNextRoundTooltip","renderLockHandTooltip","renderTimerTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","lockClass","timerClass","toggleTimer","toggleHandLock","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","bonusesToDisplay","stage","alt","src","passive","base","bonus","SynergyTier","synergy_tier_class","s","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","tiers","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","fadeClass","synergies_bar_SynergiesBar","Hotkeys","useHotkeys","Editor","json","onChange","schema","es","ace","theme","AdvancedScreen","activeDataset","updatedData","data","mapToObj","JSON","parse","stringify","_this$state","setLevelsFromJson","setUnitsPerTierFromJson","setChampsFromJson","close","setActive","setActiveDataset","bind","getTitle","editor_Editor","getActiveJson","j","updateActiveDataset","getSchema","applyChanges","SplashScreen","isAdvancedOpen","advanced_AdvancedScreen","closeAdvancedPage","openAdvancedPage","DataStore","data_store_temp","data_store_class2","data_store_descriptor","data_store_descriptor2","data_store_descriptor3","Map","tiersData","levelsData","championsData","clear","Number","set","emptyLevel","emptyChamp","data_store_class","MainPage","main_page_class2","main_page_descriptor","assertThisInitialized","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","draft_Draft","hotkeys_Hotkeys","main_page_class","App","react_default","a","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14480874.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className=\"champion\" style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div ref={drop} className={`cell ${dragClass} ${activeClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Coords } from './stores/types';\r\n\r\nexport const BOARD_WIDTH = 7;\r\nexport const BOARD_HEIGHT = 3;\r\n\r\nexport const getIndexForCoords = (x: number, y: number): number => {\r\n    return y * BOARD_WIDTH + x;\r\n}\r\n\r\nexport const getCoordsForIndex = (index: number): Coords => {\r\n    return {\r\n        x: index % BOARD_WIDTH,\r\n        y: Math.floor(index / BOARD_WIDTH)\r\n    };\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BoardProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        if(!draft) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { draft } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return draft.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const {draft} = this.props;\r\n        const { activeUnit } = draft;\r\n        const isOdd = row%2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && !activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: false\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBoard(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div ref={drop} className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}>\r\n            <div ref={unit ? drag : undefined} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport './bench.scss';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit } from '../../stores/types';\r\nimport { Types } from '../../stores/drag-drop';\r\ninterface BenchProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { benchedUnits, activeUnit } = draft;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.isBenched) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map((unit, index) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { draft } = this.props;\r\n        draft.unitPickedUp({\r\n            unit,\r\n            index,\r\n            isBenched: true\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { draft } = this.props;\r\n        draft.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { draft } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index,\r\n            isBenched: source.type === Types.BENCH\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index,\r\n            isBenched: dest.type === Types.BENCH\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            draft.shiftUnitToBench(selectionA, dest.index);\r\n        } else {\r\n            draft.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import { observable, action, computed, autorun } from 'mobx';\r\n\r\nimport { synergies } from '../data/synergies.json';\r\nimport { Unit, ChampData, ChampCard, UnitSelection, BoardUnit, SynergyData, Synergy, SynergyStage } from './types';\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../utils';\r\nimport { DataStore } from './data-store';\r\n\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n    public static TIME_PER_ROUND = 15;//seconds\r\n\r\n    dataStore: DataStore;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    @observable\r\n    benchedUnits: (Unit | null)[] = [];\r\n\r\n    @observable\r\n    boardUnits: BoardUnit[] = [];\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    constructor(dataStore: DataStore) {\r\n        this.dataStore = dataStore;\r\n        this.pool = [];\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.benchedUnits = [...Array(DraftStore.BENCH_SIZE)].fill(null);\r\n        this.boardUnits = [...Array(BOARD_WIDTH * BOARD_HEIGHT)].map(\r\n            (_, index) => ({ unit: undefined, index } as BoardUnit)\r\n        );\r\n    }\r\n\r\n    \r\n    @action\r\n    public start() {\r\n        console.log(\"Lets Go!\");     \r\n        this.initializePool();\r\n        this.drawHand();\r\n        this.giveRandomStartingUnit();\r\n        this.isSplashOpen = false;\r\n\r\n        this.startTimer();\r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    private giveRandomStartingUnit() {\r\n        //Always start with a 2 cost unit\r\n        const potentialChamps = this.getChampsByCost(2);\r\n        const index = Math.floor(Math.random() * potentialChamps.length);\r\n        const champ = potentialChamps[index];\r\n\r\n        //Find that champ\r\n        const poolIndex = this.pool.findIndex(x => x.champ.id === champ.id);\r\n        //Remove from pool\r\n        this.pool.splice(poolIndex, 1);\r\n        \r\n        //Add to bench\r\n        this.benchedUnits[0] = {\r\n            tier: 1,\r\n            champ\r\n        };\r\n\r\n    }\r\n \r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n            && selB.isBenched === selA.isBenched        \r\n    }\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        if(source.isBenched) {\r\n            this.moveUnitToBench(dest.unit, source.index);\r\n        } else {\r\n            this.moveUnitToBoard(dest.unit, source.index);\r\n        }\r\n\r\n        if(dest.isBenched) {\r\n             this.moveUnitToBench(source.unit, dest.index);\r\n         } else {\r\n            this.moveUnitToBoard(source.unit, dest.index);\r\n         }\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBench(selection: UnitSelection, index: number) {\r\n        //Only if bench is empty\r\n        if(this.benchedUnits[index] !== null) { \r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBench(selection.unit, index)\r\n    }\r\n\r\n    @action\r\n    public shiftUnitToBoard(selection: UnitSelection, index: number) {\r\n        //Only if board space is empty\r\n        if(this.boardUnits[index].unit !== undefined) { \r\n            return;\r\n        }\r\n\r\n        if(this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current space\r\n        this.clearUnitFromCurrentSpace(selection);\r\n\r\n        //Move into new space\r\n        this.moveUnitToBoard(selection.unit, index)\r\n    }\r\n\r\n    private clearUnitFromCurrentSpace(selection: UnitSelection) {\r\n        if(selection.isBenched) {\r\n            this.benchedUnits[selection.index] = null;\r\n        } else {\r\n            this.boardUnits[selection.index].unit = undefined;\r\n        }\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBench(unit: Unit, index: number) {\r\n        this.benchedUnits[index] = unit;\r\n    }\r\n\r\n    @action\r\n    private moveUnitToBoard(unit: Unit, index: number) {\r\n        const newBoardUnit = { index, unit } as BoardUnit;\r\n        this.boardUnits[index] = newBoardUnit;\r\n    }\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n    @observable\r\n    showPlaced: boolean = false;\r\n\r\n    public showPlacedDisposer = autorun(() => {\r\n        if (this.placedUnitCount !== -1) {\r\n            this.showPlaced = true;\r\n            setTimeout(() => {\r\n                this.showPlaced = false;\r\n            }, 500);          \r\n        }\r\n    });\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => this.dataStore.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (synergies as any)[key] as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x: SynergyStage, index: number) => {\r\n                if (synergyData.exact && count === x.amount) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x.amount) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;   \r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;   \r\n\r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n    }\r\n\r\n    @observable\r\n    roundTimer: number = DraftStore.TIME_PER_ROUND;\r\n\r\n    @observable\r\n    isPaused: boolean = true;\r\n\r\n    private roundInterval: any = null;\r\n\r\n    @action\r\n    public startTimer() {\r\n        this.isPaused = false;\r\n\r\n        if(this.roundInterval) {\r\n            clearInterval(this.roundInterval);\r\n        }\r\n\r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;\r\n\r\n        this.roundInterval = setInterval(() => {\r\n            if(this.isPaused) { return; }\r\n            --this.roundTimer;\r\n\r\n            if(this.roundTimer <= 0) {\r\n                this.nextRound();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    @action\r\n    public toggleTimer() {\r\n        this.isPaused = !this.isPaused;\r\n    }\r\n\r\n    public calculateIncome(): number {\r\n        const passive = this.calculatePassiveIncome();\r\n        const interest =  this.calculateInterest();\r\n        const streak = this.calculateStreakBonus();\r\n        return passive + interest + streak;\r\n    }\r\n\r\n    public calculateInterest(): number {\r\n        return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n    }\r\n\r\n    public calculateStreakBonus(): number {\r\n        return 0; //TODO: Simulate Wins/Losses??\r\n    }\r\n\r\n    public calculatePassiveIncome(): number {\r\n        switch(this.roundCount) {\r\n            case 0: \r\n            case 1: return 2;\r\n            case 2:\r\n            case 3: return 3;\r\n            case 4: return 4;\r\n            default: return 5;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.pool.push(card);\r\n            }\r\n        });\r\n\r\n        this.currentHand.splice(0, 5);\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        let unitExists = false;\r\n        const { unit, index, isBenched } = unitSelection;\r\n\r\n        //Remove Unit;\r\n        if(isBenched) {\r\n            if(this.benchedUnits[index] !== null) {\r\n                this.benchedUnits[index] = null;\r\n                unitExists = true;\r\n            }\r\n        } else {\r\n            if(this.boardUnits[index].unit !== undefined) {\r\n                this.boardUnits[index].unit = undefined;\r\n                unitExists = true;\r\n            }\r\n        }\r\n\r\n        //If there was a unit to sell, give gold;\r\n        if(unitExists) {\r\n            this.gold += this.getUnitSalePrice(unit);\r\n            this.returnUnitToPool(unit);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private  returnUnitToPool(unit: Unit) {\r\n        const {champ} = unit;\r\n        const unitsInPool = this.pool.filter(x => x.champ.id === champ.id);\r\n        const guids = unitsInPool.map(x => x.guid);\r\n\r\n        let iterations = 3**(unit.tier - 1);\r\n        \r\n        let index = 0;\r\n        while(iterations > 0) {\r\n            const guid = `${champ.id}_${index}`;\r\n            if(!guids.includes(guid)) {\r\n                --iterations;\r\n                this.pool.push({\r\n                    guid,\r\n                    champ\r\n                });\r\n            }\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    public getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = 0;\r\n        switch (unit.tier) {\r\n            case 2: {\r\n                tierBonus = 2;\r\n                break; \r\n            }\r\n            case 3: {\r\n                tierBonus = 4;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const key = `level${this.level}`;\r\n        const levelData = this.dataStore.levels.get(key);\r\n        const odds = levelData ? levelData.tierOdds : [0,0,0,0,0];\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, odds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        const indexToRemove = this.pool.findIndex(c => c.guid === card.guid);\r\n        this.pool.splice(indexToRemove, 1);\r\n        \r\n        this.currentHand.push(card);\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = this.dataStore.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.benchedUnits[firstEmpty] = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingBenchUnits = this.benchedUnits\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n            const matchingBoardUnits = this.boardUnits\r\n                .map(bu => bu.unit || null)\r\n                .filter(unit => unit !== null && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const matchingUnits = [...matchingBenchUnits, ...matchingBoardUnits];\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n    @action\r\n    private mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n        const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n        const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n        const totalUnits: (Unit|null)[] = [...this.benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n        const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n        \r\n        //Remap to count champions\r\n        const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n            const id = unit.champ.id;\r\n            const val = (m as any)[id];\r\n            if (!val) {\r\n                (m as any)[id] = 1;\r\n            } else {\r\n                (m as any)[id] = val+1;\r\n            }\r\n            return m;\r\n        }, {});\r\n\r\n        //Find champs to merge\r\n        const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n        //Merge and upgrade the champs\r\n        idsToMerge.forEach(id => {\r\n            const champ = (this.dataStore.champions).find(c => c.id === id);\r\n            \r\n            let index = -1;\r\n            //Remove all of that unit from bench\r\n            while(-1 !== (index = this.benchedUnits.findIndex(unit => \r\n                unit !== null &&\r\n                unit.champ.id === id &&\r\n                unit.tier === tier\r\n            ))) {\r\n                this.benchedUnits[index] = null;\r\n            }\r\n\r\n            //Remove all of that unit from the board\r\n            index = -1;\r\n            let boardIndex = -1;\r\n            while(-1 !== (index = this.boardUnits.findIndex(boardUnit => \r\n                boardUnit.unit !== undefined &&\r\n                boardUnit.unit.champ.id === id &&\r\n                boardUnit.unit.tier === tier\r\n            ))) {\r\n                this.boardUnits[index].unit = undefined;\r\n                boardIndex = index;\r\n            }\r\n\r\n            //Add upgraded unit\r\n            //Priorise returning to board\r\n            if(boardIndex !== -1) {\r\n                this.boardUnits[boardIndex].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;\r\n            } else {\r\n                const firstEmpty = this.benchedUnits.findIndex(x => x === null);\r\n                this.benchedUnits[firstEmpty] = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;    \r\n            }\r\n        });\r\n\r\n        if (tier === 1) {\r\n            this.mergeUnits(2);\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        const level = (this.dataStore.levels).get(`level${currentLevel}`);\r\n        return level ? level.xp : 0;\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const { unitsPerTier, champions} = this.dataStore;\r\n        const champ = champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return unitsPerTier.get(\"tier1\") || 0;\r\n            case 2: return unitsPerTier.get(\"tier2\") || 0;\r\n            case 3: return unitsPerTier.get(\"tier3\") || 0;\r\n            case 4: return unitsPerTier.get(\"tier4\") || 0;\r\n            case 5: return unitsPerTier.get(\"tier5\") || 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getChampsByCost(cost: number) {\r\n        return this.dataStore.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(null)}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area?: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(null)}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface NextRoundPanelProps {\r\n    nextRound: () => void;\r\n    setTooltip: (area?: string) => void;\r\n    isPaused: boolean;\r\n    timer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport const NextRoundPanel: React.FC<NextRoundPanelProps> = ({ nextRound, setTooltip, isPaused, timer, currentRound }) => {\r\n    return (<div className=\"sidebar-item next-round clickable\" onClick={nextRound}>\r\n        <div className=\"next-round-panel\" onMouseEnter={() => setTooltip('nextRound')} onMouseLeave={() => setTooltip(null)}>\r\n            <div className=\"content\">\r\n                <div>Go to Next Round</div>\r\n                <div>{timer}s</div>\r\n                <div>Current Round: {currentRound}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/next-round.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\nimport { NextRoundPanel } from './next-round-panel';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = draft;\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => draft.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => draft.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                    <NextRoundPanel \r\n                        nextRound={() => draft.nextRound()}\r\n                        isPaused={draft.isPaused}\r\n                        setTooltip={setTooltip}\r\n                        timer={draft.roundTimer}\r\n                        currentRound={draft.roundCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: ChampCard[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => Boolean(card) ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface DraftMainProps {\r\n    draft: DraftStore;\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft } = this.props;\r\n        const { currentHand} = draft;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.draft.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\ninterface DraftSellProps {\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({\r\n    draft\r\n}) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, draft),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = draft;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = draft.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"\">\r\n                <i className=\"trash\"></i>\r\n            </div>\r\n            <div className=\"message\">\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, draft: DraftStore) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index,\r\n        isBenched: item.type === Types.BENCH\r\n    } as UnitSelection;\r\n    draft.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh [Shift + D]</div>\r\n            <div>Refresh the store with a new set of champions</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy XP [Shift + F]</div>\r\n            <div>Gain 4 XP toward your next level. Levelling up increases your team size and gives you access to stronger champions in the store. You gain 2 XP for free at the begninning of each round</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {draft.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{draft.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{draft.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{draft.calculateStreakBonus()}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderTimerTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle the Timer [Shift + P]</div>\r\n            <div>{draft.isPaused ? 'Resmue' : 'Pause'} the Round Timer</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderNextRoundTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Go to the next round [Shift + R]</div>\r\n            <div>Current Round: {draft.roundCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderLockHandTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle Lock [Shift + L]</div>\r\n            <div>{draft.isHandLocked ? 'Unlock' : 'Lock'} your current store offerings.</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement => {\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(draft);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        case 'nextRound': return renderNextRoundTooltip(draft);\r\n        case 'lock': return renderLockHandTooltip(draft);\r\n        case 'timer': return renderTimerTooltip(draft);\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface DraftProps {\r\n    draft?: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip?: string;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: null\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { gold } = draft;\r\n        const showSell = draft.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        const lockClass = draft.isHandLocked ? 'closed' : 'open';\r\n        const timerClass = draft.isPaused ? 'pause' : 'play';\r\n        return (\r\n            <section className=\"draft\">\r\n                {!showSell && <>\r\n                     <div className=\"draft-gold-bar above-bar\" \r\n                        onMouseEnter={() => setTooltip('income')}\r\n                        onMouseLeave={() => setTooltip(null)}\r\n                    >\r\n                        <div className=\"draft-gold\">\r\n                            <Coin/>{gold}\r\n                        </div>\r\n                    </div>\r\n                     <div className=\"draft-timer-bar above-bar\" \r\n                        onClick={() => draft.toggleTimer()}\r\n                        onMouseEnter={() => setTooltip('timer')}\r\n                        onMouseLeave={() => setTooltip(null)}\r\n                    >\r\n                        <div className=\"timer-bar\">                    \r\n                            <div className={`timer-icon ${timerClass}`}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"draft-lock above-bar\"\r\n                        onClick={() => draft.toggleHandLock()}\r\n                        onMouseEnter={() => setTooltip('lock')}\r\n                        onMouseLeave={() => setTooltip(null)}\r\n                    >\r\n                        <div className={`lock ${lockClass}`}></div>\r\n                    </div> \r\n                </>}\r\n                <DraftSidebar draft={draft} setTooltip={setTooltip} />\r\n                <DraftMain draft={draft} />              \r\n                {showSell && <DraftSell draft={draft} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1].amount;\r\n        \r\n        const bonusesToDisplay = synergy.stages.slice(0, currentBonusIndex + 2).map((stage, index) => ({\r\n            ...stage,\r\n            isActive: synergy.exact ? index === currentBonusIndex : index <= currentBonusIndex\r\n        }));\r\n\r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon\">\r\n                   <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                </div>\r\n               <span>\r\n                <span className=\"synergy-name\">{synergy.name}: </span>{synergy.count}\r\n                {nextBonus > 0 && <span> / {nextBonus}</span>}\r\n               </span>\r\n               <div className=\"tooltip\">\r\n                    <div className=\"tooltip-name\">\r\n                        <img className=\"tooltip-icon\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        <span>{synergy.name}</span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div className=\"bonus-section\">\r\n                        {synergy.passive && <div className=\"synergy-passive\">Passive: {synergy.passive}</div>}\r\n                        {bonusesToDisplay.length > 0 && synergy.base &&\r\n                            <div className=\"synergy-base\">Synergy: {synergy.base}</div>\r\n                        }\r\n                        {bonusesToDisplay.map((item) => \r\n                            <div className={`synergy-bonus ${item.isActive ? 'active' : ''}`} key={item.amount}>\r\n                                ({item.amount}) {item.bonus}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    draft: DraftStore\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        return this.props.draft.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\n\r\nimport './simulation.scss';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\ninterface SimulationProps {\r\n    draft?: DraftStore\r\n}\r\n\r\n@inject(\"draft\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { draft } = this.props;\r\n        const { level, showPlaced, placedUnitCount } = draft;\r\n        if (!draft) { return null; }\r\n\r\n        const fadeClass = showPlaced ? '' : 'fade';\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar draft={draft} />\r\n                    <div className={`level-section ${fadeClass}`}>\r\n                        <span>Units Placed: { placedUnitCount } / { level }</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"shift+r\", () => draft.nextRound());\r\n    useHotkeys(\"shift+p\", () => draft.toggleTimer());\r\n    useHotkeys('shift+d', () => draft.refreshHand());\r\n    useHotkeys('shift+f', () => draft.buyXP());\r\n    useHotkeys('shift+l', () => draft.toggleHandLock());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport { JsonEditor } from 'jsoneditor-react';\r\nimport ace from 'brace';\r\n\r\nimport 'jsoneditor-react/es/editor.min.css';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\ninterface EditorProps {\r\n    json: string;\r\n    onChange: (string) => void;\r\n    schema: any\r\n}\r\n\r\nexport class Editor extends React.Component<EditorProps> {\r\n    render() {\r\n        const { json, onChange, schema } = this.props;\r\n\r\n        return (\r\n            <section className=\"editor\">\r\n                <JsonEditor\r\n                    value={json}\r\n                    onChange={onChange}\r\n                    ace={ace}\r\n                    theme=\"ace/theme/github\"\r\n                    schema={schema}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { Editor } from './editor';\r\n\r\nimport \"./advanced.scss\";\r\n\r\ninterface AdvancedScreenProps {\r\n    data: DataStore;\r\n    close: () => void;\r\n}\r\n\r\ninterface AdvancedScreenState {\r\n    activeDataset: string;\r\n    updatedData: any;\r\n}\r\n\r\nexport class AdvancedScreen extends React.Component<AdvancedScreenProps, AdvancedScreenState> {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeDataset: null,\r\n            updatedData: null\r\n        };\r\n    }\r\n\r\n    private updateActiveDataset(json) {\r\n        const { activeDataset } = this.state;\r\n        if(!activeDataset) { return; }\r\n        this.setState({ updatedData: json });\r\n    }\r\n\r\n    private getActiveJson() {\r\n        const {activeDataset} = this.state;\r\n        const {data} = this.props;\r\n\r\n        const mapToObj = m => JSON.parse(JSON.stringify(m));\r\n\r\n        switch(activeDataset) {\r\n            case \"levels\": return mapToObj(data.levels);\r\n            case \"tiers\": return mapToObj(data.unitsPerTier);\r\n            case \"champs\": return mapToObj(data.champions);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private getSchema() {\r\n        return null;\r\n    }\r\n\r\n    private getTitle() {\r\n        switch(this.state.activeDataset) {\r\n            case \"levels\": return \"Levels\";\r\n            case \"tiers\": return \"Units Per Tier\";\r\n            case \"champs\": return \"Champions\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private applyChanges() {\r\n        const { activeDataset, updatedData } = this.state;\r\n        const { data } = this.props;\r\n\r\n        if(!activeDataset) { return; }\r\n\r\n        if(activeDataset === 'levels') {\r\n            data.setLevelsFromJson(updatedData);\r\n        } else if(activeDataset === 'tiers') {\r\n            data.setUnitsPerTierFromJson(updatedData);\r\n        } else if(activeDataset === 'champs') {\r\n            data.setChampsFromJson(updatedData);\r\n        }\r\n    }\r\n\r\n    private setActiveDataset(val) {\r\n        return () => {\r\n            \r\n            this.setState({\r\n                activeDataset: null\r\n            }, () => this.setState({\r\n                activeDataset: val\r\n            }));\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        const { close } = this.props;\r\n        const { activeDataset } = this.state;\r\n\r\n        const setActive = this.setActiveDataset.bind(this);\r\n\r\n        return (\r\n            <div className=\"advanced-screen\">\r\n                <div className=\"inner\">\r\n                    <div className=\"close\" onClick={close}>X</div>\r\n                    <h2>Edit Datasets</h2>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={setActive('champs')}>\r\n                            Champions\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('tiers')}>\r\n                            Levels\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('levels')}>\r\n                            Units Per Tier\r\n                        </button>\r\n                    </div>\r\n                    {activeDataset && <div className=\"editor-container\">\r\n                        <h4>Editing {this.getTitle()}</h4>\r\n                        <Editor\r\n                            json={this.getActiveJson()}\r\n                            onChange={(j) => this.updateActiveDataset(j)}\r\n                            schema={this.getSchema()}\r\n                        />\r\n                        <button className=\"action\" onClick={() => this.applyChanges()}>Apply Changes</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   ","import * as React from 'react';\r\nimport \"./splash.scss\";\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { AdvancedScreen } from '../advanced/advanced';\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n    data: DataStore;\r\n}\r\n\r\ninterface SplaceScreenState {\r\n    isAdvancedOpen: boolean;\r\n}\r\n\r\nexport class SplashScreen extends React.Component<SplashScreenProps, SplaceScreenState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdvancedOpen: false\r\n        }\r\n    }\r\n\r\n    openAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: true\r\n        });\r\n    }\r\n\r\n    closeAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { begin, data } = this.props;\r\n        const { isAdvancedOpen } = this.state;\r\n\r\n        return (\r\n            <div className=\"splash\">\r\n                {isAdvancedOpen && <AdvancedScreen data={data} close={() => this.closeAdvancedPage()} />}\r\n                <div className=\"island\"></div>  \r\n                <div className=\"inner\">\r\n                    <h1>Theory Draft for</h1>\r\n                    <div className=\"tft-logo\"></div>\r\n                    <p> A Drafting Simulator and Practice Tool</p>\r\n                    <div className=\"tft-end-cap\"></div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={begin}>\r\n                            Begin\r\n                        </button>\r\n                        <button className=\"action minor\" onClick={() => this.openAdvancedPage()}>\r\n                            Advanced\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { observable, action } from 'mobx';\r\n\r\nimport * as tiersData from '../data/tiers.json';\r\nimport * as levelsData from '../data/levels.json';\r\nimport * as championsData from '../data/champions.json';\r\nimport { LevelData, ChampData } from './types';\r\n\r\nexport class DataStore {\r\n\r\n    @observable\r\n    unitsPerTier: Map<string, number>;\r\n\r\n    @observable\r\n    levels: Map<string, LevelData>;\r\n\r\n    @observable\r\n    champions: ChampData[];\r\n\r\n    private static emptyChamp: ChampData = {\r\n        name: \"\",\r\n        id: \"\",\r\n        cost: 0,\r\n        classes: []\r\n    };\r\n\r\n    private static emptyLevel: LevelData = {\r\n        xp: 0,\r\n        tierOdds: [0, 0, 0, 0, 0]\r\n    };\r\n\r\n    constructor() {\r\n        this.unitsPerTier = new Map();\r\n        this.levels = new Map();\r\n        this.champions = [];\r\n\r\n        this.setUnitsPerTierFromJson(tiersData.unitsPerTier);\r\n        this.setLevelsFromJson(levelsData.levels);\r\n        this.setChampsFromJson(championsData.champions)\r\n    }\r\n\r\n    @action\r\n    public setUnitsPerTierFromJson(unitsPerTier: any) {\r\n        this.unitsPerTier.clear();\r\n        Object.keys(unitsPerTier).forEach(key => {\r\n            let val = Number(unitsPerTier[key]) || 0;\r\n            this.unitsPerTier.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setLevelsFromJson(levels: any) {\r\n        this.levels.clear();\r\n        Object.keys(levels).forEach(key => {\r\n            let val = levels[key] as LevelData || DataStore.emptyLevel;\r\n            this.levels.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setChampsFromJson(champions: any) {\r\n        this.champions.splice(0);//Inline clear an array\r\n        Object.keys(champions).forEach(key => {\r\n            let val = champions[key] as ChampData || null;\r\n            if(val !== null) {\r\n                this.champions.push(val);\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\nimport { DataStore } from '../stores/data-store';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    dataStore: DataStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dataStore = new DataStore();\r\n        this.draftStore = new DraftStore(this.dataStore);\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen data={this.dataStore} begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} >\r\n                        <>\r\n                            <div className=\"board-container\">\r\n                                <div className=\"sidebar\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"board-and-bench\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}