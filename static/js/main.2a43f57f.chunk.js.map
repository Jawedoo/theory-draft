{"version":3,"sources":["components/champion/champion.tsx","stores/drag-drop.ts","components/board/cell.tsx","stores/ai.ts","stores/summoner.ts","stores/draft-store.ts","components/board/board.tsx","utils.ts","components/bench/bench-slot.tsx","components/bench/bench.tsx","components/shared/coin.tsx","components/draft/sidebar/draft-refresh-panel.tsx","components/draft/sidebar/draft-xp-panel.tsx","components/draft/sidebar/next-round-panel.tsx","components/draft/sidebar/draft-sidebar.tsx","components/draft/card.tsx","components/draft/blank-card.tsx","components/draft/hand.tsx","components/draft/draft-main.tsx","components/draft/draft-sell.tsx","components/draft/tooltip/tooltip.tsx","components/draft/draft.tsx","components/synergies/synergy-item.tsx","components/synergies/synergy-tier.tsx","components/synergies/synergies-bar.tsx","components/simulation/simulation.tsx","components/hotkeys.tsx","components/advanced/editor.tsx","components/advanced/advanced.tsx","components/splash/splash.tsx","stores/data-store.ts","components/simulation/opponents.tsx","components/cheat/cheat-menu.tsx","components/main-page.tsx","App.js","serviceWorker.js","index.js"],"names":["Champion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","unit","props","champ","stars","getTierString","style","backgroundImage","concat","process","id","react","className","tier","name","React","Types","Cell","_ref","boardUnit","isActive","onPickUpUnit","onDropUnit","onDrop","onHoverStart","onHoverEnd","index","_useDrag","useDrag","item","type","collect","monitor","isDragging","begin","end","_useDrag2","slicedToArray","drag","_useDrop","useDrop","accept","drop","isOver","canDrop","_useDrop2","_useDrop2$","dragClass","activeClass","overClass","ref","onMouseEnter","onMouseLeave","undefined","Boolean","champion_Champion","AI","summoner","_this","potentialCards","currentHand","filter","x","cost","gold","spendingLimit","willingToSpend","totalSpent","_loop","card","getPurchasePreference","buyCard","guid","length","DraftStore","BUY_XP_COST","buyXP","nearestTen","Math","floor","min","max","cards","threshold","_this2","withinThreshold","map","weight","getSynergyWeight","getExistingUnitWeight","getRarityWeight","pref","reduce","best","current","existingClasses","keys","unitSynergies","classes","includes","matchingUnits","allUnits","sort","reverse","Summoner","_class","draft","isPlayer","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","showPlacedDisposer","autorun","placedUnitCount","showPlaced","setTimeout","nextLevelXp","getXpForLevelUp","level","toConsumableArray","Array","BOARD_SIZE","BENCH_SIZE","_","get","slice","health","drawHand","getRandomStartingUnit","giveRandomStartingUnit","calculateIncome","addXP","XP_PER_ROUND","isHandLocked","REFRESH_COST","refreshHand","amount","findIndex","isCheatMenuOpen","calculatePassiveIncome","calculateInterest","calculateStreakBonus","MAXIMIM_INTEREST","roundCount","xp","currentLevel","dataStore","levels","forEach","pool","push","splice","drawCard","removeExtra","firstEmpty","benchedUnits","bu","availableToBuy","mergeUnits","c","_this3","extraUnits","boardUnits","champCount","m","val","champions","find","boardIndex","selection","activeUnit","hoveredUnit","unitSelection","getUnitSalePrice","returnUnitToPool","sellUnit","source","dest","moveUnit","clearUnitFromSlot","_this4","champIds","Set","flatMap","obj","_this5","synergyData","synergies","count","medalIndex","stages","exact","active","objectSpread","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","ai","draft_store_temp","_class2","draft_store_descriptor","draft_store_descriptor2","draft_store_descriptor3","draft_store_descriptor4","draft_store_descriptor5","draft_store_descriptor6","draft_store_descriptor7","roundInterval","summoners","INITIAL_PLAYER_COUNT","player","initializePool","s","start","isSplashOpen","startTimer","potentialChamps","getChampsByCost","random","poolIndex","selA","selB","roundTimer","TIME_PER_ROUND","nextRound","purchaseUnit","isPaused","clearInterval","setInterval","guids","iterations","pow","levelData","availableLevels","odds","tierOdds","multiplier","a","b","adjustedOdds","roll","getCost","cardSet","indexToRemove","poolSize","getInitialPoolSizeForChamp","_this$dataStore","unitsPerTier","total","tierBonus","draft_store_class","Board","inject","_dec","board_class","observer","call","rows","getRow","row","renderRow","i","isOdd","activeBoardIndex","cell_Cell","getKey","unitPickedUp","unitDropped","enterUnit","exitUnit","selectionA","selectionB","swapUnits","shiftUnitToSlot","BenchSlot","Bench","bench_dec","bench_class","activeBenchIndex","bench_slot_BenchSlot","Coin","RefreshPanel","refresh","setTooltip","onClick","coin_Coin","BuyXpPanel","progressStyle","transform","NextRoundPanel","timer","currentRound","DraftSidebar","draft_sidebar_class","_this$props","draft_refresh_panel_RefreshPanel","draft_xp_panel_BuyXpPanel","next_round_panel_NextRoundPanel","Card","_card$champ","BlankCard","Hand","hand_class","hand","card_Card","blank_card_BlankCard","DraftMain","draft_main_class","hand_Hand","DraftSell","getContent","tooltip","renderIncomeTooltip","renderNextRoundTooltip","renderLockHandTooltip","renderTimerTooltip","Tooltip","content","Draft","draft_dec","draft_class","state","activeTooltip","showSell","area","setState","lockClass","timerClass","toggleTimer","toggleHandLock","showCheatMenu","draft_sidebar_DraftSidebar","draft_main_DraftMain","draft_sell_DraftSell","tooltip_Tooltip","SynergyItem","synergy_item_class","synergy","currentBonusIndex","nextBonus","bonusesToDisplay","stage","alt","src","passive","base","bonus","SynergyTier","synergy_tier_class","synergy_item_SynergyItem","SynergiesBar","synergies_bar_class","tiers","getSynergiesOfTier","synergy_tier_SynergyTier","unitSynergiesWithTiers","Simulation","simulation_dec","simulation_class","fadeClass","synergies_bar_SynergiesBar","Hotkeys","useHotkeys","sellHoveredUnit","Editor","json","onChange","schema","es","ace","theme","AdvancedScreen","activeDataset","updatedData","data","mapToObj","JSON","parse","stringify","_this$state","setLevelsFromJson","setUnitsPerTierFromJson","setChampsFromJson","setSynergiesFromJson","close","setActive","setActiveDataset","bind","getTitle","editor_Editor","getActiveJson","j","updateActiveDataset","getSchema","applyChanges","SplashScreen","isAdvancedOpen","advanced_AdvancedScreen","closeAdvancedPage","openAdvancedPage","DataStore","data_store_temp","data_store_class2","data_store_descriptor","data_store_descriptor2","data_store_descriptor3","data_store_descriptor4","Map","tiersData","levelsData","championsData","clear","set","Number","emptyLevel","emptyChamp","data_store_class","Opponents","opponents_dec","opponents_class","opponents","renderOpponent","opponent","units","CheatMenu","champId","setTier","assertThisInitialized","setChampId","e","target","parsed","parseInt","currentTarget","console","log","addChamp","_this$state2","addGold","hideCheatMenu","MainPage","main_page_class2","main_page_descriptor","draftStore","splash_SplashScreen","lib","backend","MultiBackend","HTML5toTouch","mobx_react_module","simulation_Simulation","board_Board","bench_Bench","opponents_Opponents","draft_Draft","cheat_menu_CheatMenu","hotkeys_Hotkeys","main_page_class","App","react_default","createElement","main_page_MainPage","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a43f57f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Unit } from '../../stores/types';\r\n\r\ninterface ChampionProps {\r\n    unit: Unit;\r\n}\r\n\r\nexport class Champion extends React.Component<ChampionProps> {\r\n\r\n    public render() {\r\n        const { unit } = this.props;\r\n        const { champ } = unit;\r\n\r\n        const stars = this.getTierString(unit);\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${champ.id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champion champion--tier-${unit.tier}`} style={style}>\r\n                <div className=\"champion-tier\">{stars}</div>\r\n                <div className=\"champion-name\">{champ.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTierString(unit: Unit): string {\r\n        switch(unit.tier) {\r\n            case 1: return '★';\r\n            case 2: return '★★';\r\n            case 3: return '★★★';\r\n        }\r\n    }\r\n}","export const Types = {\r\n    BENCH: 'bench',\r\n    BOARD: 'board',\r\n    SELL: 'sell'\r\n}","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BoardUnit, Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n// import {Preview } from 'react-dnd-multi-backend';\r\n\r\ninterface CellProps {\r\n    boardUnit: BoardUnit;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n    onHoverStart: (unit: Unit, index: number) => void;\r\n    onHoverEnd: () => void;\r\n}\r\n\r\n// const generatePreview = (type, item, style) => {\r\n//     const modStyle = {\r\n//         ...style,\r\n//         width: '8em',\r\n//         height: '8em'\r\n//     };\r\n//     return <div className=\"cell\" style={modStyle}>\r\n//         <div className=\"contents\">\r\n//             <Champion unit={item.unit} />\r\n//         </div>\r\n//     </div>;\r\n// }\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n    boardUnit,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop,\r\n    onHoverStart,\r\n    onHoverEnd\r\n }) => {\r\n    const { unit, index } = boardUnit;\r\n    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BOARD },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BOARD\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });    \r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            className={`cell ${dragClass} ${activeClass} ${overClass}`}\r\n            onMouseEnter={() => onHoverStart(unit, index)}\r\n            onMouseLeave={() => onHoverEnd()}\r\n        >\r\n            <div ref={unit ? drag : undefined} className=\"contents\">\r\n                {Boolean(unit) && <Champion unit={unit} /> }\r\n            </div>\r\n            {/* <Preview generator={generatePreview} /> */}\r\n        </div>\r\n    );\r\n}","import { Summoner } from './summoner';\r\nimport { DraftStore } from './draft-store';\r\nimport { ChampCard } from './types';\r\n\r\ninterface CardPref {\r\n    card: ChampCard;\r\n    weight: number;\r\n}\r\n\r\nexport class AI {\r\n    purchaseUnit(summoner: Summoner): void {\r\n        //Limit to affordable cards\r\n        let potentialCards = summoner.currentHand\r\n            .filter(x => x !== null && x.champ.cost < summoner.gold) as ChampCard[];\r\n    \r\n        const spendingLimit = this.willingToSpend(summoner);\r\n        let totalSpent = 0;\r\n        \r\n        while (potentialCards.length > 0 && totalSpent < spendingLimit ) {\r\n            const card = this.getPurchasePreference(potentialCards, summoner, 0);\r\n        \r\n            if (card !== null) {\r\n                summoner.buyCard(card);\r\n                totalSpent += card.champ.cost;\r\n                potentialCards = potentialCards.filter(x => x.guid !== card.guid);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (spendingLimit - totalSpent > DraftStore.BUY_XP_COST) {\r\n            summoner.buyXP();\r\n        }\r\n\r\n    };\r\n    \r\n    //If they have more than 50 gold, spend all the excess down to 40\r\n    //Otherwise, spend down the the nearest 10, to a minimum of 5 gold\r\n    willingToSpend(summoner: Summoner): number {\r\n        if(summoner.gold > 50) {\r\n            return summoner.gold - 40;\r\n        } else {\r\n            const nearestTen = Math.floor(summoner.gold / 10) * 10;\r\n            return Math.min(Math.max(summoner.gold - nearestTen, 5), summoner.gold);\r\n        }\r\n    };\r\n\r\n    getPurchasePreference(cards: ChampCard[], summoner: Summoner, threshold: number): ChampCard|null {\r\n\r\n        //Add weights for:\r\n        // +1 Has this champ at Tier 1\r\n        // +3 Has this champ at Tier 2\r\n        // -10 Has this champ at Tier 3\r\n        // +1 Per synergy bonus\r\n        // +2 For a 5 cost\r\n        // +1 For a 4 cost\r\n\r\n        const allWeighted: CardPref[] = cards.map(card => {\r\n            let weight = this.getSynergyWeight(summoner, card)\r\n             + this.getExistingUnitWeight(summoner, card)\r\n             + this.getRarityWeight(card);\r\n\r\n            return {\r\n                card,\r\n                weight\r\n            };\r\n        });\r\n\r\n        const withinThreshold: CardPref[] = allWeighted.filter(pref => pref.weight >= threshold);\r\n        if (withinThreshold.length === 0) { return null; }\r\n\r\n        const topCard: CardPref = withinThreshold.reduce((best, current) => {\r\n            if (best == null) {\r\n                return current;\r\n            } else if (best !== null && best.weight < current.weight) {\r\n                return current;\r\n            } else {\r\n                return best;\r\n            }\r\n        }, withinThreshold[0]);\r\n\r\n\r\n        return topCard.card;\r\n    }\r\n\r\n    getSynergyWeight(summoner: Summoner, card: ChampCard): number {\r\n        const existingClasses = Object.keys (summoner.unitSynergies)\r\n        return card.champ.classes.filter(x => existingClasses.includes(x)).length;\r\n    }\r\n\r\n    getExistingUnitWeight(summoner: Summoner, card: ChampCard): number {\r\n        const matchingUnits = summoner.allUnits.filter(\r\n            x => x.unit !== undefined &&\r\n            x.unit.champ.id === card.champ.id\r\n        );\r\n\r\n        if(matchingUnits.length === 0) { return 0; }\r\n\r\n        const topTier = matchingUnits.map(x => x.unit !== undefined ? x.unit.tier : 0)\r\n            .sort()\r\n            .reverse()[0];\r\n\r\n        switch(topTier) {\r\n            case 1: return 1;\r\n            case 2: return 3;\r\n            case 3: return -10;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    getRarityWeight(card: ChampCard): number {\r\n        switch(card.champ.cost) {\r\n            case 5: return 2;\r\n            case 4: return 1;\r\n            default: return 0;\r\n        }\r\n    }\r\n}\r\n\r\n","import { DraftStore } from './draft-store';\r\nimport { observable, action, computed, autorun } from 'mobx';\r\nimport { UnitSelection, BoardUnit, ChampCard, Unit, Synergy, SynergyData, SynergyStage, ChampData } from './types';\r\nexport class Summoner {\r\n\r\n    draft: DraftStore;\r\n\r\n    @observable\r\n    currentHand: (ChampCard | null)[];\r\n\r\n    //All Units 0-8 = Bench, 9+ = Board\r\n    @observable\r\n    allUnits: BoardUnit[] = [];\r\n\r\n    @computed\r\n    get benchedUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(0,DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @computed \r\n    get boardUnits(): BoardUnit[] {\r\n        return this.allUnits.slice(DraftStore.BENCH_SIZE);\r\n    }\r\n\r\n    @observable\r\n    xp: number = 0;\r\n\r\n    @observable\r\n    nextLevelXp: number = 2;\r\n\r\n    @observable\r\n    level: number = 1;\r\n\r\n    @observable\r\n    gold: number = 3;\r\n\r\n    @observable\r\n    isHandLocked: boolean = false;\r\n\r\n    @observable\r\n    activeUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    hoveredUnit?: UnitSelection = undefined;\r\n\r\n    @observable\r\n    health: number = 100;\r\n\r\n    @computed\r\n    public get isAlive() {\r\n        return this.health > 0;\r\n    }\r\n\r\n    @observable\r\n    isPlayer: boolean;\r\n    \r\n    constructor(draft: DraftStore, isPlayer: boolean) {\r\n        this.draft = draft;\r\n\r\n        this.currentHand = [];\r\n        this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n        this.isPlayer = isPlayer;\r\n\r\n        this.allUnits = [...Array(DraftStore.BOARD_SIZE + DraftStore.BENCH_SIZE)].map(\r\n            (_, index) => ({unit: undefined, index})\r\n        );\r\n    }\r\n\r\n    @action\r\n    public start() {\r\n        this.drawHand();        \r\n        this.getRandomStartingUnit();\r\n    }\r\n\r\n    @action\r\n    private getRandomStartingUnit() {\r\n        this.draft.giveRandomStartingUnit(this);\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.gold += this.calculateIncome();\r\n        this.addXP(DraftStore.XP_PER_ROUND);\r\n        if(!this.isHandLocked) {\r\n            this.gold += DraftStore.REFRESH_COST;\r\n            this.refreshHand();    \r\n        }\r\n    }\r\n\r\n/****************\r\n *  CHEAT MENU\r\n ***************/\r\n    @observable\r\n    isCheatMenuOpen: boolean = false;\r\n\r\n    @action\r\n    public addGold(amount: number) {\r\n        this.gold += amount;\r\n    }\r\n\r\n    @action\r\n    public addChamp(champ: ChampData, tier: number) {\r\n        const unit: Unit = {\r\n            champ,\r\n            tier\r\n        };\r\n\r\n        const index = this.allUnits.findIndex(x => x.unit === undefined);\r\n\r\n        if (index !== -1) {\r\n            this.allUnits[index].unit = unit;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public showCheatMenu() { this.isCheatMenuOpen = true; }\r\n\r\n    @action\r\n    public hideCheatMenu() { this.isCheatMenuOpen = false; }\r\n\r\n\r\n/****************\r\n *  HEALTH\r\n ***************/\r\n\r\n     @action\r\n    public takeDamage(amount: number) {\r\n        this.health = Math.max(this.health - amount, 0);\r\n    }\r\n\r\n/**************\r\n * INCOME\r\n ****************/\r\n\r\npublic calculateIncome(): number {\r\n    const passive = this.calculatePassiveIncome();\r\n    const interest =  this.calculateInterest();\r\n    const streak = this.calculateStreakBonus();\r\n    return passive + interest + streak;\r\n}\r\n\r\npublic calculateInterest(): number {\r\n    return Math.min(Math.floor(this.gold / 10), DraftStore.MAXIMIM_INTEREST);\r\n}\r\n\r\npublic calculateStreakBonus(): number {\r\n    return 0; //TODO: Simulate Wins/Losses??\r\n}\r\n\r\npublic calculatePassiveIncome(): number {\r\n    switch(this.draft.roundCount) {\r\n        case 0: \r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 3;\r\n        case 4: return 4;\r\n        default: return 5;\r\n    }\r\n}\r\n\r\n/****************\r\n * XP AND LEVELS\r\n ****************/\r\n    \r\n    @action\r\n    public buyXP() {\r\n        if(this.gold < DraftStore.BUY_XP_COST) {\r\n            return;\r\n        }\r\n        this.addXP(4);\r\n        this.gold -= DraftStore.BUY_XP_COST;\r\n    }\r\n\r\n    @action\r\n    public addXP(amount: number) {\r\n        this.xp += amount;\r\n        //Level Up\r\n        if(this.xp >= this.nextLevelXp) {\r\n            this.xp = this.xp - this.nextLevelXp;\r\n            this.nextLevelXp = this.getXpForLevelUp(this.level + 1);\r\n            this.level += 1;\r\n        }\r\n    }\r\n\r\n    private getXpForLevelUp(currentLevel: number) {\r\n        const level = (this.draft.dataStore.levels).get(`level${currentLevel}`);\r\n        return level ? level.xp : 0;\r\n    }\r\n\r\n/****************\r\n * STORE / CARDS\r\n ****************/\r\n    \r\n    @action\r\n    public toggleHandLock() {\r\n        this.isHandLocked = !this.isHandLocked;\r\n    }\r\n\r\n    @action\r\n    public refreshHand() {\r\n        if (this.gold < DraftStore.REFRESH_COST) {\r\n            return;\r\n        }\r\n\r\n        //Return hand to pool\r\n        this.currentHand.forEach(card => {\r\n            if(card) {\r\n                this.draft.pool.push(card); //TODO: Refactor into draft.returnCardToPool\r\n            }\r\n        });\r\n\r\n        this.currentHand.splice(0, 5);\r\n\r\n        this.drawHand();\r\n        this.gold -= DraftStore.REFRESH_COST;\r\n    }\r\n\r\n\r\n    @action\r\n    public drawHand() {\r\n        while(this.currentHand.length < 5 && this.draft.pool.length > 0) {\r\n            this.drawCard();\r\n        }\r\n    }\r\n\r\n    @action\r\n    public drawCard() {\r\n        const card = this.draft.drawCard(this);\r\n        if (card === null) {\r\n            return;\r\n        }\r\n        this.currentHand.push(card);\r\n    }\r\n    \r\n    \r\n    @action\r\n    public buyCard(card: ChampCard) {\r\n\r\n        if(!card || !card.champ) {\r\n            return;\r\n        }\r\n\r\n        const { guid, champ } = card;\r\n        \r\n        let cost = champ.cost;\r\n        let removeExtra = false;\r\n\r\n        if(this.gold < champ.cost) {\r\n            return;\r\n        }\r\n\r\n        /* Several cases:\r\n        1. Player has empty space for unit, all good\r\n        2. Player has no empty space, but has 2 units of the same type at tier 1 already, merge to free up space\r\n        3. Player has no empty space, but has 1 unit of the same type at tier 1,\r\n           and the hand has 2 of that same champ\r\n           3a. If they have the gold to buy 2, buy both and merge to free up space\r\n           3b. If they don't have the gold, abort\r\n        */\r\n\r\n        //Add unit to bench\r\n        const firstEmpty = this.benchedUnits.findIndex(x => x.unit === undefined);\r\n        //Case 1\r\n        if(firstEmpty >= 0) {\r\n            this.allUnits[firstEmpty].unit = ({\r\n                tier: 1,\r\n                champ\r\n            });\r\n\r\n        } else {\r\n            const matchingUnits = this.allUnits\r\n                .map(bu => bu.unit)\r\n                .filter(unit => unit !== undefined && unit.tier === 1 && unit.champ.id === champ.id);\r\n\r\n            const availableToBuy = this.currentHand\r\n                .filter(card => card != null && card.champ.id === champ.id) as ChampCard[];\r\n\r\n            //Case 2\r\n            if (matchingUnits.length === 2) {\r\n                this.mergeUnits(1, availableToBuy); //Upgrade\r\n            } else if (matchingUnits.length === 1 && availableToBuy.length >= 2) {\r\n                if(this.gold >= champ.cost * 2) { //3a\r\n                    cost *= 2; //Increase Cost\r\n                    this.mergeUnits(1, availableToBuy); //Upgrade\r\n                    removeExtra = true; //Flag that theres a 2nd card to remove\r\n                } else { //3b\r\n                    return;\r\n                }\r\n            } else {        \r\n                return;\r\n            }\r\n        }\r\n\r\n        //Remove card\r\n        const index = this.currentHand.findIndex(c => c != null && c.guid === guid);\r\n        this.currentHand[index] = null;\r\n\r\n        //Remove 2nd card if needed\r\n        if(removeExtra) {\r\n            const index = this.currentHand.findIndex(card => card != null && card.champ.id === champ.id);\r\n            this.currentHand[index] = null;    \r\n        }\r\n\r\n        //Merge Units\r\n        this.mergeUnits(1);\r\n\r\n        //Pay money\r\n        this.gold -= cost;\r\n    }\r\n\r\n\r\n/*************************\r\n * UNITS (BENCH AND BOARD)\r\n *************************/\r\n\r\n    @action\r\n    private mergeUnits(tier: number = 1, extraCards: ChampCard[] = []) {\r\n        const extraUnits: Unit[] = extraCards.map(card => ({champ: card.champ, tier: 1}));\r\n        const boardUnits: (Unit|null)[] = this.boardUnits.map(bu => bu.unit || null);\r\n        const benchedUnits: (Unit|null)[] = this.benchedUnits.map(bu => bu.unit || null);\r\n        const totalUnits: (Unit|null)[] = [...benchedUnits, ...boardUnits, ...extraUnits];\r\n\r\n        const onlyCurrentTier = totalUnits.filter(c => c!== null && c.tier === tier) as Unit[];\r\n        \r\n        //Remap to count champions\r\n        const champCount = onlyCurrentTier.reduce((m: object, unit: Unit) => {\r\n            const id = unit.champ.id;\r\n            const val = (m as any)[id];\r\n            if (!val) {\r\n                (m as any)[id] = 1;\r\n            } else {\r\n                (m as any)[id] = val+1;\r\n            }\r\n            return m;\r\n        }, {});\r\n\r\n        //Find champs to merge\r\n        const idsToMerge = Object.keys(champCount).filter(x => (champCount as any)[x] >= 3);\r\n\r\n        //Merge and upgrade the champs\r\n        idsToMerge.forEach(id => {\r\n            const champ = (this.draft.dataStore.champions).find(c => c.id === id);\r\n            \r\n            //Remove all of that unit from bench and board\r\n            let index = -1;\r\n            let boardIndex = -1;\r\n            while(-1 !== (index = this.allUnits.findIndex(boardUnit => \r\n                boardUnit.unit !== undefined &&\r\n                boardUnit.unit.champ.id === id &&\r\n                boardUnit.unit.tier === tier\r\n            ))) {\r\n                this.allUnits[index].unit = undefined;\r\n                if (index >= DraftStore.BENCH_SIZE) {\r\n                    boardIndex = index;\r\n                }\r\n            }\r\n\r\n            //Add upgraded unit\r\n            //Priorise returning to board\r\n            if(boardIndex !== -1) {\r\n                this.allUnits[boardIndex].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;\r\n            } else {\r\n                const firstEmpty = this.allUnits.findIndex(x => x.unit === undefined);\r\n                this.allUnits[firstEmpty].unit = {\r\n                    tier: tier + 1,\r\n                    champ\r\n                } as Unit;    \r\n            }\r\n        });\r\n\r\n        if (tier === 1) {\r\n            this.mergeUnits(2);\r\n        }\r\n    }\r\n\r\n    @action unitPickedUp(selection: UnitSelection) {\r\n        this.activeUnit = selection;\r\n    }\r\n\r\n    @action unitDropped() {\r\n        this.activeUnit = undefined;\r\n    }\r\n\r\n    @action enterUnit(boardUnit: BoardUnit) {\r\n        this.hoveredUnit = boardUnit as UnitSelection;\r\n    }\r\n\r\n    @action exitUnit() {\r\n        this.hoveredUnit = undefined;\r\n    }\r\n\r\n    @action\r\n    public sellUnit(unitSelection: UnitSelection) {\r\n        const { unit, index } = unitSelection;\r\n\r\n        //If there is a unit to sell, give gold;\r\n        if(this.allUnits[index].unit !== undefined) {\r\n            this.allUnits[index].unit = undefined;\r\n            this.gold += DraftStore.getUnitSalePrice(unit);\r\n            this.draft.returnUnitToPool(unit);\r\n        }\r\n    }\r\n\r\n    @action\r\n    public sellHoveredUnit() {\r\n        if(this.hoveredUnit !== undefined) {\r\n            this.sellUnit(this.hoveredUnit);\r\n        }\r\n    }\r\n    \r\n    @action\r\n    public swapUnits(source: UnitSelection, dest: UnitSelection) {\r\n        this.moveUnit(dest.unit, source.index);\r\n        this.moveUnit(source.unit, dest.index);\r\n    }\r\n\r\n    @action shiftUnitToSlot(boardUnit: BoardUnit, index: number) {\r\n\r\n        //Only if the slot is empty\r\n        if (this.allUnits[index].unit !== undefined || !boardUnit.unit) {\r\n            return;\r\n        }\r\n\r\n        //If it's to be placed on the board, enforece the unit limit\r\n        if(index >= DraftStore.BENCH_SIZE && this.placedUnitCount >= this.level) {\r\n            return;\r\n        }\r\n\r\n        //Remove unit from current slot\r\n        this.clearUnitFromSlot(boardUnit);\r\n\r\n        //Place into new slot\r\n        this.allUnits[index].unit = boardUnit.unit;\r\n    }\r\n\r\n    private clearUnitFromSlot(boardUnit: BoardUnit) {\r\n        this.allUnits[boardUnit.index].unit = undefined;\r\n    }\r\n\r\n    @action\r\n    private moveUnit(unit: Unit, index: number) {\r\n        this.allUnits[index].unit = unit;\r\n    }\r\n\r\n\r\n/***************************\r\n * Synergies and Place Units\r\n ***************************/\r\n    \r\n    @computed\r\n    public get placedUnitCount() {\r\n        return this.boardUnits.filter(bu => bu.unit).length;\r\n    }\r\n\r\n\r\n    @observable\r\n    showPlaced: boolean = false;\r\n\r\n    public showPlacedDisposer = autorun(() => {\r\n        if (this.placedUnitCount !== -1) {\r\n            this.showPlaced = true;\r\n            setTimeout(() => {\r\n                this.showPlaced = false;\r\n            }, 500);          \r\n        }\r\n    });\r\n\r\n    @computed\r\n    public get unitSynergies() {\r\n        const champs: ChampData[] = this.boardUnits.map(x => x.unit).map(unit => unit ? unit.champ : null).filter(champ => champ !== null) as ChampData[];\r\n        const champIds: string[] = champs.map(champ => champ.id);\r\n        const uniqueChampIds: string[] = [...new Set(champIds)];\r\n\r\n        const champClasses: string[] = uniqueChampIds.map(id => this.draft.dataStore.champions.find(champ => champ.id === id)).flatMap(champ => champ === undefined ? [] : champ.classes).sort();\r\n        const classCounts: object = champClasses.reduce((obj, id) => {\r\n            obj[id] = (obj[id] || 0) + 1;\r\n            return obj;\r\n        }, {} as any);\r\n\r\n        return classCounts;\r\n    }\r\n\r\n    @computed\r\n    public get unitSynergiesWithTiers(): Synergy[] {\r\n        const activeClasses = Object.keys(this.unitSynergies);\r\n\r\n        return activeClasses.map( key => {\r\n            const synergyData = (this.draft.dataStore.synergies).get(key) as SynergyData;\r\n            const count = (this.unitSynergies as any)[key] as number;\r\n\r\n            let medalIndex = -1;\r\n            synergyData.stages.forEach((x: SynergyStage, index: number) => {\r\n                if (synergyData.exact && count === x.amount) {\r\n                    medalIndex = index;\r\n                } else if(synergyData && count >= x.amount) {\r\n                    medalIndex = index;\r\n                }\r\n            });\r\n\r\n            //Tiers, 1 = Gold, 2 = Silver, 3 = Bronze, 4 = Inactive;\r\n            const tier = medalIndex === -1 ? 4 : synergyData.stages.length - medalIndex;\r\n            const active = tier < 4;\r\n\r\n            return {\r\n                ...synergyData,\r\n                id: key,\r\n                tier,\r\n                active,\r\n                count\r\n            } as Synergy;\r\n        });\r\n    }\r\n}","import { observable, action } from 'mobx';\r\nimport { AI } from './ai';\r\nimport { Unit, ChampCard, UnitSelection } from './types';\r\nimport { DataStore } from './data-store';\r\nimport { Summoner } from './summoner';\r\n\r\nconst ai = new AI();\r\n\r\nexport class DraftStore {\r\n\r\n    public static REFRESH_COST = 2;\r\n    public static BUY_XP_COST = 4;\r\n    public static BENCH_SIZE = 9;\r\n    public static BOARD_SIZE = 10;\r\n    public static XP_PER_ROUND = 2;\r\n    public static MAXIMIM_INTEREST = 5;\r\n    public static TIME_PER_ROUND = 30;//seconds\r\n    public static INITIAL_PLAYER_COUNT = 8;\r\n\r\n    dataStore: DataStore;\r\n\r\n    @observable\r\n    pool: ChampCard[];\r\n\r\n    @observable\r\n    roundCount: number = 1;\r\n\r\n    @observable\r\n    isSplashOpen = true;\r\n\r\n    @observable\r\n    summoners: Summoner[];\r\n\r\n    @observable\r\n    player: Summoner;\r\n\r\n    constructor(dataStore: DataStore) {\r\n        this.dataStore = dataStore;\r\n        this.pool = [];\r\n        this.summoners = [...Array(DraftStore.INITIAL_PLAYER_COUNT)]\r\n            .map((_, index) => new Summoner(this, index === 0));\r\n        //First summoner is always the player;\r\n        this.player = this.summoners[0]; \r\n    }\r\n    \r\n    @action\r\n    public start() { \r\n        this.initializePool();\r\n\r\n        this.summoners.forEach(s => s.start());\r\n\r\n        this.isSplashOpen = false;\r\n\r\n        this.startTimer();\r\n\r\n        \r\n    }\r\n\r\n /*****************************\r\n * Unit Selection and Movement\r\n ******************************/\r\n\r\n    public giveRandomStartingUnit(summoner: Summoner) {\r\n        //Always start with a 2 cost unit\r\n        const potentialChamps = this.getChampsByCost(2);\r\n        const index = Math.floor(Math.random() * potentialChamps.length);\r\n        const champ = potentialChamps[index];\r\n\r\n        //Find that champ\r\n        const poolIndex = this.pool.findIndex(x => x.champ.id === champ.id);\r\n        //Remove from pool\r\n        this.pool.splice(poolIndex, 1);\r\n        \r\n        //Add to bench\r\n        summoner.allUnits[0].unit = {\r\n            tier: 1,\r\n            champ\r\n        };\r\n\r\n    }\r\n \r\n    public selectionsMatch(selA: UnitSelection, selB: UnitSelection): boolean {\r\n        return selA !== undefined\r\n            && selB !== undefined\r\n            && selB.index === selA.index\r\n    }\r\n\r\n    @action\r\n    public nextRound() {\r\n        this.roundCount += 1;   \r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;   \r\n\r\n        this.summoners.forEach((summoner, index) => {\r\n            summoner.nextRound();\r\n            if(index > 0) {\r\n                ai.purchaseUnit(summoner);\r\n            }\r\n        });\r\n    }\r\n\r\n    @observable\r\n    roundTimer: number = DraftStore.TIME_PER_ROUND;\r\n\r\n    @observable\r\n    isPaused: boolean = true;\r\n\r\n    private roundInterval: any = null;\r\n\r\n    @action\r\n    public startTimer() {\r\n        this.isPaused = false;\r\n\r\n        if(this.roundInterval) {\r\n            clearInterval(this.roundInterval);\r\n        }\r\n\r\n        this.roundTimer = DraftStore.TIME_PER_ROUND;\r\n\r\n        this.roundInterval = setInterval(() => {\r\n            if(this.isPaused) { return; }\r\n            --this.roundTimer;\r\n\r\n            if(this.roundTimer <= 0) {\r\n                this.nextRound();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    @action\r\n    public toggleTimer() {\r\n        this.isPaused = !this.isPaused;\r\n    }\r\n\r\n    @action\r\n    public  returnUnitToPool(unit: Unit) {\r\n        const {champ} = unit;\r\n        const unitsInPool = this.pool.filter(x => x.champ.id === champ.id);\r\n        const guids = unitsInPool.map(x => x.guid);\r\n\r\n        let iterations = 3**(unit.tier - 1);\r\n        \r\n        let index = 0;\r\n        while(iterations > 0) {\r\n            const guid = `${champ.id}_${index}`;\r\n            if(!guids.includes(guid)) {\r\n                --iterations;\r\n                this.pool.push({\r\n                    guid,\r\n                    champ\r\n                });\r\n            }\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    public static getUnitSalePrice(unit: Unit): number {\r\n        let tierBonus = (unit.tier - 1) * 2;\r\n        return unit.champ.cost + tierBonus;\r\n    }\r\n\r\n    @action\r\n    public drawCard(summoner: Summoner) {\r\n        const key = `level${summoner.level}`;\r\n        const levelData = this.dataStore.levels.get(key);\r\n\r\n        const availableLevels = [...new Set(this.pool.map(x => x.champ.cost))];\r\n        \r\n        const odds = levelData ? levelData.tierOdds : [0,0,0,0,0];\r\n\r\n        const oddsTotal = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x : 0)\r\n            .reduce((a, b) => a + b, 0);\r\n\r\n        const multiplier = 1 / oddsTotal;\r\n\r\n        const adjustedOdds = odds.map((x, index) => availableLevels\r\n            .includes(index + 1) ? x * multiplier : 0);\r\n\r\n        const roll = Math.random();\r\n\r\n        const cost = this.getCost(roll, adjustedOdds);\r\n\r\n        const cardSet = this.pool.filter(x => x.champ.cost === cost);\r\n\r\n        if(cardSet.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const index = Math.floor(Math.random() * cardSet.length);\r\n        const card = cardSet[index];\r\n\r\n        const indexToRemove = this.pool.findIndex(c => c !== null && c.guid === card.guid);\r\n        this.pool.splice(indexToRemove, 1);\r\n        \r\n        return card;\r\n    }\r\n\r\n    @action\r\n    public initializePool() {\r\n        this.pool = this.dataStore.champions.flatMap(champ => {\r\n            const poolSize = this.getInitialPoolSizeForChamp(champ.id);\r\n            return [...Array(poolSize)].map((_, index) => ({\r\n                champ,\r\n                guid: champ.id + \"_\" + index\r\n            } as ChampCard));            \r\n        });\r\n    }\r\n\r\n    private getInitialPoolSizeForChamp(id: string): number {\r\n        const { unitsPerTier, champions} = this.dataStore;\r\n        const champ = champions.find(x => x.id === id);\r\n        if(champ == null) { return 0; }\r\n\r\n        switch(champ.cost) {\r\n            case 1: return unitsPerTier.get(\"tier1\") || 0;\r\n            case 2: return unitsPerTier.get(\"tier2\") || 0;\r\n            case 3: return unitsPerTier.get(\"tier3\") || 0;\r\n            case 4: return unitsPerTier.get(\"tier4\") || 0;\r\n            case 5: return unitsPerTier.get(\"tier5\") || 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private getCost(roll: number, odds: number[]) {\r\n        let total = 0;\r\n        let index = 0;\r\n        while(total < roll) {\r\n            total += odds[index];\r\n            ++index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private getChampsByCost(cost: number) {\r\n        return this.dataStore.champions.filter(champ => champ.cost === cost);\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { Cell } from './cell';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport \"./board.scss\";\r\nimport { BOARD_HEIGHT, BOARD_WIDTH } from '../../utils';\r\nimport { BoardUnit, UnitSelection, Unit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface BoardProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Board extends React.Component<BoardProps> {\r\n\r\n    public constructor(props: BoardProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const { player } = this.props;\r\n\r\n        if(!player) { return; }\r\n\r\n        const rows = [...Array(BOARD_HEIGHT)].map((_, index) => this.getRow(index + 1));\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {rows.map((row: BoardUnit[], index: number) => this.renderRow(row, index))}                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRow(i: number): BoardUnit[] {\r\n        const { player } = this.props;\r\n        const start = BOARD_WIDTH * (i - 1);\r\n        const end = BOARD_WIDTH * i;\r\n\r\n        return player.boardUnits.slice(start, end);\r\n    }\r\n\r\n\r\n    private renderRow(boardUnits: BoardUnit[], row: number) {\r\n        const { player } = this.props;\r\n        const { activeUnit } = player;\r\n        const isOdd = row % 2 === 1;\r\n        const activeBoardIndex = (activeUnit !== undefined && activeUnit.index >= DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"board__row\" key={row}>\r\n                {isOdd && <div className=\"board-spacer spacer--left\"></div>}\r\n                {boardUnits.map(bu=>\r\n                    <Cell\r\n                        key={this.getKey(bu)}\r\n                        boardUnit={bu}\r\n                        isActive={activeBoardIndex === bu.index}\r\n                        onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                        onDropUnit={() => this.onDropUnit()}\r\n                        onDrop={(source, dest) => this.onDrop(source, dest)}                        \r\n                        onHoverStart={(unit, index) => this.onHoverStart(unit, index)}\r\n                        onHoverEnd={() => this.onHoverEnd()}                        \r\n                    />\r\n                )}\r\n                {!isOdd && <div className=\"board-spacer spacer--right\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onHoverStart(unit: Unit, index: number) {\r\n        if(unit !== undefined) {\r\n            this.props.player.enterUnit({\r\n                unit,\r\n                index\r\n            } as BoardUnit);\r\n        }\r\n    }\r\n\r\n    private onHoverEnd() {\r\n        this.props.player.exitUnit();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n\r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n    }\r\n    \r\n    private getKey(boardUnit: BoardUnit): string {\r\n        const { unit, index } = boardUnit;\r\n        if(unit === undefined) {\r\n            return `blank_${index}`;\r\n        } else {\r\n            return `${unit.champ.id}_${unit.tier}_${index}`;\r\n        }\r\n    }\r\n}","export const BOARD_WIDTH = 5;\r\nexport const BOARD_HEIGHT = 2;\r\n","import * as React from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { Unit } from '../../stores/types';\r\nimport { Champion } from '../champion/champion';\r\nimport { Types } from '../../stores/drag-drop';\r\n\r\ninterface BenchSlotProps {\r\n    unit?: Unit;\r\n    index: number;\r\n    isActive: boolean;\r\n    onPickUpUnit: (unit: Unit, index: number) => void;\r\n    onDropUnit: () => void;\r\n    onDrop:(source: any, dest: any) => void;\r\n    onHoverStart: (unit: Unit, index: number) => void;\r\n    onHoverEnd: () => void;\r\n}\r\n\r\nexport const BenchSlot: React.FC<BenchSlotProps> = ({\r\n    unit,\r\n    index,\r\n    isActive,\r\n    onPickUpUnit,\r\n    onDropUnit,\r\n    onDrop,\r\n    onHoverStart,\r\n    onHoverEnd\r\n}) => {    \r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { unit, index, type: Types.BENCH },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        begin: () => onPickUpUnit(unit, index),\r\n        end: () => onDropUnit()\r\n    });\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, {\r\n            unit,\r\n            index,\r\n            type: Types.BENCH\r\n        }),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const dragClass = isDragging ? 'dragging' : '';\r\n    const activeClass = isActive ? 'active' : '';\r\n    const overClass = isOver && canDrop ? 'drag-over' : '';\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            className={`bench-slot ${activeClass} ${dragClass} ${overClass}`}\r\n            onMouseEnter={() => onHoverStart(unit, index)}\r\n            onMouseLeave={() => onHoverEnd()}\r\n        >\r\n            <div ref={unit ? drag : undefined} className=\"bench-slot-inner\">\r\n                {Boolean(unit) && <Champion unit={unit} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { BenchSlot } from './bench-slot';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { UnitSelection, Unit, BoardUnit } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport './bench.scss';\r\n\r\ninterface BenchProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject('player')\r\n@observer\r\nexport class Bench extends React.Component<BenchProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { benchedUnits, activeUnit } = player;\r\n        const activeBenchIndex = (activeUnit !== undefined && activeUnit.index < DraftStore.BENCH_SIZE) ? activeUnit.index : -1;\r\n\r\n        return (\r\n            <div className=\"bench\">\r\n                {benchedUnits.map(({unit, index}) => <BenchSlot\r\n                    unit={unit}\r\n                    index={index}\r\n                    isActive={activeBenchIndex === index}\r\n                    onPickUpUnit={(unit, index) => this.onPickUpUnit(unit, index)}\r\n                    onDropUnit={() => this.onDropUnit()}\r\n                    onDrop={(source, dest) => this.onDrop(source, dest)}\r\n                    onHoverStart={(unit, index) => this.onHoverStart(unit, index)}\r\n                    onHoverEnd={() => this.onHoverEnd()}\r\n                    key={ `${unit ? unit.champ.id + '_' + unit.tier : 'blank'}_${index}`}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onPickUpUnit(unit: Unit, index: number) {\r\n        const { player } = this.props;\r\n        player.unitPickedUp({\r\n            unit,\r\n            index\r\n        } as UnitSelection);\r\n        \r\n    }\r\n\r\n    private onHoverStart(unit: Unit, index: number) {\r\n        if(unit !== undefined) {\r\n            this.props.player.enterUnit({\r\n                unit,\r\n                index\r\n            } as BoardUnit);\r\n        }\r\n    }\r\n\r\n    private onHoverEnd() {\r\n        this.props.player.exitUnit();\r\n    }\r\n\r\n    private onDropUnit() {\r\n        const { player } = this.props;\r\n        player.unitDropped();\r\n    }\r\n\r\n    private onDrop(source, dest) {\r\n        const { player } = this.props;\r\n        \r\n        const selectionA = {\r\n            unit: source.unit,\r\n            index: source.index\r\n        } as UnitSelection;\r\n        const selectionB = {\r\n            unit: dest.unit,\r\n            index: dest.index\r\n        } as UnitSelection;\r\n\r\n        //Is destination empty\r\n        if(!dest.unit) {\r\n            player.shiftUnitToSlot(selectionA, dest.index);\r\n        } else {\r\n            player.swapUnits(selectionA, selectionB);\r\n        }\r\n\r\n    }\r\n}","import * as React from 'react';\r\nimport './coin.scss'\r\nexport class Coin extends React.Component{\r\n    public render() {\r\n        return (\r\n            <i className=\"coin\">\r\n                <span className=\"a11y\">Coin</span>\r\n            </i>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface RefreshPanelProps {\r\n    refresh: () => void;\r\n    cost: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const RefreshPanel: React.FC<RefreshPanelProps> = ({ refresh, cost, setTooltip }) => {\r\n    return (<div className=\"sidebar-item refresh clickable\" onClick={refresh}>\r\n        <div className=\"refresh-panel\" onMouseEnter={() => setTooltip('refresh')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Refresh</div>\r\n                <div><Coin /> {cost}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/refresh.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { Coin } from '../../shared/coin';\r\n\r\ninterface BuyXpPanelProps {\r\n    buyXP: () => void;\r\n    cost: number;\r\n    xp: number;\r\n    nextLevelXp: number;\r\n    level: number;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\nexport const BuyXpPanel: React.FC<BuyXpPanelProps> = ({ buyXP, cost, xp, nextLevelXp, level, setTooltip }) => {\r\n    \r\n    const progress = xp/nextLevelXp * 100;\r\n    const progressStyle = {\r\n        transform: `translateX(${-100 + progress}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar-item xp clickable\" onClick={() => buyXP()}>\r\n            <div className=\"xp-panel\" onMouseEnter={() => setTooltip('buyXp')} onMouseLeave={() => setTooltip(\"\")}>\r\n                <div className=\"details\">\r\n                    <div className=\"content\">\r\n                        <div className=\"label\">Buy XP</div>\r\n                        <div className=\"sub-label\">\r\n                            <Coin />{cost}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon\" style={{backgroundImage: \"url(img/level-up.png)\"}}></div>\r\n                </div>\r\n                <div className=\"xp-progress\">\r\n                    <div className=\"xp-label\">{xp}/{nextLevelXp}</div>\r\n                    <div className=\"xp-progress-bar\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"fill\" style={progressStyle}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"level\">{level}</div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface NextRoundPanelProps {\r\n    nextRound: () => void;\r\n    setTooltip: (area: string) => void;\r\n    isPaused: boolean;\r\n    timer: number;\r\n    currentRound: number;\r\n}\r\n\r\nexport const NextRoundPanel: React.FC<NextRoundPanelProps> = ({ nextRound, setTooltip, isPaused, timer, currentRound }) => {\r\n    return (<div className=\"sidebar-item next-round clickable\" onClick={nextRound}>\r\n        <div className=\"next-round-panel\" onMouseEnter={() => setTooltip('nextRound')} onMouseLeave={() => setTooltip(\"\")}>\r\n            <div className=\"content\">\r\n                <div>Go to Next Round</div>\r\n                <div>{timer}s</div>\r\n                <div>Current Round: {currentRound}</div>\r\n            </div>\r\n            <div className=\"icon\" style={{backgroundImage: \"url(img/next-round.png)\"}}>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { observer } from 'mobx-react';\r\nimport { RefreshPanel } from './draft-refresh-panel';\r\nimport { BuyXpPanel } from './draft-xp-panel';\r\nimport { NextRoundPanel } from './next-round-panel';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface DraftSidebarProps {\r\n    draft: DraftStore;\r\n    player: Summoner;\r\n    setTooltip: (area: string) => void;\r\n}\r\n\r\n@observer\r\nexport class DraftSidebar extends React.Component<DraftSidebarProps> {\r\n    \r\n    public render() {\r\n\r\n        const { draft, player, setTooltip } = this.props;\r\n        const { xp, nextLevelXp, level } = player;\r\n\r\n        return (\r\n            <div className=\"draft-sidebar draft-area\">\r\n                <div className=\"draft-sidebar-items\">\r\n                    <RefreshPanel cost={DraftStore.REFRESH_COST} refresh={() => player.refreshHand()} setTooltip={setTooltip}/>\r\n                    <BuyXpPanel\r\n                        cost={DraftStore.BUY_XP_COST}\r\n                        buyXP={() => player.buyXP()}\r\n                        setTooltip={setTooltip}\r\n                        level={level}\r\n                        xp={xp}\r\n                        nextLevelXp={nextLevelXp}\r\n                    />\r\n                    <NextRoundPanel \r\n                        nextRound={() => draft.nextRound()}\r\n                        isPaused={draft.isPaused}\r\n                        setTooltip={setTooltip}\r\n                        timer={draft.roundTimer}\r\n                        currentRound={draft.roundCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Coin } from '../shared/coin';\r\n\r\ninterface CardProps {\r\n    card: ChampCard;\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\nexport class Card extends React.Component<CardProps> {\r\n\r\n    public render() {\r\n        const { card, action } = this.props;\r\n        const { name, cost, id, classes } = card.champ;\r\n\r\n        const style = {\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/img/champ-square/${id}.png)`\r\n        };\r\n\r\n        return (\r\n            <div className={`champ-card champ-cost-${cost}`} onClick={() => action(card)}>\r\n                <div className=\"decoration\"></div>\r\n                <div className={`hero champ-bg-${id}`} style={style}>\r\n                    {classes.map(x => <div className=\"champ-class\" key={x}>{x}</div>)}\r\n                </div>\r\n                <div className={`banner banner-cost-${cost}`}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"cost\">\r\n                        <span>\r\n                            <Coin />\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nexport class BlankCard extends React.Component {\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"champ-card blank\">\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Card } from './card';\r\nimport { BlankCard } from './blank-card';\r\nimport { observer } from 'mobx-react';\r\nimport { ChampCard } from '../../stores/types';\r\n\r\n\r\ninterface HandProps {\r\n    hand: (ChampCard|null)[];\r\n    action: (card: ChampCard) => void;\r\n}\r\n\r\n\r\n@observer\r\n export class Hand extends React.Component<HandProps> {\r\n\r\n    public render() {\r\n        const { hand, action } = this.props;\r\n\r\n        return (\r\n            <div className=\"hand\">\r\n                {hand.map( (card, index) => card !== null ? \r\n                    <Card card={card} key={card.guid} action={action}/> :\r\n                    <BlankCard key={index + '-blank'} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { ChampCard } from '../../stores/types';\r\nimport { Hand } from './hand';\r\nimport { observer } from 'mobx-react';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftMainProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class DraftMain extends React.Component<DraftMainProps> {\r\n    \r\n    public render() {\r\n\r\n        const { player } = this.props;\r\n        const { currentHand} = player;\r\n\r\n        return (\r\n            <div className=\"draft-main draft-area\">\r\n                <Hand hand={currentHand} action={x => this.buyCard(x)} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private buyCard(card: ChampCard) {\r\n        this.props.player.buyCard(card);\r\n    }\r\n}","import * as React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\nimport { Types } from '../../stores/drag-drop';\r\nimport { UnitSelection } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftSellProps {\r\n    player: Summoner\r\n}\r\n\r\nexport const DraftSell: React.FC<DraftSellProps> = ({ player }) => {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: [Types.BENCH, Types.BOARD],\r\n        drop: (item) => onDrop(item, player),\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const { activeUnit } = player;\r\n    if(activeUnit === undefined || !activeUnit.unit) { return null; }\r\n\r\n    const { name } = activeUnit.unit.champ;\r\n    const cost = DraftStore.getUnitSalePrice(activeUnit.unit);\r\n\r\n    const activeClass = canDrop && isOver ? 'active' : '';\r\n\r\n    return (\r\n        <div className={`draft-sell draft-area ${activeClass}`} ref={drop}>\r\n            <div className=\"\">\r\n                <i className=\"trash\"></i>\r\n            </div>\r\n            <div className=\"message\">\r\n                <span>Sell {name} for <Coin /> {cost} </span>\r\n            </div>\r\n            { canDrop && isOver && <div>\r\n                Release to Sell\r\n            </div> }\r\n            <div>[E] to sell unit while hovering over it</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst onDrop = (item: any, player: Summoner) => {\r\n    const selection = {\r\n        unit: item.unit,\r\n        index: item.index\r\n    } as UnitSelection;\r\n    player.sellUnit(selection);\r\n};","import * as React from 'react';\r\n\r\nimport \"./tooltip.scss\";\r\n\r\nimport { DraftStore } from '../../../stores/draft-store';\r\nimport { Coin } from '../../shared/coin';\r\nimport { Summoner } from '../../../stores/summoner';\r\n\r\ninterface TooltipProps {\r\n    tooltip: string;\r\n    draft: DraftStore;\r\n}\r\n\r\nconst renderRefreshTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Refresh [D]</div>\r\n            <div>Refresh the store with a new set of champions</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderBuyXpTooltip = () => {\r\n    return (\r\n        <>\r\n            <div>Buy XP [F]</div>\r\n            <div>Gain 4 XP toward your next level. Levelling up increases your team size and gives you access to stronger champions in the store. You gain 2 XP for free at the begninning of each round</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderIncomeTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <h4>Total Income <Coin /> {player.calculateIncome()}</h4>\r\n            <div>Passive Income <Coin /> +{player.calculatePassiveIncome()}</div>\r\n            <div>Interest (Max 5) <Coin /> +{player.calculateInterest()}</div>\r\n            <div>Win/Lost Streak <Coin /> +{player.calculateStreakBonus()}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderTimerTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Toggle the Timer [P]</div>\r\n            <div>{draft.isPaused ? 'Resume' : 'Pause'} the Round Timer</div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderNextRoundTooltip = (draft: DraftStore) => {\r\n    return (\r\n        <>\r\n            <div>Go to the next round [R]</div>\r\n            <div>Current Round: {draft.roundCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderLockHandTooltip = (player: Summoner) => {\r\n    return (\r\n        <>\r\n            <div>Toggle Lock [L]</div>\r\n            <div>{player.isHandLocked ? 'Unlock' : 'Lock'} your current store offerings.</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderCheatTooltip = () => {\r\n    return (\r\n        <div>Toggle Cheat Menu [C]</div>\r\n    );\r\n}\r\n\r\nconst getContent = (tooltip: string, draft: DraftStore): string|React.ReactElement|null => {\r\n    const { player } = draft;\r\n    switch(tooltip) {\r\n        case 'refresh': return renderRefreshTooltip();\r\n        case 'income': return renderIncomeTooltip(player);\r\n        case 'buyXp': return renderBuyXpTooltip();\r\n        case 'nextRound': return renderNextRoundTooltip(draft);\r\n        case 'lock': return renderLockHandTooltip(player);\r\n        case 'timer': return renderTimerTooltip(draft);\r\n        case 'cheat': return renderCheatTooltip();\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({tooltip, draft}) => {\r\n    if(!tooltip) { return null; }\r\n    const content = getContent(tooltip, draft);\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div className=\"inner\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './draft.scss';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { inject } from 'mobx-react';\r\nimport { observer } from 'mobx-react';\r\nimport { DraftSidebar } from './sidebar/draft-sidebar';\r\nimport { DraftMain } from './draft-main';\r\nimport { DraftSell } from './draft-sell';\r\nimport { Tooltip } from './tooltip/tooltip';\r\nimport { Coin } from '../shared/coin';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\ninterface DraftProps {\r\n    player: Summoner;\r\n    draft: DraftStore;\r\n}\r\n\r\ninterface DraftState {\r\n    activeTooltip: string;\r\n}\r\n\r\n@inject('draft', 'player')\r\n@observer\r\nexport class Draft extends React.Component<DraftProps, DraftState> {\r\n    \r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeTooltip: \"\"\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        const { player, draft } = this.props;\r\n        const { gold } = player;\r\n        const showSell = player.activeUnit !== undefined;\r\n\r\n        const setTooltip = ((area: string) => this.setState({\r\n            activeTooltip: area\r\n        }));\r\n\r\n        const lockClass = player.isHandLocked ? 'closed' : 'open';\r\n        const timerClass = draft.isPaused ? 'pause' : 'play';\r\n        return (\r\n            <section className=\"draft\">\r\n                {!showSell && <>\r\n                     <div className=\"draft-gold-bar above-bar\" \r\n                        onMouseEnter={() => setTooltip('income')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"draft-gold\">\r\n                            <Coin/>{gold}\r\n                        </div>\r\n                    </div>\r\n                     <div className=\"draft-timer-bar above-bar\" \r\n                        onClick={() => draft.toggleTimer()}\r\n                        onMouseEnter={() => setTooltip('timer')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"timer-bar\">                    \r\n                            <div className={`timer-icon ${timerClass}`}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"draft-lock above-bar\"\r\n                        onClick={() => player.toggleHandLock()}\r\n                        onMouseEnter={() => setTooltip('lock')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className={`lock ${lockClass}`}></div>\r\n                    </div> \r\n                    <div className=\"draft-cheat above-bar\"\r\n                        onClick={() => player.showCheatMenu()}\r\n                        onMouseEnter={() => setTooltip('cheat')}\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                    >\r\n                        <div className=\"cheat-icon\"></div>\r\n                    </div> \r\n                </>}\r\n                <DraftSidebar draft={draft} player={player} setTooltip={setTooltip} />\r\n                <DraftMain player={player} />              \r\n                {showSell && <DraftSell player={player} />}\r\n                <Tooltip tooltip={this.state.activeTooltip} draft={draft} />\r\n            </section>            \r\n        );\r\n    }\r\n\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\n\r\ninterface SynergyItemProps {\r\n    synergy: Synergy;\r\n}\r\n\r\n@observer\r\nexport class SynergyItem extends React.Component<SynergyItemProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergy } = this.props;\r\n        const { tier } = synergy;\r\n\r\n        const currentBonusIndex = tier === 4 ? -1 : synergy.stages.length - tier;\r\n        const nextBonus = tier === 1 ? -1 : synergy.stages[currentBonusIndex + 1].amount;\r\n        \r\n        const bonusesToDisplay = synergy.stages.slice(0, currentBonusIndex + 2).map((stage, index) => ({\r\n            ...stage,\r\n            isActive: synergy.exact ? index === currentBonusIndex : index <= currentBonusIndex\r\n        }));\r\n\r\n        return (\r\n            <div className={`synergy-item tier-${synergy.tier}`}>\r\n                <div className=\"icon-border\">\r\n                    <div className=\"icon\">\r\n                        <div className=\"icon__inner\">\r\n                        <img className=\"\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               <div className=\"synergy-details\">\r\n                <span className=\"synergy-name\">{synergy.name}</span>\r\n                <span>{synergy.count}{nextBonus > 0 && <span> / {nextBonus}</span>}</span>\r\n               </div>\r\n               <div className=\"tooltip\">\r\n                    <div className=\"tooltip-name\">\r\n                        <img className=\"tooltip-icon\" alt=\"icon\" src={`img/class-icons/${synergy.id}.png`} />\r\n                        <span>{synergy.name}</span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div className=\"bonus-section\">\r\n                        {synergy.passive && <div className=\"synergy-passive\">Passive: {synergy.passive}</div>}\r\n                        {bonusesToDisplay.length > 0 && synergy.base &&\r\n                            <div className=\"synergy-base\">Synergy: {synergy.base}</div>\r\n                        }\r\n                        {bonusesToDisplay.map((item) => \r\n                            <div className={`synergy-bonus ${item.isActive ? 'active' : ''}`} key={item.amount}>\r\n                                ({item.amount}) {item.bonus}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Synergy } from '../../stores/types';\r\nimport { SynergyItem } from './synergy-item';\r\n\r\ninterface SynergyTierProps {\r\n    synergies: Synergy[];\r\n    tier: number;\r\n}\r\n\r\n@observer\r\nexport class SynergyTier extends React.Component<SynergyTierProps> {\r\n\r\n    public render() {\r\n\r\n        const { synergies, tier} = this.props;\r\n        if(synergies.length === 0) { return null; }\r\n\r\n        return (\r\n            <div className=\"synergy-tier\">\r\n                <ul className={`tier-${tier}`}>\r\n                    {synergies.map( s => <SynergyItem synergy={s} key={s.id} />)}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { Synergy } from '../../stores/types';\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergyTier } from './synergy-tier';\r\n\r\nimport \"./synergy.scss\";\r\n\r\ninterface SynergiesBarProps {\r\n    player: Summoner;\r\n}\r\n\r\n@observer\r\nexport class SynergiesBar extends React.Component<SynergiesBarProps> {\r\n\r\n    public render() {\r\n        const goldItems = this.getSynergiesOfTier(1);\r\n        const silverItems = this.getSynergiesOfTier(2);\r\n        const bronzeItems = this.getSynergiesOfTier(3);\r\n        const greyItems = this.getSynergiesOfTier(4);\r\n\r\n        const tiers = [ goldItems, silverItems, bronzeItems, greyItems ];\r\n\r\n        return (\r\n            <section className=\"synergies\">\r\n                { tiers.map((tier, index) => \r\n                    <SynergyTier synergies={tier} tier={index + 1} key={`tier_${index + 1}`} />\r\n                )}\r\n            </section>\r\n\r\n        );\r\n    }\r\n\r\n    private getSynergiesOfTier(tier: number): Synergy[] {\r\n        const { player } = this.props;\r\n        return player.unitSynergiesWithTiers.filter(s => s.tier === tier);\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { Summoner } from '../../stores/summoner';\r\nimport { SynergiesBar } from '../synergies/synergies-bar';\r\n\r\nimport './simulation.scss';\r\n\r\ninterface SimulationProps {\r\n    player: Summoner;\r\n}\r\n\r\n@inject(\"player\")\r\n@observer\r\nexport class Simulation extends React.Component<SimulationProps> {\r\n    public render() {\r\n        const { player } = this.props;\r\n        const { level, showPlaced, placedUnitCount } = player;\r\n\r\n        const fadeClass = showPlaced ? '' : 'fade';\r\n\r\n        return (\r\n            <section className=\"simulation\">\r\n                <div className=\"inner\">\r\n                    <SynergiesBar player={player} />\r\n                    <div className={`level-section ${fadeClass}`}>\r\n                        <span>Units Placed: { placedUnitCount } / { level }</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\n\r\ninterface HotKeysProps{\r\n    draft: DraftStore;\r\n}\r\n\r\nexport const Hotkeys: React.FC<HotKeysProps> = ({draft}) =>{\r\n    useHotkeys(\"r\", () => draft.nextRound());\r\n    useHotkeys(\"p\", () => draft.toggleTimer());\r\n    useHotkeys('d', () => draft.player.refreshHand());\r\n    useHotkeys('f', () => draft.player.buyXP());\r\n    useHotkeys('l', () => draft.player.toggleHandLock());\r\n    useHotkeys('e', () => draft.player.sellHoveredUnit());\r\n    useHotkeys('c', () => draft.player.showCheatMenu());\r\n    return null;\r\n}","import * as React from 'react';\r\nimport { JsonEditor } from 'jsoneditor-react';\r\nimport ace from 'brace';\r\n\r\nimport 'jsoneditor-react/es/editor.min.css';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\ninterface EditorProps {\r\n    json: string;\r\n    onChange: (string) => void;\r\n    schema: any\r\n}\r\n\r\nexport class Editor extends React.Component<EditorProps> {\r\n    render() {\r\n        const { json, onChange, schema } = this.props;\r\n\r\n        return (\r\n            <section className=\"editor\">\r\n                <JsonEditor\r\n                    value={json}\r\n                    onChange={onChange}\r\n                    ace={ace}\r\n                    theme=\"ace/theme/github\"\r\n                    schema={schema}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { Editor } from './editor';\r\n\r\nimport \"./advanced.scss\";\r\n\r\ninterface AdvancedScreenProps {\r\n    data: DataStore;\r\n    close: () => void;\r\n}\r\n\r\ninterface AdvancedScreenState {\r\n    activeDataset: string;\r\n    updatedData: any;\r\n}\r\n\r\nexport class AdvancedScreen extends React.Component<AdvancedScreenProps, AdvancedScreenState> {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeDataset: null,\r\n            updatedData: null\r\n        };\r\n    }\r\n\r\n    private updateActiveDataset(json) {\r\n        const { activeDataset } = this.state;\r\n        if(!activeDataset) { return; }\r\n        this.setState({ updatedData: json });\r\n    }\r\n\r\n    private getActiveJson() {\r\n        const {activeDataset} = this.state;\r\n        const {data} = this.props;\r\n\r\n        const mapToObj = m => JSON.parse(JSON.stringify(m));\r\n\r\n        switch(activeDataset) {\r\n            case \"levels\": return mapToObj(data.levels);\r\n            case \"tiers\": return mapToObj(data.unitsPerTier);\r\n            case \"champs\": return mapToObj(data.champions);\r\n            case \"synergy\": return mapToObj(data.synergies);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private getSchema() {\r\n        return null;\r\n    }\r\n\r\n    private getTitle() {\r\n        switch(this.state.activeDataset) {\r\n            case \"levels\": return \"Levels\";\r\n            case \"tiers\": return \"Units Per Tier\";\r\n            case \"champs\": return \"Champions\";\r\n            case \"synergy\": return \"Synergies\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    private applyChanges() {\r\n        const { activeDataset, updatedData } = this.state;\r\n        const { data } = this.props;\r\n\r\n        if(!activeDataset) { return; }\r\n\r\n        if(activeDataset === 'levels') {\r\n            data.setLevelsFromJson(updatedData);\r\n        } else if (activeDataset === 'tiers') {\r\n            data.setUnitsPerTierFromJson(updatedData);\r\n        } else if (activeDataset === 'champs') {\r\n            data.setChampsFromJson(updatedData);\r\n        } else if (activeDataset === 'synergies') {\r\n            data.setSynergiesFromJson(updatedData);\r\n        }\r\n    }\r\n\r\n    private setActiveDataset(val) {\r\n        return () => {            \r\n            this.setState({\r\n                activeDataset: null\r\n            }, () => this.setState({\r\n                activeDataset: val\r\n            }));\r\n        }\r\n    }\r\n\r\n    public render(){\r\n        const { close } = this.props;\r\n        const { activeDataset } = this.state;\r\n\r\n        const setActive = this.setActiveDataset.bind(this);\r\n\r\n        return (\r\n            <div className=\"advanced-screen\">\r\n                <div className=\"inner\">\r\n                    <div className=\"close\" onClick={close}>X</div>\r\n                    <h2>Edit Datasets</h2>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={setActive('champs')}>\r\n                            Champions\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('tiers')}>\r\n                            Levels\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('levels')}>\r\n                            Units Per Tier\r\n                        </button>\r\n                        <button className=\"action\" onClick={setActive('synergy')}>\r\n                            Synergies\r\n                        </button>\r\n                    </div>\r\n                    {activeDataset && <div className=\"editor-container\">\r\n                        <h4>Editing {this.getTitle()}</h4>\r\n                        <Editor\r\n                            json={this.getActiveJson()}\r\n                            onChange={(j) => this.updateActiveDataset(j)}\r\n                            schema={this.getSchema()}\r\n                        />\r\n                        <button className=\"action\" onClick={() => this.applyChanges()}>Apply Changes</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   ","import * as React from 'react';\r\nimport \"./splash.scss\";\r\nimport { DataStore } from '../../stores/data-store';\r\nimport { AdvancedScreen } from '../advanced/advanced';\r\n\r\ninterface SplashScreenProps {\r\n    begin: () => void;\r\n    data: DataStore;\r\n}\r\n\r\ninterface SplaceScreenState {\r\n    isAdvancedOpen: boolean;\r\n}\r\n\r\nexport class SplashScreen extends React.Component<SplashScreenProps, SplaceScreenState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdvancedOpen: false\r\n        }\r\n    }\r\n\r\n    openAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: true\r\n        });\r\n    }\r\n\r\n    closeAdvancedPage() {\r\n        this.setState({\r\n            isAdvancedOpen: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { begin, data } = this.props;\r\n        const { isAdvancedOpen } = this.state;\r\n\r\n        return (\r\n            <div className=\"splash\">\r\n                {isAdvancedOpen && <AdvancedScreen data={data} close={() => this.closeAdvancedPage()} />}\r\n                <div className=\"island\"></div>  \r\n                <div className=\"inner\">\r\n                    <h1>Theory Draft for</h1>\r\n                    <div className=\"tft-logo\"></div>\r\n                    <p> A Drafting Simulator and Practice Tool</p>\r\n                    <div className=\"tft-end-cap\"></div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"action\" onClick={begin}>\r\n                            Begin\r\n                        </button>\r\n                        <button className=\"action minor\" onClick={() => this.openAdvancedPage()}>\r\n                            Advanced\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { observable, action } from 'mobx';\r\n\r\nimport * as tiersData from '../data/tiers.json';\r\nimport * as levelsData from '../data/levels.json';\r\nimport * as championsData from '../data/champions.json';\r\nimport { synergies } from '../data/synergies.json';\r\nimport { LevelData, ChampData, SynergyData } from './types';\r\n\r\nexport class DataStore {\r\n\r\n    @observable\r\n    unitsPerTier: Map<string, number>;\r\n\r\n    @observable\r\n    levels: Map<string, LevelData>;\r\n\r\n    @observable\r\n    champions: ChampData[];\r\n\r\n    @observable\r\n    synergies: Map<string, SynergyData>;\r\n\r\n    private static emptyChamp: ChampData = {\r\n        name: \"\",\r\n        id: \"\",\r\n        cost: 0,\r\n        classes: []\r\n    };\r\n\r\n    private static emptyLevel: LevelData = {\r\n        xp: 0,\r\n        tierOdds: [0, 0, 0, 0, 0]\r\n    };\r\n\r\n    constructor() {\r\n        this.unitsPerTier = new Map();\r\n        this.levels = new Map();\r\n        this.synergies = new Map();\r\n        this.champions = [];\r\n\r\n        this.setUnitsPerTierFromJson(tiersData.unitsPerTier);\r\n        this.setLevelsFromJson(levelsData.levels);\r\n        this.setChampsFromJson(championsData.champions);\r\n        this.setSynergiesFromJson(synergies);\r\n    }\r\n\r\n    @action\r\n    public setSynergiesFromJson(synergies: any) {\r\n        this.synergies.clear();\r\n        Object.keys(synergies).forEach(key => {\r\n            let val = synergies[key];\r\n            this.synergies.set(key, val);\r\n        });\r\n    }\r\n\r\n\r\n    @action\r\n    public setUnitsPerTierFromJson(unitsPerTier: any) {\r\n        this.unitsPerTier.clear();\r\n        Object.keys(unitsPerTier).forEach(key => {\r\n            let val = Number(unitsPerTier[key]) || 0;\r\n            this.unitsPerTier.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setLevelsFromJson(levels: any) {\r\n        this.levels.clear();\r\n        Object.keys(levels).forEach(key => {\r\n            let val = levels[key] as LevelData || DataStore.emptyLevel;\r\n            this.levels.set(key, val);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public setChampsFromJson(champions: any) {\r\n        this.champions.splice(0);//Inline clear an array\r\n        Object.keys(champions).forEach(key => {\r\n            let val = champions[key] as ChampData || null;\r\n            if(val !== null) {\r\n                this.champions.push(val);\r\n            }\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Summoner } from '../../stores/summoner';\r\n\r\nimport \"./opponents.scss\";\r\nimport { Champion } from '../champion/champion';\r\n\r\ninterface OpponentsProps {\r\n    draft: DraftStore;\r\n}\r\n\r\n@inject('draft')\r\n@observer\r\nexport class Opponents extends React.Component<OpponentsProps> {\r\n\r\n    public render() {\r\n        const { draft } = this.props;\r\n\r\n        const opponents = draft.summoners.slice(1);\r\n\r\n        return (\r\n            <section className=\"opponents\">\r\n                {opponents.map((x, index) => this.renderOpponent(x, index))}\r\n            </section>\r\n        );\r\n    }\r\n\r\n    public renderOpponent(opponent: Summoner, index: number) {\r\n        const units = opponent.allUnits\r\n            .filter(x => x.unit !== undefined)\r\n            .map(x => x.unit)\r\n            .sort((a,b) => b.champ.name < a.champ.name ? 1 : -1)\r\n            .sort((a, b) => b.tier - a.tier);\r\n        return (\r\n            <div className=\"summoner\" key={index}>\r\n                <div className=\"summoner-health\">{opponent.health}</div>\r\n                <div className=\"summoner-avatar\">\r\n                    <div className=\"health-display\"></div>\r\n                    <div className=\"summoner-avatar__icon\"></div>\r\n                </div>\r\n                <div className=\"summoner__units\">\r\n                        {units.map((x, index) => \r\n                            <div className=\"summoner__unit\" key={`${index}_${x.tier}_${x.champ.id}`}>\r\n                                <Champion unit={x} />\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DraftStore } from '../../stores/draft-store';\r\nimport { Coin } from '../shared/coin';\r\n\r\nimport \"./cheat-menu.scss\";\r\nimport { ChampData } from '../../stores/types';\r\n\r\ninterface CheatMenuProps {\r\n    draft: DraftStore;\r\n}\r\n\r\ninterface CheatMenuState {\r\n    champId: string;\r\n    tier: number;\r\n}\r\n\r\nexport class CheatMenu extends React.Component<CheatMenuProps, CheatMenuState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            champId: props.draft.dataStore.champions[0].id,\r\n            tier: 1\r\n        };\r\n\r\n        this.setTier = this.setTier.bind(this);\r\n        this.setChampId = this.setChampId.bind(this);\r\n    }\r\n\r\n    private setChampId(e) {\r\n        this.setState({\r\n            champId: e.target.value\r\n        });\r\n    }\r\n\r\n    private setTier(e) {\r\n        const parsed = Number.parseInt(e.currentTarget.value, 10);\r\n        const tier = Math.max(1, Math.min(3, (parsed || 1)));\r\n        this.setState({\r\n            tier\r\n        });\r\n    }\r\n\r\n    private addChamp() {\r\n        const { champId, tier } = this.state;\r\n        const { draft } = this.props;\r\n\r\n        const champ: ChampData = draft.dataStore.champions.find(x => x.id === champId);\r\n\r\n        console.log(\"Add Champ\", champ, champId);\r\n\r\n        if (champ) {\r\n            draft.player.addChamp(champ, tier);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { champId, tier } = this.state;\r\n        const { draft } = this.props;\r\n        const { player } = draft;\r\n\r\n        const champions = draft.dataStore.champions;\r\n\r\n        return (\r\n            <section className=\"cheat-menu\">\r\n                <div className=\"cheat-menu__inner\">\r\n                    <div className=\"row\">\r\n                        <select onChange={this.setChampId} value={champId || undefined}>\r\n                            {champions.map(c => \r\n                                <option key={c.id} value={c.id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            )}\r\n                        </select>\r\n                        <input type=\"number\" max={3} min={1} value={tier} onChange={this.setTier} />\r\n                        <button className=\"action\" onClick={() => this.addChamp()}>Add Champ</button>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"action\" onClick={() => player.addGold(10)}>+ <Coin />10</button>\r\n                        <button className=\"action\" onClick={() => player.addGold(100)}>+ <Coin />100</button>\r\n                        <button className=\"action\" onClick={() => player.hideCheatMenu()}>Close Menu</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch'\r\nimport { observable } from 'mobx';\r\nimport { Provider, observer } from 'mobx-react';\r\n\r\nimport './main-page.scss';\r\n\r\nimport { Board } from './board/board';\r\nimport { Bench } from './bench/bench';\r\nimport { Draft } from './draft/draft';\r\n\r\nimport { DraftStore } from '../stores/draft-store';\r\nimport { Simulation } from './simulation/simulation';\r\nimport { Hotkeys } from './hotkeys';\r\nimport { SplashScreen } from './splash/splash';\r\nimport { DataStore } from '../stores/data-store';\r\nimport { Opponents } from './simulation/opponents';\r\nimport { CheatMenu } from './cheat/cheat-menu';\r\n\r\n@observer\r\nexport class MainPage extends React.Component {\r\n\r\n    @observable\r\n    draftStore: DraftStore = null;\r\n\r\n    dataStore: DataStore = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dataStore = new DataStore();\r\n        this.draftStore = new DraftStore(this.dataStore);\r\n    }\r\n\r\n    public render() {\r\n        const showSp1ash = this.draftStore.isSplashOpen;\r\n\r\n        if(showSp1ash) {\r\n            return (\r\n                <section className=\"main-page\">\r\n                    <SplashScreen data={this.dataStore} begin={() => this.draftStore.start()} />\r\n                </section>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"main-page\">\r\n\t\t\t\t<DndProvider backend={MultiBackend(HTML5toTouch)}>\r\n                    <Provider draft={this.draftStore} player={this.draftStore.player}>\r\n                        <>\r\n                            <div className=\"board-container\">\r\n                                <div className=\"sidebar\">\r\n                                    <Simulation />\r\n                                </div>\r\n                                <div className=\"board-and-bench\">\r\n                                    <Board />\r\n                                    <Bench />\r\n                                </div>\r\n                                <div className=\"sidebar\">\r\n                                    <Opponents />\r\n                                </div>\r\n                            </div>\r\n                            <Draft />\r\n                            {this.draftStore.player.isCheatMenuOpen && <>\r\n                                <CheatMenu draft={this.draftStore} />\r\n                            </>}\r\n                        </>\r\n                    </Provider>\r\n                </DndProvider>\r\n                <Hotkeys draft={this.draftStore} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './app.scss';\r\nimport { MainPage } from './components/main-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"theory-draft app\">\r\n      <main>\r\n        <MainPage />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}